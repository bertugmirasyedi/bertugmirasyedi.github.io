{
  "hash": "d1dbd09300b4f2c443bfe01f676f4953",
  "result": {
    "markdown": "---\ntitle: 'Book Sales Forecasting: Comparison of Different Models Part 1'\ndescription: From Classical Statistical Models to XGBoost\ndate: '2022-12-19'\nimage: images/forecast.png\ncategories:\n  - python\n  - time series forecasting\n  - xgboost\n  - arima\n  - optuna\n  - hyperparameter tuning\nexecute:\n  freeze: true\nhighlight-style: breezedark\ntoc: true\nnumber-sections: true\n---\n\n![](images/forecast.png)\n\n# Introduction\n\nTime series forecasting is one of the most important fields in statistics because it is arguably the most impactful for businesses. Every business would love to know what will happen tomorrow, next week, next year, and next 10 years and make decisions accordingly. Although statistical methods for forecasting is not quite the silver bullet, it can help us make reasonable predictions under certain assumptions. \n\nIn this post, we will look into several forecasting models - both classical methods (e.g. ARIMA) and deep learing (LSTM, CNN) - and compare their performance using hyperparameter optimization with Optuna. I will also assume a business case in the end and the best model will be the less costly one. Let's start with some data analysis and visualizations.\n\n# Data Analysis and Preprocessing\n\nFirstly we will import the training dataset `train.csv` using `pandas` and check its columns and some sample values.\n\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport pandas\n\nlocal_filepath = \"train.csv\"\ndata = pandas.read_csv(local_filepath)\ndata.sample()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>row_id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2025</th>\n      <td>2025</td>\n      <td>2017-02-12</td>\n      <td>France</td>\n      <td>KaggleMart</td>\n      <td>Kaggle Getting Started</td>\n      <td>291</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndata.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>row_id</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>70128.000000</td>\n      <td>70128.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>35063.500000</td>\n      <td>194.296986</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>20244.354176</td>\n      <td>126.893874</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>19.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>17531.750000</td>\n      <td>95.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>35063.500000</td>\n      <td>148.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>52595.250000</td>\n      <td>283.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>70127.000000</td>\n      <td>986.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Check for missing values\nTrue in data.isnull()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nFalse\n```\n:::\n:::\n\n\nGood. The data don't have any missing values. Now let's check for what kind of values that the data have on each column.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nprint(f\"Unique country values are: {data['country'].unique()}\\n\")\nprint(f\"Unique store values are: {data['store'].unique()}\\n\")\nprint(f\"Unique product values are: {data['product'].unique()}\\n\")\nprint(f\"Unique dates are: {data['date'].unique()}\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnique country values are: ['Belgium' 'France' 'Germany' 'Italy' 'Poland' 'Spain']\n\nUnique store values are: ['KaggleMart' 'KaggleRama']\n\nUnique product values are: ['Kaggle Advanced Techniques' 'Kaggle Getting Started'\n 'Kaggle Recipe Book' 'Kaggle for Kids: One Smart Goose']\n\nUnique dates are: ['2017-01-01' '2017-01-02' '2017-01-03' ... '2020-12-29' '2020-12-30'\n '2020-12-31']\n\n```\n:::\n:::\n\n\nSo the table has the daily sales data of **4 different books**, sold in **2 different stores**, which have branches in **6 different countries**, spanning from **start of 2017 to the end of 2020**. Data has 70128 rows which means for each book, store and country combination we have 4 years of sales data.\n\nLet's plot a subset of the whole data.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code code-fold=\"true\"}\nimport plotly.express as px\n\nsubsets = pandas.DataFrame()\nsubsets[\"subset1\"] = data[\n    (data[\"country\"] == \"Germany\")\n    & (data[\"store\"] == \"KaggleMart\")\n    & (data[\"product\"] == \"Kaggle Advanced Techniques\")\n].set_index(\"date\")[\"num_sold\"]\n\nsubsets[\"subset2\"] = data[\n    (data[\"country\"] == \"Belgium\")\n    & (data[\"store\"] == \"KaggleRama\")\n    & (data[\"product\"] == \"Kaggle Getting Started\")\n].set_index(\"date\")[\"num_sold\"]\n\nsubsets[\"subset3\"] = data[\n    (data[\"country\"] == \"France\")\n    & (data[\"store\"] == \"KaggleMart\")\n    & (data[\"product\"] == \"Kaggle Recipe Book\")\n].set_index(\"date\")[\"num_sold\"]\n\nfig = px.line(\n    subsets,\n    width=700,\n    height=500,\n    title=\"Sales Data For Different Subsets\",\n    labels={\"value\": \"Sales\", \"date\": \"Date\", \"variable\": \"\"},\n)\nfig.show();\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"1d7239fb-74c9-4e6a-9dfc-67393bec3eea\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"1d7239fb-74c9-4e6a-9dfc-67393bec3eea\")) {                    Plotly.newPlot(                        \"1d7239fb-74c9-4e6a-9dfc-67393bec3eea\",                        [{\"hovertemplate\":\"=subset1<br>Date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"subset1\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"subset1\",\"showlegend\":true,\"x\":[\"2017-01-01\",\"2017-01-02\",\"2017-01-03\",\"2017-01-04\",\"2017-01-05\",\"2017-01-06\",\"2017-01-07\",\"2017-01-08\",\"2017-01-09\",\"2017-01-10\",\"2017-01-11\",\"2017-01-12\",\"2017-01-13\",\"2017-01-14\",\"2017-01-15\",\"2017-01-16\",\"2017-01-17\",\"2017-01-18\",\"2017-01-19\",\"2017-01-20\",\"2017-01-21\",\"2017-01-22\",\"2017-01-23\",\"2017-01-24\",\"2017-01-25\",\"2017-01-26\",\"2017-01-27\",\"2017-01-28\",\"2017-01-29\",\"2017-01-30\",\"2017-01-31\",\"2017-02-01\",\"2017-02-02\",\"2017-02-03\",\"2017-02-04\",\"2017-02-05\",\"2017-02-06\",\"2017-02-07\",\"2017-02-08\",\"2017-02-09\",\"2017-02-10\",\"2017-02-11\",\"2017-02-12\",\"2017-02-13\",\"2017-02-14\",\"2017-02-15\",\"2017-02-16\",\"2017-02-17\",\"2017-02-18\",\"2017-02-19\",\"2017-02-20\",\"2017-02-21\",\"2017-02-22\",\"2017-02-23\",\"2017-02-24\",\"2017-02-25\",\"2017-02-26\",\"2017-02-27\",\"2017-02-28\",\"2017-03-01\",\"2017-03-02\",\"2017-03-03\",\"2017-03-04\",\"2017-03-05\",\"2017-03-06\",\"2017-03-07\",\"2017-03-08\",\"2017-03-09\",\"2017-03-10\",\"2017-03-11\",\"2017-03-12\",\"2017-03-13\",\"2017-03-14\",\"2017-03-15\",\"2017-03-16\",\"2017-03-17\",\"2017-03-18\",\"2017-03-19\",\"2017-03-20\",\"2017-03-21\",\"2017-03-22\",\"2017-03-23\",\"2017-03-24\",\"2017-03-25\",\"2017-03-26\",\"2017-03-27\",\"2017-03-28\",\"2017-03-29\",\"2017-03-30\",\"2017-03-31\",\"2017-04-01\",\"2017-04-02\",\"2017-04-03\",\"2017-04-04\",\"2017-04-05\",\"2017-04-06\",\"2017-04-07\",\"2017-04-08\",\"2017-04-09\",\"2017-04-10\",\"2017-04-11\",\"2017-04-12\",\"2017-04-13\",\"2017-04-14\",\"2017-04-15\",\"2017-04-16\",\"2017-04-17\",\"2017-04-18\",\"2017-04-19\",\"2017-04-20\",\"2017-04-21\",\"2017-04-22\",\"2017-04-23\",\"2017-04-24\",\"2017-04-25\",\"2017-04-26\",\"2017-04-27\",\"2017-04-28\",\"2017-04-29\",\"2017-04-30\",\"2017-05-01\",\"2017-05-02\",\"2017-05-03\",\"2017-05-04\",\"2017-05-05\",\"2017-05-06\",\"2017-05-07\",\"2017-05-08\",\"2017-05-09\",\"2017-05-10\",\"2017-05-11\",\"2017-05-12\",\"2017-05-13\",\"2017-05-14\",\"2017-05-15\",\"2017-05-16\",\"2017-05-17\",\"2017-05-18\",\"2017-05-19\",\"2017-05-20\",\"2017-05-21\",\"2017-05-22\",\"2017-05-23\",\"2017-05-24\",\"2017-05-25\",\"2017-05-26\",\"2017-05-27\",\"2017-05-28\",\"2017-05-29\",\"2017-05-30\",\"2017-05-31\",\"2017-06-01\",\"2017-06-02\",\"2017-06-03\",\"2017-06-04\",\"2017-06-05\",\"2017-06-06\",\"2017-06-07\",\"2017-06-08\",\"2017-06-09\",\"2017-06-10\",\"2017-06-11\",\"2017-06-12\",\"2017-06-13\",\"2017-06-14\",\"2017-06-15\",\"2017-06-16\",\"2017-06-17\",\"2017-06-18\",\"2017-06-19\",\"2017-06-20\",\"2017-06-21\",\"2017-06-22\",\"2017-06-23\",\"2017-06-24\",\"2017-06-25\",\"2017-06-26\",\"2017-06-27\",\"2017-06-28\",\"2017-06-29\",\"2017-06-30\",\"2017-07-01\",\"2017-07-02\",\"2017-07-03\",\"2017-07-04\",\"2017-07-05\",\"2017-07-06\",\"2017-07-07\",\"2017-07-08\",\"2017-07-09\",\"2017-07-10\",\"2017-07-11\",\"2017-07-12\",\"2017-07-13\",\"2017-07-14\",\"2017-07-15\",\"2017-07-16\",\"2017-07-17\",\"2017-07-18\",\"2017-07-19\",\"2017-07-20\",\"2017-07-21\",\"2017-07-22\",\"2017-07-23\",\"2017-07-24\",\"2017-07-25\",\"2017-07-26\",\"2017-07-27\",\"2017-07-28\",\"2017-07-29\",\"2017-07-30\",\"2017-07-31\",\"2017-08-01\",\"2017-08-02\",\"2017-08-03\",\"2017-08-04\",\"2017-08-05\",\"2017-08-06\",\"2017-08-07\",\"2017-08-08\",\"2017-08-09\",\"2017-08-10\",\"2017-08-11\",\"2017-08-12\",\"2017-08-13\",\"2017-08-14\",\"2017-08-15\",\"2017-08-16\",\"2017-08-17\",\"2017-08-18\",\"2017-08-19\",\"2017-08-20\",\"2017-08-21\",\"2017-08-22\",\"2017-08-23\",\"2017-08-24\",\"2017-08-25\",\"2017-08-26\",\"2017-08-27\",\"2017-08-28\",\"2017-08-29\",\"2017-08-30\",\"2017-08-31\",\"2017-09-01\",\"2017-09-02\",\"2017-09-03\",\"2017-09-04\",\"2017-09-05\",\"2017-09-06\",\"2017-09-07\",\"2017-09-08\",\"2017-09-09\",\"2017-09-10\",\"2017-09-11\",\"2017-09-12\",\"2017-09-13\",\"2017-09-14\",\"2017-09-15\",\"2017-09-16\",\"2017-09-17\",\"2017-09-18\",\"2017-09-19\",\"2017-09-20\",\"2017-09-21\",\"2017-09-22\",\"2017-09-23\",\"2017-09-24\",\"2017-09-25\",\"2017-09-26\",\"2017-09-27\",\"2017-09-28\",\"2017-09-29\",\"2017-09-30\",\"2017-10-01\",\"2017-10-02\",\"2017-10-03\",\"2017-10-04\",\"2017-10-05\",\"2017-10-06\",\"2017-10-07\",\"2017-10-08\",\"2017-10-09\",\"2017-10-10\",\"2017-10-11\",\"2017-10-12\",\"2017-10-13\",\"2017-10-14\",\"2017-10-15\",\"2017-10-16\",\"2017-10-17\",\"2017-10-18\",\"2017-10-19\",\"2017-10-20\",\"2017-10-21\",\"2017-10-22\",\"2017-10-23\",\"2017-10-24\",\"2017-10-25\",\"2017-10-26\",\"2017-10-27\",\"2017-10-28\",\"2017-10-29\",\"2017-10-30\",\"2017-10-31\",\"2017-11-01\",\"2017-11-02\",\"2017-11-03\",\"2017-11-04\",\"2017-11-05\",\"2017-11-06\",\"2017-11-07\",\"2017-11-08\",\"2017-11-09\",\"2017-11-10\",\"2017-11-11\",\"2017-11-12\",\"2017-11-13\",\"2017-11-14\",\"2017-11-15\",\"2017-11-16\",\"2017-11-17\",\"2017-11-18\",\"2017-11-19\",\"2017-11-20\",\"2017-11-21\",\"2017-11-22\",\"2017-11-23\",\"2017-11-24\",\"2017-11-25\",\"2017-11-26\",\"2017-11-27\",\"2017-11-28\",\"2017-11-29\",\"2017-11-30\",\"2017-12-01\",\"2017-12-02\",\"2017-12-03\",\"2017-12-04\",\"2017-12-05\",\"2017-12-06\",\"2017-12-07\",\"2017-12-08\",\"2017-12-09\",\"2017-12-10\",\"2017-12-11\",\"2017-12-12\",\"2017-12-13\",\"2017-12-14\",\"2017-12-15\",\"2017-12-16\",\"2017-12-17\",\"2017-12-18\",\"2017-12-19\",\"2017-12-20\",\"2017-12-21\",\"2017-12-22\",\"2017-12-23\",\"2017-12-24\",\"2017-12-25\",\"2017-12-26\",\"2017-12-27\",\"2017-12-28\",\"2017-12-29\",\"2017-12-30\",\"2017-12-31\",\"2018-01-01\",\"2018-01-02\",\"2018-01-03\",\"2018-01-04\",\"2018-01-05\",\"2018-01-06\",\"2018-01-07\",\"2018-01-08\",\"2018-01-09\",\"2018-01-10\",\"2018-01-11\",\"2018-01-12\",\"2018-01-13\",\"2018-01-14\",\"2018-01-15\",\"2018-01-16\",\"2018-01-17\",\"2018-01-18\",\"2018-01-19\",\"2018-01-20\",\"2018-01-21\",\"2018-01-22\",\"2018-01-23\",\"2018-01-24\",\"2018-01-25\",\"2018-01-26\",\"2018-01-27\",\"2018-01-28\",\"2018-01-29\",\"2018-01-30\",\"2018-01-31\",\"2018-02-01\",\"2018-02-02\",\"2018-02-03\",\"2018-02-04\",\"2018-02-05\",\"2018-02-06\",\"2018-02-07\",\"2018-02-08\",\"2018-02-09\",\"2018-02-10\",\"2018-02-11\",\"2018-02-12\",\"2018-02-13\",\"2018-02-14\",\"2018-02-15\",\"2018-02-16\",\"2018-02-17\",\"2018-02-18\",\"2018-02-19\",\"2018-02-20\",\"2018-02-21\",\"2018-02-22\",\"2018-02-23\",\"2018-02-24\",\"2018-02-25\",\"2018-02-26\",\"2018-02-27\",\"2018-02-28\",\"2018-03-01\",\"2018-03-02\",\"2018-03-03\",\"2018-03-04\",\"2018-03-05\",\"2018-03-06\",\"2018-03-07\",\"2018-03-08\",\"2018-03-09\",\"2018-03-10\",\"2018-03-11\",\"2018-03-12\",\"2018-03-13\",\"2018-03-14\",\"2018-03-15\",\"2018-03-16\",\"2018-03-17\",\"2018-03-18\",\"2018-03-19\",\"2018-03-20\",\"2018-03-21\",\"2018-03-22\",\"2018-03-23\",\"2018-03-24\",\"2018-03-25\",\"2018-03-26\",\"2018-03-27\",\"2018-03-28\",\"2018-03-29\",\"2018-03-30\",\"2018-03-31\",\"2018-04-01\",\"2018-04-02\",\"2018-04-03\",\"2018-04-04\",\"2018-04-05\",\"2018-04-06\",\"2018-04-07\",\"2018-04-08\",\"2018-04-09\",\"2018-04-10\",\"2018-04-11\",\"2018-04-12\",\"2018-04-13\",\"2018-04-14\",\"2018-04-15\",\"2018-04-16\",\"2018-04-17\",\"2018-04-18\",\"2018-04-19\",\"2018-04-20\",\"2018-04-21\",\"2018-04-22\",\"2018-04-23\",\"2018-04-24\",\"2018-04-25\",\"2018-04-26\",\"2018-04-27\",\"2018-04-28\",\"2018-04-29\",\"2018-04-30\",\"2018-05-01\",\"2018-05-02\",\"2018-05-03\",\"2018-05-04\",\"2018-05-05\",\"2018-05-06\",\"2018-05-07\",\"2018-05-08\",\"2018-05-09\",\"2018-05-10\",\"2018-05-11\",\"2018-05-12\",\"2018-05-13\",\"2018-05-14\",\"2018-05-15\",\"2018-05-16\",\"2018-05-17\",\"2018-05-18\",\"2018-05-19\",\"2018-05-20\",\"2018-05-21\",\"2018-05-22\",\"2018-05-23\",\"2018-05-24\",\"2018-05-25\",\"2018-05-26\",\"2018-05-27\",\"2018-05-28\",\"2018-05-29\",\"2018-05-30\",\"2018-05-31\",\"2018-06-01\",\"2018-06-02\",\"2018-06-03\",\"2018-06-04\",\"2018-06-05\",\"2018-06-06\",\"2018-06-07\",\"2018-06-08\",\"2018-06-09\",\"2018-06-10\",\"2018-06-11\",\"2018-06-12\",\"2018-06-13\",\"2018-06-14\",\"2018-06-15\",\"2018-06-16\",\"2018-06-17\",\"2018-06-18\",\"2018-06-19\",\"2018-06-20\",\"2018-06-21\",\"2018-06-22\",\"2018-06-23\",\"2018-06-24\",\"2018-06-25\",\"2018-06-26\",\"2018-06-27\",\"2018-06-28\",\"2018-06-29\",\"2018-06-30\",\"2018-07-01\",\"2018-07-02\",\"2018-07-03\",\"2018-07-04\",\"2018-07-05\",\"2018-07-06\",\"2018-07-07\",\"2018-07-08\",\"2018-07-09\",\"2018-07-10\",\"2018-07-11\",\"2018-07-12\",\"2018-07-13\",\"2018-07-14\",\"2018-07-15\",\"2018-07-16\",\"2018-07-17\",\"2018-07-18\",\"2018-07-19\",\"2018-07-20\",\"2018-07-21\",\"2018-07-22\",\"2018-07-23\",\"2018-07-24\",\"2018-07-25\",\"2018-07-26\",\"2018-07-27\",\"2018-07-28\",\"2018-07-29\",\"2018-07-30\",\"2018-07-31\",\"2018-08-01\",\"2018-08-02\",\"2018-08-03\",\"2018-08-04\",\"2018-08-05\",\"2018-08-06\",\"2018-08-07\",\"2018-08-08\",\"2018-08-09\",\"2018-08-10\",\"2018-08-11\",\"2018-08-12\",\"2018-08-13\",\"2018-08-14\",\"2018-08-15\",\"2018-08-16\",\"2018-08-17\",\"2018-08-18\",\"2018-08-19\",\"2018-08-20\",\"2018-08-21\",\"2018-08-22\",\"2018-08-23\",\"2018-08-24\",\"2018-08-25\",\"2018-08-26\",\"2018-08-27\",\"2018-08-28\",\"2018-08-29\",\"2018-08-30\",\"2018-08-31\",\"2018-09-01\",\"2018-09-02\",\"2018-09-03\",\"2018-09-04\",\"2018-09-05\",\"2018-09-06\",\"2018-09-07\",\"2018-09-08\",\"2018-09-09\",\"2018-09-10\",\"2018-09-11\",\"2018-09-12\",\"2018-09-13\",\"2018-09-14\",\"2018-09-15\",\"2018-09-16\",\"2018-09-17\",\"2018-09-18\",\"2018-09-19\",\"2018-09-20\",\"2018-09-21\",\"2018-09-22\",\"2018-09-23\",\"2018-09-24\",\"2018-09-25\",\"2018-09-26\",\"2018-09-27\",\"2018-09-28\",\"2018-09-29\",\"2018-09-30\",\"2018-10-01\",\"2018-10-02\",\"2018-10-03\",\"2018-10-04\",\"2018-10-05\",\"2018-10-06\",\"2018-10-07\",\"2018-10-08\",\"2018-10-09\",\"2018-10-10\",\"2018-10-11\",\"2018-10-12\",\"2018-10-13\",\"2018-10-14\",\"2018-10-15\",\"2018-10-16\",\"2018-10-17\",\"2018-10-18\",\"2018-10-19\",\"2018-10-20\",\"2018-10-21\",\"2018-10-22\",\"2018-10-23\",\"2018-10-24\",\"2018-10-25\",\"2018-10-26\",\"2018-10-27\",\"2018-10-28\",\"2018-10-29\",\"2018-10-30\",\"2018-10-31\",\"2018-11-01\",\"2018-11-02\",\"2018-11-03\",\"2018-11-04\",\"2018-11-05\",\"2018-11-06\",\"2018-11-07\",\"2018-11-08\",\"2018-11-09\",\"2018-11-10\",\"2018-11-11\",\"2018-11-12\",\"2018-11-13\",\"2018-11-14\",\"2018-11-15\",\"2018-11-16\",\"2018-11-17\",\"2018-11-18\",\"2018-11-19\",\"2018-11-20\",\"2018-11-21\",\"2018-11-22\",\"2018-11-23\",\"2018-11-24\",\"2018-11-25\",\"2018-11-26\",\"2018-11-27\",\"2018-11-28\",\"2018-11-29\",\"2018-11-30\",\"2018-12-01\",\"2018-12-02\",\"2018-12-03\",\"2018-12-04\",\"2018-12-05\",\"2018-12-06\",\"2018-12-07\",\"2018-12-08\",\"2018-12-09\",\"2018-12-10\",\"2018-12-11\",\"2018-12-12\",\"2018-12-13\",\"2018-12-14\",\"2018-12-15\",\"2018-12-16\",\"2018-12-17\",\"2018-12-18\",\"2018-12-19\",\"2018-12-20\",\"2018-12-21\",\"2018-12-22\",\"2018-12-23\",\"2018-12-24\",\"2018-12-25\",\"2018-12-26\",\"2018-12-27\",\"2018-12-28\",\"2018-12-29\",\"2018-12-30\",\"2018-12-31\",\"2019-01-01\",\"2019-01-02\",\"2019-01-03\",\"2019-01-04\",\"2019-01-05\",\"2019-01-06\",\"2019-01-07\",\"2019-01-08\",\"2019-01-09\",\"2019-01-10\",\"2019-01-11\",\"2019-01-12\",\"2019-01-13\",\"2019-01-14\",\"2019-01-15\",\"2019-01-16\",\"2019-01-17\",\"2019-01-18\",\"2019-01-19\",\"2019-01-20\",\"2019-01-21\",\"2019-01-22\",\"2019-01-23\",\"2019-01-24\",\"2019-01-25\",\"2019-01-26\",\"2019-01-27\",\"2019-01-28\",\"2019-01-29\",\"2019-01-30\",\"2019-01-31\",\"2019-02-01\",\"2019-02-02\",\"2019-02-03\",\"2019-02-04\",\"2019-02-05\",\"2019-02-06\",\"2019-02-07\",\"2019-02-08\",\"2019-02-09\",\"2019-02-10\",\"2019-02-11\",\"2019-02-12\",\"2019-02-13\",\"2019-02-14\",\"2019-02-15\",\"2019-02-16\",\"2019-02-17\",\"2019-02-18\",\"2019-02-19\",\"2019-02-20\",\"2019-02-21\",\"2019-02-22\",\"2019-02-23\",\"2019-02-24\",\"2019-02-25\",\"2019-02-26\",\"2019-02-27\",\"2019-02-28\",\"2019-03-01\",\"2019-03-02\",\"2019-03-03\",\"2019-03-04\",\"2019-03-05\",\"2019-03-06\",\"2019-03-07\",\"2019-03-08\",\"2019-03-09\",\"2019-03-10\",\"2019-03-11\",\"2019-03-12\",\"2019-03-13\",\"2019-03-14\",\"2019-03-15\",\"2019-03-16\",\"2019-03-17\",\"2019-03-18\",\"2019-03-19\",\"2019-03-20\",\"2019-03-21\",\"2019-03-22\",\"2019-03-23\",\"2019-03-24\",\"2019-03-25\",\"2019-03-26\",\"2019-03-27\",\"2019-03-28\",\"2019-03-29\",\"2019-03-30\",\"2019-03-31\",\"2019-04-01\",\"2019-04-02\",\"2019-04-03\",\"2019-04-04\",\"2019-04-05\",\"2019-04-06\",\"2019-04-07\",\"2019-04-08\",\"2019-04-09\",\"2019-04-10\",\"2019-04-11\",\"2019-04-12\",\"2019-04-13\",\"2019-04-14\",\"2019-04-15\",\"2019-04-16\",\"2019-04-17\",\"2019-04-18\",\"2019-04-19\",\"2019-04-20\",\"2019-04-21\",\"2019-04-22\",\"2019-04-23\",\"2019-04-24\",\"2019-04-25\",\"2019-04-26\",\"2019-04-27\",\"2019-04-28\",\"2019-04-29\",\"2019-04-30\",\"2019-05-01\",\"2019-05-02\",\"2019-05-03\",\"2019-05-04\",\"2019-05-05\",\"2019-05-06\",\"2019-05-07\",\"2019-05-08\",\"2019-05-09\",\"2019-05-10\",\"2019-05-11\",\"2019-05-12\",\"2019-05-13\",\"2019-05-14\",\"2019-05-15\",\"2019-05-16\",\"2019-05-17\",\"2019-05-18\",\"2019-05-19\",\"2019-05-20\",\"2019-05-21\",\"2019-05-22\",\"2019-05-23\",\"2019-05-24\",\"2019-05-25\",\"2019-05-26\",\"2019-05-27\",\"2019-05-28\",\"2019-05-29\",\"2019-05-30\",\"2019-05-31\",\"2019-06-01\",\"2019-06-02\",\"2019-06-03\",\"2019-06-04\",\"2019-06-05\",\"2019-06-06\",\"2019-06-07\",\"2019-06-08\",\"2019-06-09\",\"2019-06-10\",\"2019-06-11\",\"2019-06-12\",\"2019-06-13\",\"2019-06-14\",\"2019-06-15\",\"2019-06-16\",\"2019-06-17\",\"2019-06-18\",\"2019-06-19\",\"2019-06-20\",\"2019-06-21\",\"2019-06-22\",\"2019-06-23\",\"2019-06-24\",\"2019-06-25\",\"2019-06-26\",\"2019-06-27\",\"2019-06-28\",\"2019-06-29\",\"2019-06-30\",\"2019-07-01\",\"2019-07-02\",\"2019-07-03\",\"2019-07-04\",\"2019-07-05\",\"2019-07-06\",\"2019-07-07\",\"2019-07-08\",\"2019-07-09\",\"2019-07-10\",\"2019-07-11\",\"2019-07-12\",\"2019-07-13\",\"2019-07-14\",\"2019-07-15\",\"2019-07-16\",\"2019-07-17\",\"2019-07-18\",\"2019-07-19\",\"2019-07-20\",\"2019-07-21\",\"2019-07-22\",\"2019-07-23\",\"2019-07-24\",\"2019-07-25\",\"2019-07-26\",\"2019-07-27\",\"2019-07-28\",\"2019-07-29\",\"2019-07-30\",\"2019-07-31\",\"2019-08-01\",\"2019-08-02\",\"2019-08-03\",\"2019-08-04\",\"2019-08-05\",\"2019-08-06\",\"2019-08-07\",\"2019-08-08\",\"2019-08-09\",\"2019-08-10\",\"2019-08-11\",\"2019-08-12\",\"2019-08-13\",\"2019-08-14\",\"2019-08-15\",\"2019-08-16\",\"2019-08-17\",\"2019-08-18\",\"2019-08-19\",\"2019-08-20\",\"2019-08-21\",\"2019-08-22\",\"2019-08-23\",\"2019-08-24\",\"2019-08-25\",\"2019-08-26\",\"2019-08-27\",\"2019-08-28\",\"2019-08-29\",\"2019-08-30\",\"2019-08-31\",\"2019-09-01\",\"2019-09-02\",\"2019-09-03\",\"2019-09-04\",\"2019-09-05\",\"2019-09-06\",\"2019-09-07\",\"2019-09-08\",\"2019-09-09\",\"2019-09-10\",\"2019-09-11\",\"2019-09-12\",\"2019-09-13\",\"2019-09-14\",\"2019-09-15\",\"2019-09-16\",\"2019-09-17\",\"2019-09-18\",\"2019-09-19\",\"2019-09-20\",\"2019-09-21\",\"2019-09-22\",\"2019-09-23\",\"2019-09-24\",\"2019-09-25\",\"2019-09-26\",\"2019-09-27\",\"2019-09-28\",\"2019-09-29\",\"2019-09-30\",\"2019-10-01\",\"2019-10-02\",\"2019-10-03\",\"2019-10-04\",\"2019-10-05\",\"2019-10-06\",\"2019-10-07\",\"2019-10-08\",\"2019-10-09\",\"2019-10-10\",\"2019-10-11\",\"2019-10-12\",\"2019-10-13\",\"2019-10-14\",\"2019-10-15\",\"2019-10-16\",\"2019-10-17\",\"2019-10-18\",\"2019-10-19\",\"2019-10-20\",\"2019-10-21\",\"2019-10-22\",\"2019-10-23\",\"2019-10-24\",\"2019-10-25\",\"2019-10-26\",\"2019-10-27\",\"2019-10-28\",\"2019-10-29\",\"2019-10-30\",\"2019-10-31\",\"2019-11-01\",\"2019-11-02\",\"2019-11-03\",\"2019-11-04\",\"2019-11-05\",\"2019-11-06\",\"2019-11-07\",\"2019-11-08\",\"2019-11-09\",\"2019-11-10\",\"2019-11-11\",\"2019-11-12\",\"2019-11-13\",\"2019-11-14\",\"2019-11-15\",\"2019-11-16\",\"2019-11-17\",\"2019-11-18\",\"2019-11-19\",\"2019-11-20\",\"2019-11-21\",\"2019-11-22\",\"2019-11-23\",\"2019-11-24\",\"2019-11-25\",\"2019-11-26\",\"2019-11-27\",\"2019-11-28\",\"2019-11-29\",\"2019-11-30\",\"2019-12-01\",\"2019-12-02\",\"2019-12-03\",\"2019-12-04\",\"2019-12-05\",\"2019-12-06\",\"2019-12-07\",\"2019-12-08\",\"2019-12-09\",\"2019-12-10\",\"2019-12-11\",\"2019-12-12\",\"2019-12-13\",\"2019-12-14\",\"2019-12-15\",\"2019-12-16\",\"2019-12-17\",\"2019-12-18\",\"2019-12-19\",\"2019-12-20\",\"2019-12-21\",\"2019-12-22\",\"2019-12-23\",\"2019-12-24\",\"2019-12-25\",\"2019-12-26\",\"2019-12-27\",\"2019-12-28\",\"2019-12-29\",\"2019-12-30\",\"2019-12-31\",\"2020-01-01\",\"2020-01-02\",\"2020-01-03\",\"2020-01-04\",\"2020-01-05\",\"2020-01-06\",\"2020-01-07\",\"2020-01-08\",\"2020-01-09\",\"2020-01-10\",\"2020-01-11\",\"2020-01-12\",\"2020-01-13\",\"2020-01-14\",\"2020-01-15\",\"2020-01-16\",\"2020-01-17\",\"2020-01-18\",\"2020-01-19\",\"2020-01-20\",\"2020-01-21\",\"2020-01-22\",\"2020-01-23\",\"2020-01-24\",\"2020-01-25\",\"2020-01-26\",\"2020-01-27\",\"2020-01-28\",\"2020-01-29\",\"2020-01-30\",\"2020-01-31\",\"2020-02-01\",\"2020-02-02\",\"2020-02-03\",\"2020-02-04\",\"2020-02-05\",\"2020-02-06\",\"2020-02-07\",\"2020-02-08\",\"2020-02-09\",\"2020-02-10\",\"2020-02-11\",\"2020-02-12\",\"2020-02-13\",\"2020-02-14\",\"2020-02-15\",\"2020-02-16\",\"2020-02-17\",\"2020-02-18\",\"2020-02-19\",\"2020-02-20\",\"2020-02-21\",\"2020-02-22\",\"2020-02-23\",\"2020-02-24\",\"2020-02-25\",\"2020-02-26\",\"2020-02-27\",\"2020-02-28\",\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\"],\"xaxis\":\"x\",\"y\":[700,537,510,417,484,492,477,464,400,358,369,355,410,453,470,394,362,360,398,430,475,455,363,416,410,398,418,456,535,431,403,407,423,447,492,520,401,412,422,400,432,410,508,413,433,410,409,449,541,505,420,473,429,450,429,490,498,429,432,413,424,474,484,534,427,443,459,423,448,516,486,443,463,419,418,486,540,462,455,433,423,439,451,523,539,459,453,412,440,459,536,540,467,452,437,452,491,513,533,456,488,479,411,489,521,587,502,484,524,498,598,578,601,498,478,477,406,479,540,492,408,412,456,498,539,603,610,483,467,417,444,459,498,517,446,430,384,395,456,459,546,395,424,396,391,456,538,585,469,435,467,431,454,441,461,408,418,428,446,451,497,539,419,419,392,383,401,450,497,355,385,373,382,342,474,420,354,392,366,366,374,471,447,344,349,374,324,360,469,440,352,361,363,349,352,389,415,345,333,362,356,347,399,406,378,356,380,360,354,427,436,323,313,325,310,330,338,397,347,328,344,324,333,371,367,322,318,307,359,343,356,355,331,309,296,299,344,348,363,306,318,290,292,310,365,342,303,301,318,299,309,332,377,306,326,295,300,323,335,384,318,315,293,311,319,354,350,276,277,281,289,301,346,350,311,305,292,296,315,384,417,296,295,288,294,314,356,343,310,293,286,272,306,324,339,294,312,302,275,317,314,388,312,327,328,321,355,424,453,355,340,341,347,328,332,376,342,344,303,333,338,368,402,323,342,336,313,358,382,405,342,322,340,330,370,415,434,349,347,368,364,358,407,430,372,355,383,339,367,396,452,353,371,382,346,409,393,480,402,447,479,577,735,746,748,610,516,436,421,482,529,532,461,406,412,436,476,448,480,398,434,388,426,437,489,516,434,455,421,429,441,515,543,402,423,442,454,463,532,521,439,439,472,446,476,493,548,440,411,451,445,439,591,559,437,457,470,446,503,572,567,475,491,486,462,492,519,580,480,495,426,499,501,525,575,487,447,496,490,503,537,518,453,477,478,452,540,598,549,490,501,471,457,537,629,626,539,527,563,604,623,629,645,560,522,464,454,537,582,544,462,469,429,487,543,581,620,509,459,468,500,486,557,590,484,489,502,524,572,637,696,483,488,495,477,466,595,602,501,534,518,506,527,596,556,470,509,493,550,569,572,605,497,452,449,492,442,549,536,446,437,429,449,463,481,503,445,416,440,461,437,472,478,450,413,405,437,440,494,486,417,404,386,421,403,470,483,423,394,387,369,413,417,472,402,387,424,399,388,439,475,362,414,389,377,425,468,426,367,403,382,373,376,442,432,370,332,352,356,368,417,411,362,340,324,388,407,401,396,370,357,374,364,384,415,427,340,378,326,389,374,370,384,339,322,303,324,355,388,402,320,330,355,314,307,396,377,315,333,343,308,350,385,398,337,315,295,343,349,402,403,322,322,328,310,277,348,377,301,319,320,323,324,372,434,330,360,301,334,354,378,410,323,319,312,322,336,354,402,314,309,314,301,341,409,351,334,313,309,336,355,330,404,313,339,345,364,351,397,395,338,332,315,332,406,357,405,319,350,356,299,324,385,391,339,330,355,361,367,392,434,378,338,357,363,416,397,455,341,390,372,368,380,415,468,362,374,361,404,413,453,468,349,381,453,528,659,832,877,689,546,537,426,468,558,547,470,416,433,396,427,499,491,378,413,398,420,418,513,460,420,404,437,407,451,514,540,449,462,454,418,478,506,509,431,428,469,413,495,495,578,442,484,421,517,464,541,533,416,458,441,470,487,498,569,423,495,466,512,486,529,501,461,482,480,473,476,562,580,438,430,432,468,453,578,553,483,484,512,456,474,533,523,466,450,517,509,511,575,573,475,495,459,463,528,533,541,490,477,487,491,509,515,509,411,480,508,467,474,530,547,532,539,561,560,554,653,622,471,457,500,489,560,565,633,508,545,471,473,496,554,516,457,453,501,447,455,505,515,446,447,420,451,442,512,554,427,447,409,433,449,530,481,499,465,489,430,451,505,506,401,403,423,475,456,514,508,447,394,398,399,436,443,518,408,415,409,406,393,431,479,371,405,392,369,409,471,442,387,343,350,391,371,407,440,349,354,365,335,383,373,439,355,367,363,334,405,437,447,320,357,366,344,341,406,397,329,344,360,329,334,404,393,316,348,369,324,331,368,350,332,317,317,315,320,355,361,296,312,286,320,325,342,361,297,327,320,299,336,350,370,318,297,295,301,350,337,377,316,319,302,282,303,344,350,296,290,294,312,326,375,380,291,295,309,302,322,364,396,358,363,368,350,303,364,353,301,309,320,292,337,338,400,306,300,309,287,326,358,341,322,297,315,273,317,336,373,295,322,332,326,350,363,400,291,330,336,342,300,353,446,304,321,328,336,347,362,418,320,356,355,352,373,399,402,343,361,334,331,352,408,403,338,339,397,370,360,422,457,360,361,344,349,375,371,412,328,336,407,421,563,576,889,616,588,478,508,445,471,491,423,425,413,408,426,469,470,371,414,383,418,404,483,487,368,392,394,448,429,435,484,407,414,387,434,452,497,468,409,413,435,430,426,469,536,426,421,451,392,459,484,415,424,475,457,425,479,495,504,437,398,424,456,468,494,432,405,405,386,378,428,413,440,399,382,365,402,395,434,512,394,427,420,399,409,485,453,371,377,363,399,421,473,486,394,454,333,327,323,405,369,319,301,311,303,332,358,411,377,356,423,392,417,419,435,332,322,342,313,321,380,401,306,315,290,318,400,434,487,366,417,414,379,401,412,444,408,343,360,376,359,417,418,338,334,368,348,342,436,502,364,386,380,394,362,417,380,371,379,425,404,438,431,508,341,358,369,367,354,405,422,334,348,371,380,342,367,450,350,349,361,360,342,381,421,341,357,347,334,398,397,412,363,368,354,333,385,370,411,349,358,306,346,353,362,389,327,318,314,323,331,360,394,306,325,315,313,318,354,401,298,308,309,296,294,362,337,311,311,299,311,304,338,332,305,317,320,288,282,338,338,291,288,289,263,293,294,330,307,280,287,261,297,340,333,279,262,257,279,316,324,376,283,264,278,261,289,311,357,263,289,275,263,294,324,317,259,267,281,272,279,333,329,288,282,307,323,303,353,362,310,272,292,278,304,343,352,276,328,279,296,296,367,349,263,293,291,290,278,361,359,315,274,302,318,347,315,394,292,302,305,292,338,377,355,308,293,306,279,309,329,361,308,332,338,307,337,370,444,361,291,319,336,338,402,368,333,304,344,345,355,365,401,349,315,324,327,370,391,443,337,349,374,352,400,451,562,638,636,666,620],\"yaxis\":\"y\",\"type\":\"scattergl\"},{\"hovertemplate\":\"=subset2<br>Date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"subset2\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"subset2\",\"showlegend\":true,\"x\":[\"2017-01-01\",\"2017-01-02\",\"2017-01-03\",\"2017-01-04\",\"2017-01-05\",\"2017-01-06\",\"2017-01-07\",\"2017-01-08\",\"2017-01-09\",\"2017-01-10\",\"2017-01-11\",\"2017-01-12\",\"2017-01-13\",\"2017-01-14\",\"2017-01-15\",\"2017-01-16\",\"2017-01-17\",\"2017-01-18\",\"2017-01-19\",\"2017-01-20\",\"2017-01-21\",\"2017-01-22\",\"2017-01-23\",\"2017-01-24\",\"2017-01-25\",\"2017-01-26\",\"2017-01-27\",\"2017-01-28\",\"2017-01-29\",\"2017-01-30\",\"2017-01-31\",\"2017-02-01\",\"2017-02-02\",\"2017-02-03\",\"2017-02-04\",\"2017-02-05\",\"2017-02-06\",\"2017-02-07\",\"2017-02-08\",\"2017-02-09\",\"2017-02-10\",\"2017-02-11\",\"2017-02-12\",\"2017-02-13\",\"2017-02-14\",\"2017-02-15\",\"2017-02-16\",\"2017-02-17\",\"2017-02-18\",\"2017-02-19\",\"2017-02-20\",\"2017-02-21\",\"2017-02-22\",\"2017-02-23\",\"2017-02-24\",\"2017-02-25\",\"2017-02-26\",\"2017-02-27\",\"2017-02-28\",\"2017-03-01\",\"2017-03-02\",\"2017-03-03\",\"2017-03-04\",\"2017-03-05\",\"2017-03-06\",\"2017-03-07\",\"2017-03-08\",\"2017-03-09\",\"2017-03-10\",\"2017-03-11\",\"2017-03-12\",\"2017-03-13\",\"2017-03-14\",\"2017-03-15\",\"2017-03-16\",\"2017-03-17\",\"2017-03-18\",\"2017-03-19\",\"2017-03-20\",\"2017-03-21\",\"2017-03-22\",\"2017-03-23\",\"2017-03-24\",\"2017-03-25\",\"2017-03-26\",\"2017-03-27\",\"2017-03-28\",\"2017-03-29\",\"2017-03-30\",\"2017-03-31\",\"2017-04-01\",\"2017-04-02\",\"2017-04-03\",\"2017-04-04\",\"2017-04-05\",\"2017-04-06\",\"2017-04-07\",\"2017-04-08\",\"2017-04-09\",\"2017-04-10\",\"2017-04-11\",\"2017-04-12\",\"2017-04-13\",\"2017-04-14\",\"2017-04-15\",\"2017-04-16\",\"2017-04-17\",\"2017-04-18\",\"2017-04-19\",\"2017-04-20\",\"2017-04-21\",\"2017-04-22\",\"2017-04-23\",\"2017-04-24\",\"2017-04-25\",\"2017-04-26\",\"2017-04-27\",\"2017-04-28\",\"2017-04-29\",\"2017-04-30\",\"2017-05-01\",\"2017-05-02\",\"2017-05-03\",\"2017-05-04\",\"2017-05-05\",\"2017-05-06\",\"2017-05-07\",\"2017-05-08\",\"2017-05-09\",\"2017-05-10\",\"2017-05-11\",\"2017-05-12\",\"2017-05-13\",\"2017-05-14\",\"2017-05-15\",\"2017-05-16\",\"2017-05-17\",\"2017-05-18\",\"2017-05-19\",\"2017-05-20\",\"2017-05-21\",\"2017-05-22\",\"2017-05-23\",\"2017-05-24\",\"2017-05-25\",\"2017-05-26\",\"2017-05-27\",\"2017-05-28\",\"2017-05-29\",\"2017-05-30\",\"2017-05-31\",\"2017-06-01\",\"2017-06-02\",\"2017-06-03\",\"2017-06-04\",\"2017-06-05\",\"2017-06-06\",\"2017-06-07\",\"2017-06-08\",\"2017-06-09\",\"2017-06-10\",\"2017-06-11\",\"2017-06-12\",\"2017-06-13\",\"2017-06-14\",\"2017-06-15\",\"2017-06-16\",\"2017-06-17\",\"2017-06-18\",\"2017-06-19\",\"2017-06-20\",\"2017-06-21\",\"2017-06-22\",\"2017-06-23\",\"2017-06-24\",\"2017-06-25\",\"2017-06-26\",\"2017-06-27\",\"2017-06-28\",\"2017-06-29\",\"2017-06-30\",\"2017-07-01\",\"2017-07-02\",\"2017-07-03\",\"2017-07-04\",\"2017-07-05\",\"2017-07-06\",\"2017-07-07\",\"2017-07-08\",\"2017-07-09\",\"2017-07-10\",\"2017-07-11\",\"2017-07-12\",\"2017-07-13\",\"2017-07-14\",\"2017-07-15\",\"2017-07-16\",\"2017-07-17\",\"2017-07-18\",\"2017-07-19\",\"2017-07-20\",\"2017-07-21\",\"2017-07-22\",\"2017-07-23\",\"2017-07-24\",\"2017-07-25\",\"2017-07-26\",\"2017-07-27\",\"2017-07-28\",\"2017-07-29\",\"2017-07-30\",\"2017-07-31\",\"2017-08-01\",\"2017-08-02\",\"2017-08-03\",\"2017-08-04\",\"2017-08-05\",\"2017-08-06\",\"2017-08-07\",\"2017-08-08\",\"2017-08-09\",\"2017-08-10\",\"2017-08-11\",\"2017-08-12\",\"2017-08-13\",\"2017-08-14\",\"2017-08-15\",\"2017-08-16\",\"2017-08-17\",\"2017-08-18\",\"2017-08-19\",\"2017-08-20\",\"2017-08-21\",\"2017-08-22\",\"2017-08-23\",\"2017-08-24\",\"2017-08-25\",\"2017-08-26\",\"2017-08-27\",\"2017-08-28\",\"2017-08-29\",\"2017-08-30\",\"2017-08-31\",\"2017-09-01\",\"2017-09-02\",\"2017-09-03\",\"2017-09-04\",\"2017-09-05\",\"2017-09-06\",\"2017-09-07\",\"2017-09-08\",\"2017-09-09\",\"2017-09-10\",\"2017-09-11\",\"2017-09-12\",\"2017-09-13\",\"2017-09-14\",\"2017-09-15\",\"2017-09-16\",\"2017-09-17\",\"2017-09-18\",\"2017-09-19\",\"2017-09-20\",\"2017-09-21\",\"2017-09-22\",\"2017-09-23\",\"2017-09-24\",\"2017-09-25\",\"2017-09-26\",\"2017-09-27\",\"2017-09-28\",\"2017-09-29\",\"2017-09-30\",\"2017-10-01\",\"2017-10-02\",\"2017-10-03\",\"2017-10-04\",\"2017-10-05\",\"2017-10-06\",\"2017-10-07\",\"2017-10-08\",\"2017-10-09\",\"2017-10-10\",\"2017-10-11\",\"2017-10-12\",\"2017-10-13\",\"2017-10-14\",\"2017-10-15\",\"2017-10-16\",\"2017-10-17\",\"2017-10-18\",\"2017-10-19\",\"2017-10-20\",\"2017-10-21\",\"2017-10-22\",\"2017-10-23\",\"2017-10-24\",\"2017-10-25\",\"2017-10-26\",\"2017-10-27\",\"2017-10-28\",\"2017-10-29\",\"2017-10-30\",\"2017-10-31\",\"2017-11-01\",\"2017-11-02\",\"2017-11-03\",\"2017-11-04\",\"2017-11-05\",\"2017-11-06\",\"2017-11-07\",\"2017-11-08\",\"2017-11-09\",\"2017-11-10\",\"2017-11-11\",\"2017-11-12\",\"2017-11-13\",\"2017-11-14\",\"2017-11-15\",\"2017-11-16\",\"2017-11-17\",\"2017-11-18\",\"2017-11-19\",\"2017-11-20\",\"2017-11-21\",\"2017-11-22\",\"2017-11-23\",\"2017-11-24\",\"2017-11-25\",\"2017-11-26\",\"2017-11-27\",\"2017-11-28\",\"2017-11-29\",\"2017-11-30\",\"2017-12-01\",\"2017-12-02\",\"2017-12-03\",\"2017-12-04\",\"2017-12-05\",\"2017-12-06\",\"2017-12-07\",\"2017-12-08\",\"2017-12-09\",\"2017-12-10\",\"2017-12-11\",\"2017-12-12\",\"2017-12-13\",\"2017-12-14\",\"2017-12-15\",\"2017-12-16\",\"2017-12-17\",\"2017-12-18\",\"2017-12-19\",\"2017-12-20\",\"2017-12-21\",\"2017-12-22\",\"2017-12-23\",\"2017-12-24\",\"2017-12-25\",\"2017-12-26\",\"2017-12-27\",\"2017-12-28\",\"2017-12-29\",\"2017-12-30\",\"2017-12-31\",\"2018-01-01\",\"2018-01-02\",\"2018-01-03\",\"2018-01-04\",\"2018-01-05\",\"2018-01-06\",\"2018-01-07\",\"2018-01-08\",\"2018-01-09\",\"2018-01-10\",\"2018-01-11\",\"2018-01-12\",\"2018-01-13\",\"2018-01-14\",\"2018-01-15\",\"2018-01-16\",\"2018-01-17\",\"2018-01-18\",\"2018-01-19\",\"2018-01-20\",\"2018-01-21\",\"2018-01-22\",\"2018-01-23\",\"2018-01-24\",\"2018-01-25\",\"2018-01-26\",\"2018-01-27\",\"2018-01-28\",\"2018-01-29\",\"2018-01-30\",\"2018-01-31\",\"2018-02-01\",\"2018-02-02\",\"2018-02-03\",\"2018-02-04\",\"2018-02-05\",\"2018-02-06\",\"2018-02-07\",\"2018-02-08\",\"2018-02-09\",\"2018-02-10\",\"2018-02-11\",\"2018-02-12\",\"2018-02-13\",\"2018-02-14\",\"2018-02-15\",\"2018-02-16\",\"2018-02-17\",\"2018-02-18\",\"2018-02-19\",\"2018-02-20\",\"2018-02-21\",\"2018-02-22\",\"2018-02-23\",\"2018-02-24\",\"2018-02-25\",\"2018-02-26\",\"2018-02-27\",\"2018-02-28\",\"2018-03-01\",\"2018-03-02\",\"2018-03-03\",\"2018-03-04\",\"2018-03-05\",\"2018-03-06\",\"2018-03-07\",\"2018-03-08\",\"2018-03-09\",\"2018-03-10\",\"2018-03-11\",\"2018-03-12\",\"2018-03-13\",\"2018-03-14\",\"2018-03-15\",\"2018-03-16\",\"2018-03-17\",\"2018-03-18\",\"2018-03-19\",\"2018-03-20\",\"2018-03-21\",\"2018-03-22\",\"2018-03-23\",\"2018-03-24\",\"2018-03-25\",\"2018-03-26\",\"2018-03-27\",\"2018-03-28\",\"2018-03-29\",\"2018-03-30\",\"2018-03-31\",\"2018-04-01\",\"2018-04-02\",\"2018-04-03\",\"2018-04-04\",\"2018-04-05\",\"2018-04-06\",\"2018-04-07\",\"2018-04-08\",\"2018-04-09\",\"2018-04-10\",\"2018-04-11\",\"2018-04-12\",\"2018-04-13\",\"2018-04-14\",\"2018-04-15\",\"2018-04-16\",\"2018-04-17\",\"2018-04-18\",\"2018-04-19\",\"2018-04-20\",\"2018-04-21\",\"2018-04-22\",\"2018-04-23\",\"2018-04-24\",\"2018-04-25\",\"2018-04-26\",\"2018-04-27\",\"2018-04-28\",\"2018-04-29\",\"2018-04-30\",\"2018-05-01\",\"2018-05-02\",\"2018-05-03\",\"2018-05-04\",\"2018-05-05\",\"2018-05-06\",\"2018-05-07\",\"2018-05-08\",\"2018-05-09\",\"2018-05-10\",\"2018-05-11\",\"2018-05-12\",\"2018-05-13\",\"2018-05-14\",\"2018-05-15\",\"2018-05-16\",\"2018-05-17\",\"2018-05-18\",\"2018-05-19\",\"2018-05-20\",\"2018-05-21\",\"2018-05-22\",\"2018-05-23\",\"2018-05-24\",\"2018-05-25\",\"2018-05-26\",\"2018-05-27\",\"2018-05-28\",\"2018-05-29\",\"2018-05-30\",\"2018-05-31\",\"2018-06-01\",\"2018-06-02\",\"2018-06-03\",\"2018-06-04\",\"2018-06-05\",\"2018-06-06\",\"2018-06-07\",\"2018-06-08\",\"2018-06-09\",\"2018-06-10\",\"2018-06-11\",\"2018-06-12\",\"2018-06-13\",\"2018-06-14\",\"2018-06-15\",\"2018-06-16\",\"2018-06-17\",\"2018-06-18\",\"2018-06-19\",\"2018-06-20\",\"2018-06-21\",\"2018-06-22\",\"2018-06-23\",\"2018-06-24\",\"2018-06-25\",\"2018-06-26\",\"2018-06-27\",\"2018-06-28\",\"2018-06-29\",\"2018-06-30\",\"2018-07-01\",\"2018-07-02\",\"2018-07-03\",\"2018-07-04\",\"2018-07-05\",\"2018-07-06\",\"2018-07-07\",\"2018-07-08\",\"2018-07-09\",\"2018-07-10\",\"2018-07-11\",\"2018-07-12\",\"2018-07-13\",\"2018-07-14\",\"2018-07-15\",\"2018-07-16\",\"2018-07-17\",\"2018-07-18\",\"2018-07-19\",\"2018-07-20\",\"2018-07-21\",\"2018-07-22\",\"2018-07-23\",\"2018-07-24\",\"2018-07-25\",\"2018-07-26\",\"2018-07-27\",\"2018-07-28\",\"2018-07-29\",\"2018-07-30\",\"2018-07-31\",\"2018-08-01\",\"2018-08-02\",\"2018-08-03\",\"2018-08-04\",\"2018-08-05\",\"2018-08-06\",\"2018-08-07\",\"2018-08-08\",\"2018-08-09\",\"2018-08-10\",\"2018-08-11\",\"2018-08-12\",\"2018-08-13\",\"2018-08-14\",\"2018-08-15\",\"2018-08-16\",\"2018-08-17\",\"2018-08-18\",\"2018-08-19\",\"2018-08-20\",\"2018-08-21\",\"2018-08-22\",\"2018-08-23\",\"2018-08-24\",\"2018-08-25\",\"2018-08-26\",\"2018-08-27\",\"2018-08-28\",\"2018-08-29\",\"2018-08-30\",\"2018-08-31\",\"2018-09-01\",\"2018-09-02\",\"2018-09-03\",\"2018-09-04\",\"2018-09-05\",\"2018-09-06\",\"2018-09-07\",\"2018-09-08\",\"2018-09-09\",\"2018-09-10\",\"2018-09-11\",\"2018-09-12\",\"2018-09-13\",\"2018-09-14\",\"2018-09-15\",\"2018-09-16\",\"2018-09-17\",\"2018-09-18\",\"2018-09-19\",\"2018-09-20\",\"2018-09-21\",\"2018-09-22\",\"2018-09-23\",\"2018-09-24\",\"2018-09-25\",\"2018-09-26\",\"2018-09-27\",\"2018-09-28\",\"2018-09-29\",\"2018-09-30\",\"2018-10-01\",\"2018-10-02\",\"2018-10-03\",\"2018-10-04\",\"2018-10-05\",\"2018-10-06\",\"2018-10-07\",\"2018-10-08\",\"2018-10-09\",\"2018-10-10\",\"2018-10-11\",\"2018-10-12\",\"2018-10-13\",\"2018-10-14\",\"2018-10-15\",\"2018-10-16\",\"2018-10-17\",\"2018-10-18\",\"2018-10-19\",\"2018-10-20\",\"2018-10-21\",\"2018-10-22\",\"2018-10-23\",\"2018-10-24\",\"2018-10-25\",\"2018-10-26\",\"2018-10-27\",\"2018-10-28\",\"2018-10-29\",\"2018-10-30\",\"2018-10-31\",\"2018-11-01\",\"2018-11-02\",\"2018-11-03\",\"2018-11-04\",\"2018-11-05\",\"2018-11-06\",\"2018-11-07\",\"2018-11-08\",\"2018-11-09\",\"2018-11-10\",\"2018-11-11\",\"2018-11-12\",\"2018-11-13\",\"2018-11-14\",\"2018-11-15\",\"2018-11-16\",\"2018-11-17\",\"2018-11-18\",\"2018-11-19\",\"2018-11-20\",\"2018-11-21\",\"2018-11-22\",\"2018-11-23\",\"2018-11-24\",\"2018-11-25\",\"2018-11-26\",\"2018-11-27\",\"2018-11-28\",\"2018-11-29\",\"2018-11-30\",\"2018-12-01\",\"2018-12-02\",\"2018-12-03\",\"2018-12-04\",\"2018-12-05\",\"2018-12-06\",\"2018-12-07\",\"2018-12-08\",\"2018-12-09\",\"2018-12-10\",\"2018-12-11\",\"2018-12-12\",\"2018-12-13\",\"2018-12-14\",\"2018-12-15\",\"2018-12-16\",\"2018-12-17\",\"2018-12-18\",\"2018-12-19\",\"2018-12-20\",\"2018-12-21\",\"2018-12-22\",\"2018-12-23\",\"2018-12-24\",\"2018-12-25\",\"2018-12-26\",\"2018-12-27\",\"2018-12-28\",\"2018-12-29\",\"2018-12-30\",\"2018-12-31\",\"2019-01-01\",\"2019-01-02\",\"2019-01-03\",\"2019-01-04\",\"2019-01-05\",\"2019-01-06\",\"2019-01-07\",\"2019-01-08\",\"2019-01-09\",\"2019-01-10\",\"2019-01-11\",\"2019-01-12\",\"2019-01-13\",\"2019-01-14\",\"2019-01-15\",\"2019-01-16\",\"2019-01-17\",\"2019-01-18\",\"2019-01-19\",\"2019-01-20\",\"2019-01-21\",\"2019-01-22\",\"2019-01-23\",\"2019-01-24\",\"2019-01-25\",\"2019-01-26\",\"2019-01-27\",\"2019-01-28\",\"2019-01-29\",\"2019-01-30\",\"2019-01-31\",\"2019-02-01\",\"2019-02-02\",\"2019-02-03\",\"2019-02-04\",\"2019-02-05\",\"2019-02-06\",\"2019-02-07\",\"2019-02-08\",\"2019-02-09\",\"2019-02-10\",\"2019-02-11\",\"2019-02-12\",\"2019-02-13\",\"2019-02-14\",\"2019-02-15\",\"2019-02-16\",\"2019-02-17\",\"2019-02-18\",\"2019-02-19\",\"2019-02-20\",\"2019-02-21\",\"2019-02-22\",\"2019-02-23\",\"2019-02-24\",\"2019-02-25\",\"2019-02-26\",\"2019-02-27\",\"2019-02-28\",\"2019-03-01\",\"2019-03-02\",\"2019-03-03\",\"2019-03-04\",\"2019-03-05\",\"2019-03-06\",\"2019-03-07\",\"2019-03-08\",\"2019-03-09\",\"2019-03-10\",\"2019-03-11\",\"2019-03-12\",\"2019-03-13\",\"2019-03-14\",\"2019-03-15\",\"2019-03-16\",\"2019-03-17\",\"2019-03-18\",\"2019-03-19\",\"2019-03-20\",\"2019-03-21\",\"2019-03-22\",\"2019-03-23\",\"2019-03-24\",\"2019-03-25\",\"2019-03-26\",\"2019-03-27\",\"2019-03-28\",\"2019-03-29\",\"2019-03-30\",\"2019-03-31\",\"2019-04-01\",\"2019-04-02\",\"2019-04-03\",\"2019-04-04\",\"2019-04-05\",\"2019-04-06\",\"2019-04-07\",\"2019-04-08\",\"2019-04-09\",\"2019-04-10\",\"2019-04-11\",\"2019-04-12\",\"2019-04-13\",\"2019-04-14\",\"2019-04-15\",\"2019-04-16\",\"2019-04-17\",\"2019-04-18\",\"2019-04-19\",\"2019-04-20\",\"2019-04-21\",\"2019-04-22\",\"2019-04-23\",\"2019-04-24\",\"2019-04-25\",\"2019-04-26\",\"2019-04-27\",\"2019-04-28\",\"2019-04-29\",\"2019-04-30\",\"2019-05-01\",\"2019-05-02\",\"2019-05-03\",\"2019-05-04\",\"2019-05-05\",\"2019-05-06\",\"2019-05-07\",\"2019-05-08\",\"2019-05-09\",\"2019-05-10\",\"2019-05-11\",\"2019-05-12\",\"2019-05-13\",\"2019-05-14\",\"2019-05-15\",\"2019-05-16\",\"2019-05-17\",\"2019-05-18\",\"2019-05-19\",\"2019-05-20\",\"2019-05-21\",\"2019-05-22\",\"2019-05-23\",\"2019-05-24\",\"2019-05-25\",\"2019-05-26\",\"2019-05-27\",\"2019-05-28\",\"2019-05-29\",\"2019-05-30\",\"2019-05-31\",\"2019-06-01\",\"2019-06-02\",\"2019-06-03\",\"2019-06-04\",\"2019-06-05\",\"2019-06-06\",\"2019-06-07\",\"2019-06-08\",\"2019-06-09\",\"2019-06-10\",\"2019-06-11\",\"2019-06-12\",\"2019-06-13\",\"2019-06-14\",\"2019-06-15\",\"2019-06-16\",\"2019-06-17\",\"2019-06-18\",\"2019-06-19\",\"2019-06-20\",\"2019-06-21\",\"2019-06-22\",\"2019-06-23\",\"2019-06-24\",\"2019-06-25\",\"2019-06-26\",\"2019-06-27\",\"2019-06-28\",\"2019-06-29\",\"2019-06-30\",\"2019-07-01\",\"2019-07-02\",\"2019-07-03\",\"2019-07-04\",\"2019-07-05\",\"2019-07-06\",\"2019-07-07\",\"2019-07-08\",\"2019-07-09\",\"2019-07-10\",\"2019-07-11\",\"2019-07-12\",\"2019-07-13\",\"2019-07-14\",\"2019-07-15\",\"2019-07-16\",\"2019-07-17\",\"2019-07-18\",\"2019-07-19\",\"2019-07-20\",\"2019-07-21\",\"2019-07-22\",\"2019-07-23\",\"2019-07-24\",\"2019-07-25\",\"2019-07-26\",\"2019-07-27\",\"2019-07-28\",\"2019-07-29\",\"2019-07-30\",\"2019-07-31\",\"2019-08-01\",\"2019-08-02\",\"2019-08-03\",\"2019-08-04\",\"2019-08-05\",\"2019-08-06\",\"2019-08-07\",\"2019-08-08\",\"2019-08-09\",\"2019-08-10\",\"2019-08-11\",\"2019-08-12\",\"2019-08-13\",\"2019-08-14\",\"2019-08-15\",\"2019-08-16\",\"2019-08-17\",\"2019-08-18\",\"2019-08-19\",\"2019-08-20\",\"2019-08-21\",\"2019-08-22\",\"2019-08-23\",\"2019-08-24\",\"2019-08-25\",\"2019-08-26\",\"2019-08-27\",\"2019-08-28\",\"2019-08-29\",\"2019-08-30\",\"2019-08-31\",\"2019-09-01\",\"2019-09-02\",\"2019-09-03\",\"2019-09-04\",\"2019-09-05\",\"2019-09-06\",\"2019-09-07\",\"2019-09-08\",\"2019-09-09\",\"2019-09-10\",\"2019-09-11\",\"2019-09-12\",\"2019-09-13\",\"2019-09-14\",\"2019-09-15\",\"2019-09-16\",\"2019-09-17\",\"2019-09-18\",\"2019-09-19\",\"2019-09-20\",\"2019-09-21\",\"2019-09-22\",\"2019-09-23\",\"2019-09-24\",\"2019-09-25\",\"2019-09-26\",\"2019-09-27\",\"2019-09-28\",\"2019-09-29\",\"2019-09-30\",\"2019-10-01\",\"2019-10-02\",\"2019-10-03\",\"2019-10-04\",\"2019-10-05\",\"2019-10-06\",\"2019-10-07\",\"2019-10-08\",\"2019-10-09\",\"2019-10-10\",\"2019-10-11\",\"2019-10-12\",\"2019-10-13\",\"2019-10-14\",\"2019-10-15\",\"2019-10-16\",\"2019-10-17\",\"2019-10-18\",\"2019-10-19\",\"2019-10-20\",\"2019-10-21\",\"2019-10-22\",\"2019-10-23\",\"2019-10-24\",\"2019-10-25\",\"2019-10-26\",\"2019-10-27\",\"2019-10-28\",\"2019-10-29\",\"2019-10-30\",\"2019-10-31\",\"2019-11-01\",\"2019-11-02\",\"2019-11-03\",\"2019-11-04\",\"2019-11-05\",\"2019-11-06\",\"2019-11-07\",\"2019-11-08\",\"2019-11-09\",\"2019-11-10\",\"2019-11-11\",\"2019-11-12\",\"2019-11-13\",\"2019-11-14\",\"2019-11-15\",\"2019-11-16\",\"2019-11-17\",\"2019-11-18\",\"2019-11-19\",\"2019-11-20\",\"2019-11-21\",\"2019-11-22\",\"2019-11-23\",\"2019-11-24\",\"2019-11-25\",\"2019-11-26\",\"2019-11-27\",\"2019-11-28\",\"2019-11-29\",\"2019-11-30\",\"2019-12-01\",\"2019-12-02\",\"2019-12-03\",\"2019-12-04\",\"2019-12-05\",\"2019-12-06\",\"2019-12-07\",\"2019-12-08\",\"2019-12-09\",\"2019-12-10\",\"2019-12-11\",\"2019-12-12\",\"2019-12-13\",\"2019-12-14\",\"2019-12-15\",\"2019-12-16\",\"2019-12-17\",\"2019-12-18\",\"2019-12-19\",\"2019-12-20\",\"2019-12-21\",\"2019-12-22\",\"2019-12-23\",\"2019-12-24\",\"2019-12-25\",\"2019-12-26\",\"2019-12-27\",\"2019-12-28\",\"2019-12-29\",\"2019-12-30\",\"2019-12-31\",\"2020-01-01\",\"2020-01-02\",\"2020-01-03\",\"2020-01-04\",\"2020-01-05\",\"2020-01-06\",\"2020-01-07\",\"2020-01-08\",\"2020-01-09\",\"2020-01-10\",\"2020-01-11\",\"2020-01-12\",\"2020-01-13\",\"2020-01-14\",\"2020-01-15\",\"2020-01-16\",\"2020-01-17\",\"2020-01-18\",\"2020-01-19\",\"2020-01-20\",\"2020-01-21\",\"2020-01-22\",\"2020-01-23\",\"2020-01-24\",\"2020-01-25\",\"2020-01-26\",\"2020-01-27\",\"2020-01-28\",\"2020-01-29\",\"2020-01-30\",\"2020-01-31\",\"2020-02-01\",\"2020-02-02\",\"2020-02-03\",\"2020-02-04\",\"2020-02-05\",\"2020-02-06\",\"2020-02-07\",\"2020-02-08\",\"2020-02-09\",\"2020-02-10\",\"2020-02-11\",\"2020-02-12\",\"2020-02-13\",\"2020-02-14\",\"2020-02-15\",\"2020-02-16\",\"2020-02-17\",\"2020-02-18\",\"2020-02-19\",\"2020-02-20\",\"2020-02-21\",\"2020-02-22\",\"2020-02-23\",\"2020-02-24\",\"2020-02-25\",\"2020-02-26\",\"2020-02-27\",\"2020-02-28\",\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\"],\"xaxis\":\"x\",\"y\":[187,158,131,134,129,119,122,132,98,102,93,92,114,111,117,93,94,100,104,93,111,99,99,100,98,87,103,106,115,92,101,95,97,98,111,109,95,89,96,102,95,109,115,93,93,83,86,90,100,98,92,83,88,87,93,93,104,86,85,85,91,96,114,101,86,87,85,83,97,99,112,77,85,89,88,91,98,105,83,87,84,78,90,96,97,84,87,92,87,89,96,98,88,86,91,86,84,109,92,91,90,83,96,85,96,109,96,85,97,95,98,117,121,85,88,86,92,94,94,98,84,96,93,96,96,110,123,94,94,91,91,87,96,106,88,94,80,96,94,109,117,97,87,94,91,97,108,114,108,102,103,88,108,106,108,93,101,98,116,104,120,130,98,97,100,100,103,111,120,99,106,109,95,104,108,127,104,99,95,101,110,111,125,100,103,105,110,113,121,121,111,103,113,108,113,118,127,109,108,118,108,117,136,138,115,114,126,121,118,135,137,114,108,106,102,111,123,131,117,114,115,113,113,147,138,109,111,132,130,138,152,142,129,130,119,114,119,136,143,121,115,125,116,129,145,139,130,125,122,116,128,129,128,120,117,112,119,124,131,134,111,122,119,109,117,139,145,129,123,116,123,134,122,139,111,116,125,115,127,139,141,113,120,108,106,136,141,141,120,119,117,118,129,123,147,106,125,114,112,119,135,159,119,119,117,123,118,146,168,134,126,130,120,120,139,132,125,136,129,138,123,135,144,114,116,117,123,123,140,129,118,116,111,111,127,142,153,109,112,117,107,123,127,136,113,104,108,117,128,133,131,103,104,111,108,126,124,126,104,119,142,179,200,232,202,162,135,126,129,134,146,138,116,109,109,110,116,121,135,107,105,109,98,104,123,127,114,114,105,106,97,125,122,103,108,102,104,111,110,120,105,106,92,94,104,100,124,94,101,104,100,107,115,120,96,94,96,106,108,123,111,100,93,98,89,93,108,108,107,100,101,96,101,104,108,101,100,87,89,100,109,121,93,99,96,88,90,104,113,92,102,95,94,97,100,116,95,94,101,95,106,136,125,92,99,89,92,92,109,110,104,97,95,94,94,113,100,92,93,99,96,103,118,106,102,90,106,110,118,140,127,104,109,87,101,102,132,134,115,116,108,104,113,118,119,102,102,102,105,107,134,137,106,107,105,105,104,124,126,110,113,108,100,106,122,134,106,104,110,103,118,124,121,100,105,106,113,108,127,132,104,112,108,111,120,124,121,103,106,120,114,116,124,140,119,112,114,110,105,134,132,115,117,116,129,120,145,148,117,131,132,128,125,143,143,121,114,129,113,118,135,146,120,134,109,128,141,140,146,124,126,116,133,135,148,171,146,125,127,128,145,149,144,110,128,131,124,150,139,158,130,127,126,133,135,140,151,128,128,122,122,140,144,153,135,132,135,125,124,145,155,126,130,122,136,134,135,161,123,134,118,123,128,147,150,131,139,129,123,135,153,145,131,122,133,136,136,154,142,126,130,135,132,128,132,152,123,133,125,126,126,154,168,130,128,129,136,144,142,141,131,130,126,128,132,168,161,116,121,106,117,126,147,131,127,126,121,126,132,145,135,112,116,117,116,118,132,137,111,115,116,116,118,130,140,108,115,113,106,121,139,131,117,130,142,151,197,228,252,160,150,135,111,123,157,152,124,116,107,104,116,123,122,105,104,108,106,99,121,130,114,100,104,107,112,125,128,97,103,100,90,96,114,120,101,93,101,100,108,105,115,113,92,102,98,103,111,112,87,85,102,94,100,118,114,102,93,97,94,108,112,115,93,84,92,93,102,110,119,88,95,97,90,100,110,114,93,95,91,92,94,103,107,95,95,88,89,101,109,108,86,85,90,87,93,114,115,89,83,92,86,91,102,110,87,88,90,90,97,93,122,92,98,90,103,104,109,133,102,98,102,96,109,111,118,107,104,97,96,102,114,123,93,102,99,94,98,100,120,99,92,98,100,105,110,111,98,92,96,100,113,119,120,111,115,120,109,112,124,116,95,99,112,118,113,135,135,109,105,108,103,106,116,130,106,97,96,111,106,125,136,110,110,105,98,114,136,128,106,101,106,105,109,127,142,111,109,111,114,120,124,135,112,112,124,131,150,139,143,112,109,112,124,116,132,135,113,114,118,118,131,124,133,123,121,103,124,127,135,164,141,132,130,118,132,142,152,116,113,119,124,123,143,158,133,125,122,127,130,132,149,120,125,120,127,127,146,161,124,124,127,121,129,143,148,131,115,127,123,127,142,144,129,125,136,114,144,138,144,119,125,125,120,134,136,154,121,123,120,120,133,139,151,110,117,125,128,114,143,158,126,120,123,117,127,148,154,130,140,130,121,117,128,140,104,122,119,142,149,157,140,123,122,106,121,120,124,140,117,111,112,110,119,132,124,117,102,116,116,124,132,133,105,106,111,109,108,116,130,105,105,107,105,105,126,128,105,108,110,120,138,196,234,179,178,147,130,127,133,131,118,113,111,117,110,120,120,100,95,99,97,102,113,113,89,97,96,95,103,114,123,92,98,98,101,105,106,105,93,96,94,95,97,116,128,92,90,88,91,93,105,110,92,92,90,85,84,103,116,95,97,90,88,90,103,97,83,78,74,82,85,95,90,74,77,80,84,89,92,92,74,77,80,75,80,88,100,70,74,81,73,87,84,87,77,80,62,68,66,73,73,62,70,65,63,64,71,77,67,67,68,72,76,84,84,71,66,61,68,64,77,76,60,60,68,65,71,91,95,89,82,87,77,86,85,82,71,66,76,70,81,82,88,72,78,75,77,87,96,103,76,86,80,75,83,93,88,87,89,87,98,105,109,119,92,88,85,83,91,91,99,91,95,90,96,96,105,110,85,86,81,85,94,112,105,81,95,97,92,110,113,124,99,96,98,94,107,113,114,101,103,98,101,104,115,131,96,103,101,112,122,136,145,109,116,108,114,110,128,122,100,108,106,108,112,123,126,103,103,109,109,108,130,133,114,105,121,118,138,129,127,116,118,108,107,109,125,126,120,117,113,119,106,120,128,111,105,118,115,126,131,130,118,109,108,104,128,127,132,111,113,103,108,113,130,145,96,108,106,123,123,138,144,116,115,109,117,118,130,137,118,111,111,116,122,132,135,114,113,113,110,129,139,136,114,118,110,111,125,136,133,119,114,114,126,135,143,149,106,115,112,121,127,140,155,118,129,138,115,113,126,133,116,113,107,104,121,129,129,103,99,110,97,108,117,131,102,109,98,107,119,118,133,105,110,99,104,110,126,135,106,104,107,94,115,142,160,168,192,183,164],\"yaxis\":\"y\",\"type\":\"scattergl\"},{\"hovertemplate\":\"=subset3<br>Date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"subset3\",\"line\":{\"color\":\"#00cc96\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"subset3\",\"showlegend\":true,\"x\":[\"2017-01-01\",\"2017-01-02\",\"2017-01-03\",\"2017-01-04\",\"2017-01-05\",\"2017-01-06\",\"2017-01-07\",\"2017-01-08\",\"2017-01-09\",\"2017-01-10\",\"2017-01-11\",\"2017-01-12\",\"2017-01-13\",\"2017-01-14\",\"2017-01-15\",\"2017-01-16\",\"2017-01-17\",\"2017-01-18\",\"2017-01-19\",\"2017-01-20\",\"2017-01-21\",\"2017-01-22\",\"2017-01-23\",\"2017-01-24\",\"2017-01-25\",\"2017-01-26\",\"2017-01-27\",\"2017-01-28\",\"2017-01-29\",\"2017-01-30\",\"2017-01-31\",\"2017-02-01\",\"2017-02-02\",\"2017-02-03\",\"2017-02-04\",\"2017-02-05\",\"2017-02-06\",\"2017-02-07\",\"2017-02-08\",\"2017-02-09\",\"2017-02-10\",\"2017-02-11\",\"2017-02-12\",\"2017-02-13\",\"2017-02-14\",\"2017-02-15\",\"2017-02-16\",\"2017-02-17\",\"2017-02-18\",\"2017-02-19\",\"2017-02-20\",\"2017-02-21\",\"2017-02-22\",\"2017-02-23\",\"2017-02-24\",\"2017-02-25\",\"2017-02-26\",\"2017-02-27\",\"2017-02-28\",\"2017-03-01\",\"2017-03-02\",\"2017-03-03\",\"2017-03-04\",\"2017-03-05\",\"2017-03-06\",\"2017-03-07\",\"2017-03-08\",\"2017-03-09\",\"2017-03-10\",\"2017-03-11\",\"2017-03-12\",\"2017-03-13\",\"2017-03-14\",\"2017-03-15\",\"2017-03-16\",\"2017-03-17\",\"2017-03-18\",\"2017-03-19\",\"2017-03-20\",\"2017-03-21\",\"2017-03-22\",\"2017-03-23\",\"2017-03-24\",\"2017-03-25\",\"2017-03-26\",\"2017-03-27\",\"2017-03-28\",\"2017-03-29\",\"2017-03-30\",\"2017-03-31\",\"2017-04-01\",\"2017-04-02\",\"2017-04-03\",\"2017-04-04\",\"2017-04-05\",\"2017-04-06\",\"2017-04-07\",\"2017-04-08\",\"2017-04-09\",\"2017-04-10\",\"2017-04-11\",\"2017-04-12\",\"2017-04-13\",\"2017-04-14\",\"2017-04-15\",\"2017-04-16\",\"2017-04-17\",\"2017-04-18\",\"2017-04-19\",\"2017-04-20\",\"2017-04-21\",\"2017-04-22\",\"2017-04-23\",\"2017-04-24\",\"2017-04-25\",\"2017-04-26\",\"2017-04-27\",\"2017-04-28\",\"2017-04-29\",\"2017-04-30\",\"2017-05-01\",\"2017-05-02\",\"2017-05-03\",\"2017-05-04\",\"2017-05-05\",\"2017-05-06\",\"2017-05-07\",\"2017-05-08\",\"2017-05-09\",\"2017-05-10\",\"2017-05-11\",\"2017-05-12\",\"2017-05-13\",\"2017-05-14\",\"2017-05-15\",\"2017-05-16\",\"2017-05-17\",\"2017-05-18\",\"2017-05-19\",\"2017-05-20\",\"2017-05-21\",\"2017-05-22\",\"2017-05-23\",\"2017-05-24\",\"2017-05-25\",\"2017-05-26\",\"2017-05-27\",\"2017-05-28\",\"2017-05-29\",\"2017-05-30\",\"2017-05-31\",\"2017-06-01\",\"2017-06-02\",\"2017-06-03\",\"2017-06-04\",\"2017-06-05\",\"2017-06-06\",\"2017-06-07\",\"2017-06-08\",\"2017-06-09\",\"2017-06-10\",\"2017-06-11\",\"2017-06-12\",\"2017-06-13\",\"2017-06-14\",\"2017-06-15\",\"2017-06-16\",\"2017-06-17\",\"2017-06-18\",\"2017-06-19\",\"2017-06-20\",\"2017-06-21\",\"2017-06-22\",\"2017-06-23\",\"2017-06-24\",\"2017-06-25\",\"2017-06-26\",\"2017-06-27\",\"2017-06-28\",\"2017-06-29\",\"2017-06-30\",\"2017-07-01\",\"2017-07-02\",\"2017-07-03\",\"2017-07-04\",\"2017-07-05\",\"2017-07-06\",\"2017-07-07\",\"2017-07-08\",\"2017-07-09\",\"2017-07-10\",\"2017-07-11\",\"2017-07-12\",\"2017-07-13\",\"2017-07-14\",\"2017-07-15\",\"2017-07-16\",\"2017-07-17\",\"2017-07-18\",\"2017-07-19\",\"2017-07-20\",\"2017-07-21\",\"2017-07-22\",\"2017-07-23\",\"2017-07-24\",\"2017-07-25\",\"2017-07-26\",\"2017-07-27\",\"2017-07-28\",\"2017-07-29\",\"2017-07-30\",\"2017-07-31\",\"2017-08-01\",\"2017-08-02\",\"2017-08-03\",\"2017-08-04\",\"2017-08-05\",\"2017-08-06\",\"2017-08-07\",\"2017-08-08\",\"2017-08-09\",\"2017-08-10\",\"2017-08-11\",\"2017-08-12\",\"2017-08-13\",\"2017-08-14\",\"2017-08-15\",\"2017-08-16\",\"2017-08-17\",\"2017-08-18\",\"2017-08-19\",\"2017-08-20\",\"2017-08-21\",\"2017-08-22\",\"2017-08-23\",\"2017-08-24\",\"2017-08-25\",\"2017-08-26\",\"2017-08-27\",\"2017-08-28\",\"2017-08-29\",\"2017-08-30\",\"2017-08-31\",\"2017-09-01\",\"2017-09-02\",\"2017-09-03\",\"2017-09-04\",\"2017-09-05\",\"2017-09-06\",\"2017-09-07\",\"2017-09-08\",\"2017-09-09\",\"2017-09-10\",\"2017-09-11\",\"2017-09-12\",\"2017-09-13\",\"2017-09-14\",\"2017-09-15\",\"2017-09-16\",\"2017-09-17\",\"2017-09-18\",\"2017-09-19\",\"2017-09-20\",\"2017-09-21\",\"2017-09-22\",\"2017-09-23\",\"2017-09-24\",\"2017-09-25\",\"2017-09-26\",\"2017-09-27\",\"2017-09-28\",\"2017-09-29\",\"2017-09-30\",\"2017-10-01\",\"2017-10-02\",\"2017-10-03\",\"2017-10-04\",\"2017-10-05\",\"2017-10-06\",\"2017-10-07\",\"2017-10-08\",\"2017-10-09\",\"2017-10-10\",\"2017-10-11\",\"2017-10-12\",\"2017-10-13\",\"2017-10-14\",\"2017-10-15\",\"2017-10-16\",\"2017-10-17\",\"2017-10-18\",\"2017-10-19\",\"2017-10-20\",\"2017-10-21\",\"2017-10-22\",\"2017-10-23\",\"2017-10-24\",\"2017-10-25\",\"2017-10-26\",\"2017-10-27\",\"2017-10-28\",\"2017-10-29\",\"2017-10-30\",\"2017-10-31\",\"2017-11-01\",\"2017-11-02\",\"2017-11-03\",\"2017-11-04\",\"2017-11-05\",\"2017-11-06\",\"2017-11-07\",\"2017-11-08\",\"2017-11-09\",\"2017-11-10\",\"2017-11-11\",\"2017-11-12\",\"2017-11-13\",\"2017-11-14\",\"2017-11-15\",\"2017-11-16\",\"2017-11-17\",\"2017-11-18\",\"2017-11-19\",\"2017-11-20\",\"2017-11-21\",\"2017-11-22\",\"2017-11-23\",\"2017-11-24\",\"2017-11-25\",\"2017-11-26\",\"2017-11-27\",\"2017-11-28\",\"2017-11-29\",\"2017-11-30\",\"2017-12-01\",\"2017-12-02\",\"2017-12-03\",\"2017-12-04\",\"2017-12-05\",\"2017-12-06\",\"2017-12-07\",\"2017-12-08\",\"2017-12-09\",\"2017-12-10\",\"2017-12-11\",\"2017-12-12\",\"2017-12-13\",\"2017-12-14\",\"2017-12-15\",\"2017-12-16\",\"2017-12-17\",\"2017-12-18\",\"2017-12-19\",\"2017-12-20\",\"2017-12-21\",\"2017-12-22\",\"2017-12-23\",\"2017-12-24\",\"2017-12-25\",\"2017-12-26\",\"2017-12-27\",\"2017-12-28\",\"2017-12-29\",\"2017-12-30\",\"2017-12-31\",\"2018-01-01\",\"2018-01-02\",\"2018-01-03\",\"2018-01-04\",\"2018-01-05\",\"2018-01-06\",\"2018-01-07\",\"2018-01-08\",\"2018-01-09\",\"2018-01-10\",\"2018-01-11\",\"2018-01-12\",\"2018-01-13\",\"2018-01-14\",\"2018-01-15\",\"2018-01-16\",\"2018-01-17\",\"2018-01-18\",\"2018-01-19\",\"2018-01-20\",\"2018-01-21\",\"2018-01-22\",\"2018-01-23\",\"2018-01-24\",\"2018-01-25\",\"2018-01-26\",\"2018-01-27\",\"2018-01-28\",\"2018-01-29\",\"2018-01-30\",\"2018-01-31\",\"2018-02-01\",\"2018-02-02\",\"2018-02-03\",\"2018-02-04\",\"2018-02-05\",\"2018-02-06\",\"2018-02-07\",\"2018-02-08\",\"2018-02-09\",\"2018-02-10\",\"2018-02-11\",\"2018-02-12\",\"2018-02-13\",\"2018-02-14\",\"2018-02-15\",\"2018-02-16\",\"2018-02-17\",\"2018-02-18\",\"2018-02-19\",\"2018-02-20\",\"2018-02-21\",\"2018-02-22\",\"2018-02-23\",\"2018-02-24\",\"2018-02-25\",\"2018-02-26\",\"2018-02-27\",\"2018-02-28\",\"2018-03-01\",\"2018-03-02\",\"2018-03-03\",\"2018-03-04\",\"2018-03-05\",\"2018-03-06\",\"2018-03-07\",\"2018-03-08\",\"2018-03-09\",\"2018-03-10\",\"2018-03-11\",\"2018-03-12\",\"2018-03-13\",\"2018-03-14\",\"2018-03-15\",\"2018-03-16\",\"2018-03-17\",\"2018-03-18\",\"2018-03-19\",\"2018-03-20\",\"2018-03-21\",\"2018-03-22\",\"2018-03-23\",\"2018-03-24\",\"2018-03-25\",\"2018-03-26\",\"2018-03-27\",\"2018-03-28\",\"2018-03-29\",\"2018-03-30\",\"2018-03-31\",\"2018-04-01\",\"2018-04-02\",\"2018-04-03\",\"2018-04-04\",\"2018-04-05\",\"2018-04-06\",\"2018-04-07\",\"2018-04-08\",\"2018-04-09\",\"2018-04-10\",\"2018-04-11\",\"2018-04-12\",\"2018-04-13\",\"2018-04-14\",\"2018-04-15\",\"2018-04-16\",\"2018-04-17\",\"2018-04-18\",\"2018-04-19\",\"2018-04-20\",\"2018-04-21\",\"2018-04-22\",\"2018-04-23\",\"2018-04-24\",\"2018-04-25\",\"2018-04-26\",\"2018-04-27\",\"2018-04-28\",\"2018-04-29\",\"2018-04-30\",\"2018-05-01\",\"2018-05-02\",\"2018-05-03\",\"2018-05-04\",\"2018-05-05\",\"2018-05-06\",\"2018-05-07\",\"2018-05-08\",\"2018-05-09\",\"2018-05-10\",\"2018-05-11\",\"2018-05-12\",\"2018-05-13\",\"2018-05-14\",\"2018-05-15\",\"2018-05-16\",\"2018-05-17\",\"2018-05-18\",\"2018-05-19\",\"2018-05-20\",\"2018-05-21\",\"2018-05-22\",\"2018-05-23\",\"2018-05-24\",\"2018-05-25\",\"2018-05-26\",\"2018-05-27\",\"2018-05-28\",\"2018-05-29\",\"2018-05-30\",\"2018-05-31\",\"2018-06-01\",\"2018-06-02\",\"2018-06-03\",\"2018-06-04\",\"2018-06-05\",\"2018-06-06\",\"2018-06-07\",\"2018-06-08\",\"2018-06-09\",\"2018-06-10\",\"2018-06-11\",\"2018-06-12\",\"2018-06-13\",\"2018-06-14\",\"2018-06-15\",\"2018-06-16\",\"2018-06-17\",\"2018-06-18\",\"2018-06-19\",\"2018-06-20\",\"2018-06-21\",\"2018-06-22\",\"2018-06-23\",\"2018-06-24\",\"2018-06-25\",\"2018-06-26\",\"2018-06-27\",\"2018-06-28\",\"2018-06-29\",\"2018-06-30\",\"2018-07-01\",\"2018-07-02\",\"2018-07-03\",\"2018-07-04\",\"2018-07-05\",\"2018-07-06\",\"2018-07-07\",\"2018-07-08\",\"2018-07-09\",\"2018-07-10\",\"2018-07-11\",\"2018-07-12\",\"2018-07-13\",\"2018-07-14\",\"2018-07-15\",\"2018-07-16\",\"2018-07-17\",\"2018-07-18\",\"2018-07-19\",\"2018-07-20\",\"2018-07-21\",\"2018-07-22\",\"2018-07-23\",\"2018-07-24\",\"2018-07-25\",\"2018-07-26\",\"2018-07-27\",\"2018-07-28\",\"2018-07-29\",\"2018-07-30\",\"2018-07-31\",\"2018-08-01\",\"2018-08-02\",\"2018-08-03\",\"2018-08-04\",\"2018-08-05\",\"2018-08-06\",\"2018-08-07\",\"2018-08-08\",\"2018-08-09\",\"2018-08-10\",\"2018-08-11\",\"2018-08-12\",\"2018-08-13\",\"2018-08-14\",\"2018-08-15\",\"2018-08-16\",\"2018-08-17\",\"2018-08-18\",\"2018-08-19\",\"2018-08-20\",\"2018-08-21\",\"2018-08-22\",\"2018-08-23\",\"2018-08-24\",\"2018-08-25\",\"2018-08-26\",\"2018-08-27\",\"2018-08-28\",\"2018-08-29\",\"2018-08-30\",\"2018-08-31\",\"2018-09-01\",\"2018-09-02\",\"2018-09-03\",\"2018-09-04\",\"2018-09-05\",\"2018-09-06\",\"2018-09-07\",\"2018-09-08\",\"2018-09-09\",\"2018-09-10\",\"2018-09-11\",\"2018-09-12\",\"2018-09-13\",\"2018-09-14\",\"2018-09-15\",\"2018-09-16\",\"2018-09-17\",\"2018-09-18\",\"2018-09-19\",\"2018-09-20\",\"2018-09-21\",\"2018-09-22\",\"2018-09-23\",\"2018-09-24\",\"2018-09-25\",\"2018-09-26\",\"2018-09-27\",\"2018-09-28\",\"2018-09-29\",\"2018-09-30\",\"2018-10-01\",\"2018-10-02\",\"2018-10-03\",\"2018-10-04\",\"2018-10-05\",\"2018-10-06\",\"2018-10-07\",\"2018-10-08\",\"2018-10-09\",\"2018-10-10\",\"2018-10-11\",\"2018-10-12\",\"2018-10-13\",\"2018-10-14\",\"2018-10-15\",\"2018-10-16\",\"2018-10-17\",\"2018-10-18\",\"2018-10-19\",\"2018-10-20\",\"2018-10-21\",\"2018-10-22\",\"2018-10-23\",\"2018-10-24\",\"2018-10-25\",\"2018-10-26\",\"2018-10-27\",\"2018-10-28\",\"2018-10-29\",\"2018-10-30\",\"2018-10-31\",\"2018-11-01\",\"2018-11-02\",\"2018-11-03\",\"2018-11-04\",\"2018-11-05\",\"2018-11-06\",\"2018-11-07\",\"2018-11-08\",\"2018-11-09\",\"2018-11-10\",\"2018-11-11\",\"2018-11-12\",\"2018-11-13\",\"2018-11-14\",\"2018-11-15\",\"2018-11-16\",\"2018-11-17\",\"2018-11-18\",\"2018-11-19\",\"2018-11-20\",\"2018-11-21\",\"2018-11-22\",\"2018-11-23\",\"2018-11-24\",\"2018-11-25\",\"2018-11-26\",\"2018-11-27\",\"2018-11-28\",\"2018-11-29\",\"2018-11-30\",\"2018-12-01\",\"2018-12-02\",\"2018-12-03\",\"2018-12-04\",\"2018-12-05\",\"2018-12-06\",\"2018-12-07\",\"2018-12-08\",\"2018-12-09\",\"2018-12-10\",\"2018-12-11\",\"2018-12-12\",\"2018-12-13\",\"2018-12-14\",\"2018-12-15\",\"2018-12-16\",\"2018-12-17\",\"2018-12-18\",\"2018-12-19\",\"2018-12-20\",\"2018-12-21\",\"2018-12-22\",\"2018-12-23\",\"2018-12-24\",\"2018-12-25\",\"2018-12-26\",\"2018-12-27\",\"2018-12-28\",\"2018-12-29\",\"2018-12-30\",\"2018-12-31\",\"2019-01-01\",\"2019-01-02\",\"2019-01-03\",\"2019-01-04\",\"2019-01-05\",\"2019-01-06\",\"2019-01-07\",\"2019-01-08\",\"2019-01-09\",\"2019-01-10\",\"2019-01-11\",\"2019-01-12\",\"2019-01-13\",\"2019-01-14\",\"2019-01-15\",\"2019-01-16\",\"2019-01-17\",\"2019-01-18\",\"2019-01-19\",\"2019-01-20\",\"2019-01-21\",\"2019-01-22\",\"2019-01-23\",\"2019-01-24\",\"2019-01-25\",\"2019-01-26\",\"2019-01-27\",\"2019-01-28\",\"2019-01-29\",\"2019-01-30\",\"2019-01-31\",\"2019-02-01\",\"2019-02-02\",\"2019-02-03\",\"2019-02-04\",\"2019-02-05\",\"2019-02-06\",\"2019-02-07\",\"2019-02-08\",\"2019-02-09\",\"2019-02-10\",\"2019-02-11\",\"2019-02-12\",\"2019-02-13\",\"2019-02-14\",\"2019-02-15\",\"2019-02-16\",\"2019-02-17\",\"2019-02-18\",\"2019-02-19\",\"2019-02-20\",\"2019-02-21\",\"2019-02-22\",\"2019-02-23\",\"2019-02-24\",\"2019-02-25\",\"2019-02-26\",\"2019-02-27\",\"2019-02-28\",\"2019-03-01\",\"2019-03-02\",\"2019-03-03\",\"2019-03-04\",\"2019-03-05\",\"2019-03-06\",\"2019-03-07\",\"2019-03-08\",\"2019-03-09\",\"2019-03-10\",\"2019-03-11\",\"2019-03-12\",\"2019-03-13\",\"2019-03-14\",\"2019-03-15\",\"2019-03-16\",\"2019-03-17\",\"2019-03-18\",\"2019-03-19\",\"2019-03-20\",\"2019-03-21\",\"2019-03-22\",\"2019-03-23\",\"2019-03-24\",\"2019-03-25\",\"2019-03-26\",\"2019-03-27\",\"2019-03-28\",\"2019-03-29\",\"2019-03-30\",\"2019-03-31\",\"2019-04-01\",\"2019-04-02\",\"2019-04-03\",\"2019-04-04\",\"2019-04-05\",\"2019-04-06\",\"2019-04-07\",\"2019-04-08\",\"2019-04-09\",\"2019-04-10\",\"2019-04-11\",\"2019-04-12\",\"2019-04-13\",\"2019-04-14\",\"2019-04-15\",\"2019-04-16\",\"2019-04-17\",\"2019-04-18\",\"2019-04-19\",\"2019-04-20\",\"2019-04-21\",\"2019-04-22\",\"2019-04-23\",\"2019-04-24\",\"2019-04-25\",\"2019-04-26\",\"2019-04-27\",\"2019-04-28\",\"2019-04-29\",\"2019-04-30\",\"2019-05-01\",\"2019-05-02\",\"2019-05-03\",\"2019-05-04\",\"2019-05-05\",\"2019-05-06\",\"2019-05-07\",\"2019-05-08\",\"2019-05-09\",\"2019-05-10\",\"2019-05-11\",\"2019-05-12\",\"2019-05-13\",\"2019-05-14\",\"2019-05-15\",\"2019-05-16\",\"2019-05-17\",\"2019-05-18\",\"2019-05-19\",\"2019-05-20\",\"2019-05-21\",\"2019-05-22\",\"2019-05-23\",\"2019-05-24\",\"2019-05-25\",\"2019-05-26\",\"2019-05-27\",\"2019-05-28\",\"2019-05-29\",\"2019-05-30\",\"2019-05-31\",\"2019-06-01\",\"2019-06-02\",\"2019-06-03\",\"2019-06-04\",\"2019-06-05\",\"2019-06-06\",\"2019-06-07\",\"2019-06-08\",\"2019-06-09\",\"2019-06-10\",\"2019-06-11\",\"2019-06-12\",\"2019-06-13\",\"2019-06-14\",\"2019-06-15\",\"2019-06-16\",\"2019-06-17\",\"2019-06-18\",\"2019-06-19\",\"2019-06-20\",\"2019-06-21\",\"2019-06-22\",\"2019-06-23\",\"2019-06-24\",\"2019-06-25\",\"2019-06-26\",\"2019-06-27\",\"2019-06-28\",\"2019-06-29\",\"2019-06-30\",\"2019-07-01\",\"2019-07-02\",\"2019-07-03\",\"2019-07-04\",\"2019-07-05\",\"2019-07-06\",\"2019-07-07\",\"2019-07-08\",\"2019-07-09\",\"2019-07-10\",\"2019-07-11\",\"2019-07-12\",\"2019-07-13\",\"2019-07-14\",\"2019-07-15\",\"2019-07-16\",\"2019-07-17\",\"2019-07-18\",\"2019-07-19\",\"2019-07-20\",\"2019-07-21\",\"2019-07-22\",\"2019-07-23\",\"2019-07-24\",\"2019-07-25\",\"2019-07-26\",\"2019-07-27\",\"2019-07-28\",\"2019-07-29\",\"2019-07-30\",\"2019-07-31\",\"2019-08-01\",\"2019-08-02\",\"2019-08-03\",\"2019-08-04\",\"2019-08-05\",\"2019-08-06\",\"2019-08-07\",\"2019-08-08\",\"2019-08-09\",\"2019-08-10\",\"2019-08-11\",\"2019-08-12\",\"2019-08-13\",\"2019-08-14\",\"2019-08-15\",\"2019-08-16\",\"2019-08-17\",\"2019-08-18\",\"2019-08-19\",\"2019-08-20\",\"2019-08-21\",\"2019-08-22\",\"2019-08-23\",\"2019-08-24\",\"2019-08-25\",\"2019-08-26\",\"2019-08-27\",\"2019-08-28\",\"2019-08-29\",\"2019-08-30\",\"2019-08-31\",\"2019-09-01\",\"2019-09-02\",\"2019-09-03\",\"2019-09-04\",\"2019-09-05\",\"2019-09-06\",\"2019-09-07\",\"2019-09-08\",\"2019-09-09\",\"2019-09-10\",\"2019-09-11\",\"2019-09-12\",\"2019-09-13\",\"2019-09-14\",\"2019-09-15\",\"2019-09-16\",\"2019-09-17\",\"2019-09-18\",\"2019-09-19\",\"2019-09-20\",\"2019-09-21\",\"2019-09-22\",\"2019-09-23\",\"2019-09-24\",\"2019-09-25\",\"2019-09-26\",\"2019-09-27\",\"2019-09-28\",\"2019-09-29\",\"2019-09-30\",\"2019-10-01\",\"2019-10-02\",\"2019-10-03\",\"2019-10-04\",\"2019-10-05\",\"2019-10-06\",\"2019-10-07\",\"2019-10-08\",\"2019-10-09\",\"2019-10-10\",\"2019-10-11\",\"2019-10-12\",\"2019-10-13\",\"2019-10-14\",\"2019-10-15\",\"2019-10-16\",\"2019-10-17\",\"2019-10-18\",\"2019-10-19\",\"2019-10-20\",\"2019-10-21\",\"2019-10-22\",\"2019-10-23\",\"2019-10-24\",\"2019-10-25\",\"2019-10-26\",\"2019-10-27\",\"2019-10-28\",\"2019-10-29\",\"2019-10-30\",\"2019-10-31\",\"2019-11-01\",\"2019-11-02\",\"2019-11-03\",\"2019-11-04\",\"2019-11-05\",\"2019-11-06\",\"2019-11-07\",\"2019-11-08\",\"2019-11-09\",\"2019-11-10\",\"2019-11-11\",\"2019-11-12\",\"2019-11-13\",\"2019-11-14\",\"2019-11-15\",\"2019-11-16\",\"2019-11-17\",\"2019-11-18\",\"2019-11-19\",\"2019-11-20\",\"2019-11-21\",\"2019-11-22\",\"2019-11-23\",\"2019-11-24\",\"2019-11-25\",\"2019-11-26\",\"2019-11-27\",\"2019-11-28\",\"2019-11-29\",\"2019-11-30\",\"2019-12-01\",\"2019-12-02\",\"2019-12-03\",\"2019-12-04\",\"2019-12-05\",\"2019-12-06\",\"2019-12-07\",\"2019-12-08\",\"2019-12-09\",\"2019-12-10\",\"2019-12-11\",\"2019-12-12\",\"2019-12-13\",\"2019-12-14\",\"2019-12-15\",\"2019-12-16\",\"2019-12-17\",\"2019-12-18\",\"2019-12-19\",\"2019-12-20\",\"2019-12-21\",\"2019-12-22\",\"2019-12-23\",\"2019-12-24\",\"2019-12-25\",\"2019-12-26\",\"2019-12-27\",\"2019-12-28\",\"2019-12-29\",\"2019-12-30\",\"2019-12-31\",\"2020-01-01\",\"2020-01-02\",\"2020-01-03\",\"2020-01-04\",\"2020-01-05\",\"2020-01-06\",\"2020-01-07\",\"2020-01-08\",\"2020-01-09\",\"2020-01-10\",\"2020-01-11\",\"2020-01-12\",\"2020-01-13\",\"2020-01-14\",\"2020-01-15\",\"2020-01-16\",\"2020-01-17\",\"2020-01-18\",\"2020-01-19\",\"2020-01-20\",\"2020-01-21\",\"2020-01-22\",\"2020-01-23\",\"2020-01-24\",\"2020-01-25\",\"2020-01-26\",\"2020-01-27\",\"2020-01-28\",\"2020-01-29\",\"2020-01-30\",\"2020-01-31\",\"2020-02-01\",\"2020-02-02\",\"2020-02-03\",\"2020-02-04\",\"2020-02-05\",\"2020-02-06\",\"2020-02-07\",\"2020-02-08\",\"2020-02-09\",\"2020-02-10\",\"2020-02-11\",\"2020-02-12\",\"2020-02-13\",\"2020-02-14\",\"2020-02-15\",\"2020-02-16\",\"2020-02-17\",\"2020-02-18\",\"2020-02-19\",\"2020-02-20\",\"2020-02-21\",\"2020-02-22\",\"2020-02-23\",\"2020-02-24\",\"2020-02-25\",\"2020-02-26\",\"2020-02-27\",\"2020-02-28\",\"2020-02-29\",\"2020-03-01\",\"2020-03-02\",\"2020-03-03\",\"2020-03-04\",\"2020-03-05\",\"2020-03-06\",\"2020-03-07\",\"2020-03-08\",\"2020-03-09\",\"2020-03-10\",\"2020-03-11\",\"2020-03-12\",\"2020-03-13\",\"2020-03-14\",\"2020-03-15\",\"2020-03-16\",\"2020-03-17\",\"2020-03-18\",\"2020-03-19\",\"2020-03-20\",\"2020-03-21\",\"2020-03-22\",\"2020-03-23\",\"2020-03-24\",\"2020-03-25\",\"2020-03-26\",\"2020-03-27\",\"2020-03-28\",\"2020-03-29\",\"2020-03-30\",\"2020-03-31\",\"2020-04-01\",\"2020-04-02\",\"2020-04-03\",\"2020-04-04\",\"2020-04-05\",\"2020-04-06\",\"2020-04-07\",\"2020-04-08\",\"2020-04-09\",\"2020-04-10\",\"2020-04-11\",\"2020-04-12\",\"2020-04-13\",\"2020-04-14\",\"2020-04-15\",\"2020-04-16\",\"2020-04-17\",\"2020-04-18\",\"2020-04-19\",\"2020-04-20\",\"2020-04-21\",\"2020-04-22\",\"2020-04-23\",\"2020-04-24\",\"2020-04-25\",\"2020-04-26\",\"2020-04-27\",\"2020-04-28\",\"2020-04-29\",\"2020-04-30\",\"2020-05-01\",\"2020-05-02\",\"2020-05-03\",\"2020-05-04\",\"2020-05-05\",\"2020-05-06\",\"2020-05-07\",\"2020-05-08\",\"2020-05-09\",\"2020-05-10\",\"2020-05-11\",\"2020-05-12\",\"2020-05-13\",\"2020-05-14\",\"2020-05-15\",\"2020-05-16\",\"2020-05-17\",\"2020-05-18\",\"2020-05-19\",\"2020-05-20\",\"2020-05-21\",\"2020-05-22\",\"2020-05-23\",\"2020-05-24\",\"2020-05-25\",\"2020-05-26\",\"2020-05-27\",\"2020-05-28\",\"2020-05-29\",\"2020-05-30\",\"2020-05-31\",\"2020-06-01\",\"2020-06-02\",\"2020-06-03\",\"2020-06-04\",\"2020-06-05\",\"2020-06-06\",\"2020-06-07\",\"2020-06-08\",\"2020-06-09\",\"2020-06-10\",\"2020-06-11\",\"2020-06-12\",\"2020-06-13\",\"2020-06-14\",\"2020-06-15\",\"2020-06-16\",\"2020-06-17\",\"2020-06-18\",\"2020-06-19\",\"2020-06-20\",\"2020-06-21\",\"2020-06-22\",\"2020-06-23\",\"2020-06-24\",\"2020-06-25\",\"2020-06-26\",\"2020-06-27\",\"2020-06-28\",\"2020-06-29\",\"2020-06-30\",\"2020-07-01\",\"2020-07-02\",\"2020-07-03\",\"2020-07-04\",\"2020-07-05\",\"2020-07-06\",\"2020-07-07\",\"2020-07-08\",\"2020-07-09\",\"2020-07-10\",\"2020-07-11\",\"2020-07-12\",\"2020-07-13\",\"2020-07-14\",\"2020-07-15\",\"2020-07-16\",\"2020-07-17\",\"2020-07-18\",\"2020-07-19\",\"2020-07-20\",\"2020-07-21\",\"2020-07-22\",\"2020-07-23\",\"2020-07-24\",\"2020-07-25\",\"2020-07-26\",\"2020-07-27\",\"2020-07-28\",\"2020-07-29\",\"2020-07-30\",\"2020-07-31\",\"2020-08-01\",\"2020-08-02\",\"2020-08-03\",\"2020-08-04\",\"2020-08-05\",\"2020-08-06\",\"2020-08-07\",\"2020-08-08\",\"2020-08-09\",\"2020-08-10\",\"2020-08-11\",\"2020-08-12\",\"2020-08-13\",\"2020-08-14\",\"2020-08-15\",\"2020-08-16\",\"2020-08-17\",\"2020-08-18\",\"2020-08-19\",\"2020-08-20\",\"2020-08-21\",\"2020-08-22\",\"2020-08-23\",\"2020-08-24\",\"2020-08-25\",\"2020-08-26\",\"2020-08-27\",\"2020-08-28\",\"2020-08-29\",\"2020-08-30\",\"2020-08-31\",\"2020-09-01\",\"2020-09-02\",\"2020-09-03\",\"2020-09-04\",\"2020-09-05\",\"2020-09-06\",\"2020-09-07\",\"2020-09-08\",\"2020-09-09\",\"2020-09-10\",\"2020-09-11\",\"2020-09-12\",\"2020-09-13\",\"2020-09-14\",\"2020-09-15\",\"2020-09-16\",\"2020-09-17\",\"2020-09-18\",\"2020-09-19\",\"2020-09-20\",\"2020-09-21\",\"2020-09-22\",\"2020-09-23\",\"2020-09-24\",\"2020-09-25\",\"2020-09-26\",\"2020-09-27\",\"2020-09-28\",\"2020-09-29\",\"2020-09-30\",\"2020-10-01\",\"2020-10-02\",\"2020-10-03\",\"2020-10-04\",\"2020-10-05\",\"2020-10-06\",\"2020-10-07\",\"2020-10-08\",\"2020-10-09\",\"2020-10-10\",\"2020-10-11\",\"2020-10-12\",\"2020-10-13\",\"2020-10-14\",\"2020-10-15\",\"2020-10-16\",\"2020-10-17\",\"2020-10-18\",\"2020-10-19\",\"2020-10-20\",\"2020-10-21\",\"2020-10-22\",\"2020-10-23\",\"2020-10-24\",\"2020-10-25\",\"2020-10-26\",\"2020-10-27\",\"2020-10-28\",\"2020-10-29\",\"2020-10-30\",\"2020-10-31\",\"2020-11-01\",\"2020-11-02\",\"2020-11-03\",\"2020-11-04\",\"2020-11-05\",\"2020-11-06\",\"2020-11-07\",\"2020-11-08\",\"2020-11-09\",\"2020-11-10\",\"2020-11-11\",\"2020-11-12\",\"2020-11-13\",\"2020-11-14\",\"2020-11-15\",\"2020-11-16\",\"2020-11-17\",\"2020-11-18\",\"2020-11-19\",\"2020-11-20\",\"2020-11-21\",\"2020-11-22\",\"2020-11-23\",\"2020-11-24\",\"2020-11-25\",\"2020-11-26\",\"2020-11-27\",\"2020-11-28\",\"2020-11-29\",\"2020-11-30\",\"2020-12-01\",\"2020-12-02\",\"2020-12-03\",\"2020-12-04\",\"2020-12-05\",\"2020-12-06\",\"2020-12-07\",\"2020-12-08\",\"2020-12-09\",\"2020-12-10\",\"2020-12-11\",\"2020-12-12\",\"2020-12-13\",\"2020-12-14\",\"2020-12-15\",\"2020-12-16\",\"2020-12-17\",\"2020-12-18\",\"2020-12-19\",\"2020-12-20\",\"2020-12-21\",\"2020-12-22\",\"2020-12-23\",\"2020-12-24\",\"2020-12-25\",\"2020-12-26\",\"2020-12-27\",\"2020-12-28\",\"2020-12-29\",\"2020-12-30\",\"2020-12-31\"],\"xaxis\":\"x\",\"y\":[407,286,252,281,259,274,279,281,213,204,181,208,214,270,266,210,220,208,189,223,241,222,219,200,215,210,224,244,251,204,184,192,228,208,242,257,185,200,218,206,224,229,232,193,214,211,208,203,238,239,202,214,209,213,230,234,249,194,211,199,187,213,215,250,210,184,215,201,226,202,230,194,199,193,204,215,215,224,198,157,178,192,209,247,242,192,178,189,198,195,221,216,182,187,194,194,198,221,230,188,205,192,189,187,213,218,187,187,201,222,207,223,264,209,198,194,200,180,226,218,183,197,201,185,217,242,225,184,195,218,200,210,225,217,196,178,171,167,170,208,213,181,180,183,169,185,200,232,195,209,183,182,187,189,201,174,154,173,191,197,204,219,199,179,167,165,191,185,193,158,166,174,168,172,186,205,171,191,159,167,173,201,191,176,177,182,166,176,211,211,174,173,171,165,184,199,233,181,193,190,196,199,202,203,166,158,173,182,186,191,205,169,167,177,176,194,189,195,194,184,185,166,174,191,220,174,178,183,182,211,223,243,206,184,185,196,200,203,230,172,189,183,157,182,199,211,176,169,194,194,171,205,227,188,173,201,185,188,217,219,200,194,189,198,194,232,223,179,179,206,191,210,227,249,203,193,190,198,215,226,238,185,208,191,205,231,225,247,174,196,177,218,190,228,236,213,200,205,192,223,221,268,198,189,212,223,234,253,305,244,225,212,211,231,254,251,226,235,235,287,256,259,268,212,230,219,213,240,229,254,205,223,229,215,216,239,266,207,233,231,209,230,247,257,214,215,223,229,216,271,274,227,233,234,231,233,249,266,249,254,298,384,426,473,479,336,273,273,249,282,319,321,264,229,234,225,258,240,288,246,216,226,223,248,282,276,209,241,226,234,263,249,282,249,254,218,211,230,257,297,232,245,227,225,241,268,282,246,230,228,239,231,250,272,220,226,228,218,242,216,263,233,204,217,233,220,269,269,225,231,223,192,247,257,240,225,217,227,222,246,240,273,226,226,241,212,236,270,265,224,214,229,206,207,238,239,191,226,216,247,266,269,272,211,235,207,212,211,236,229,212,185,194,202,215,240,221,212,195,205,197,197,227,243,203,201,200,224,233,239,240,212,232,198,202,219,259,295,236,247,219,214,209,210,225,179,206,216,209,227,241,285,208,184,184,190,195,226,237,191,192,174,193,208,204,227,182,185,179,178,197,217,235,191,185,193,191,201,210,219,201,198,177,180,196,213,233,179,184,184,181,179,207,226,182,184,179,195,181,232,227,209,198,212,209,222,243,242,172,180,190,169,205,209,231,184,198,183,194,195,197,239,203,204,173,192,190,225,231,176,192,199,210,212,254,260,231,220,205,187,208,226,230,198,193,189,188,205,244,225,200,216,188,181,232,222,237,210,214,205,175,204,258,255,213,202,207,208,224,228,266,196,217,201,226,206,239,231,218,209,222,196,212,237,258,198,208,195,200,213,243,281,222,189,218,219,210,250,275,214,217,223,203,229,264,252,215,237,231,219,245,256,301,270,235,238,238,232,256,275,225,224,249,263,275,283,294,211,241,219,224,237,253,257,214,217,232,225,237,266,266,223,252,247,229,246,273,294,242,224,221,226,252,247,299,227,226,211,236,235,256,294,230,251,262,316,360,472,456,392,298,268,226,256,269,306,235,217,226,240,234,265,295,237,236,230,230,236,249,294,222,226,245,214,221,249,264,211,215,213,202,228,251,268,216,218,228,241,229,268,255,218,229,220,230,221,258,239,213,209,229,226,227,274,266,217,206,226,219,229,259,267,206,206,208,201,227,236,246,199,221,217,192,205,250,258,223,239,198,201,217,246,242,205,211,205,218,210,239,250,184,196,187,200,231,214,253,210,208,208,200,205,211,244,191,188,206,192,202,213,251,203,211,184,215,208,232,263,217,186,189,205,210,246,267,224,204,209,195,206,255,258,209,182,205,185,193,214,234,185,176,190,183,200,225,212,178,180,171,178,191,220,214,198,206,211,193,184,208,207,189,180,189,184,195,231,248,177,191,177,177,199,213,218,175,192,162,168,199,206,217,175,168,174,165,205,172,211,158,171,176,175,186,199,204,182,187,209,192,218,223,229,185,174,183,193,189,204,212,179,180,176,177,175,208,216,177,192,181,166,194,219,202,156,186,181,179,200,230,262,218,201,198,198,196,228,222,179,190,180,174,197,229,223,184,184,184,204,193,201,231,193,191,177,199,198,239,202,200,201,201,199,221,222,239,189,196,193,184,211,210,225,201,208,206,206,211,227,255,191,222,204,181,212,246,254,201,194,206,212,211,243,241,199,213,209,196,236,241,271,215,212,217,215,237,229,269,227,259,241,217,231,272,274,231,217,214,240,262,291,301,216,237,213,212,240,251,260,212,209,211,226,252,245,258,228,205,208,224,235,238,269,230,223,239,211,238,258,264,211,228,211,207,221,255,266,216,206,236,236,325,401,450,383,363,307,307,283,306,332,272,286,244,269,268,293,310,247,253,255,262,246,285,305,253,255,237,250,254,279,289,260,212,234,238,246,292,283,238,225,261,245,267,305,301,239,234,263,237,251,304,312,235,231,232,251,253,248,273,265,224,226,242,233,266,221,204,197,221,204,224,244,243,228,217,216,205,239,243,242,207,193,202,177,211,217,242,216,209,201,200,217,217,241,185,189,170,179,171,188,191,153,142,160,152,176,181,187,157,154,175,168,183,211,203,160,150,151,151,172,174,195,149,147,155,157,180,199,228,192,189,198,175,185,215,214,194,177,170,196,192,191,219,177,167,163,179,170,189,199,187,189,177,161,190,183,193,187,184,187,192,199,208,220,184,168,187,175,193,205,198,175,171,180,202,191,217,208,199,175,179,180,177,210,200,173,188,162,183,194,212,218,196,166,174,190,214,220,206,185,192,179,181,218,240,249,213,180,194,201,213,215,218,194,179,192,168,205,227,239,182,189,186,189,202,202,242,196,181,198,193,196,230,243,203,215,230,220,228,234,247,201,185,209,202,207,211,219,198,194,194,191,221,246,241,210,192,191,209,211,232,234,192,211,194,202,223,240,246,202,210,195,212,219,242,261,202,209,212,214,237,252,269,215,208,214,218,215,247,286,223,237,216,217,250,255,276,248,221,246,224,234,243,284,220,223,245,246,217,249,277,224,253,256,261,282,290,304,250,246,215,245,266,304,322,257,265,240,238,257,263,272,257,236,232,218,254,279,297,243,237,230,242,268,277,264,235,240,230,239,273,283,284,220,261,241,228,226,277,291,239,248,242,262,273,316,388,380,447,445,394],\"yaxis\":\"y\",\"type\":\"scattergl\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Date\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Sales Data For Different Subsets\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('1d7239fb-74c9-4e6a-9dfc-67393bec3eea');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nLooking at the plot, especially in the `Subset1`, there is a yearly seasonality in the sales. Also there is a sharp rise in the sales around New Year's Eve.\n\nBefore modelling, we have to check whether any extra data transformation is needed. Since the data has 48 subsets like the 3 subsets above, it has to be arranged such that a subset's all values for 4 years are in a sequence before continuing to another subset. Let's create a sample DataFrame to illustrate this point.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nimport numpy as np\n\nsample_countries = [\"Germany\", \"France\"]\nsample_stores = [\"KaggleRama\", \"KaggleMart\"]\nsample_timepoints = [0, 1, 2, 3]\nsample_num_sold = np.tile([10, 20, 30, 40], 4)\n\nidx = pandas.MultiIndex.from_product(\n    [sample_countries, sample_stores, sample_timepoints]\n)\nexample = pandas.DataFrame(index=idx, data={\"num_sold\": sample_num_sold})\nexample\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"8\" valign=\"top\">Germany</th>\n      <th rowspan=\"4\" valign=\"top\">KaggleRama</th>\n      <th>0</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">KaggleMart</th>\n      <th>0</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th rowspan=\"8\" valign=\"top\">France</th>\n      <th rowspan=\"4\" valign=\"top\">KaggleRama</th>\n      <th>0</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">KaggleMart</th>\n      <th>0</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>30</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>40</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nNow transform the whole data.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nfrom pandas import to_datetime\n\n# First sort the data and drop the row_id column since we don't need it.\ntransformed_data = data.sort_values(by=[\"country\", \"store\", \"product\", \"date\"]).drop(\n    columns=\"row_id\"\n)\n\n# Change the date column to pandas Datetime\ntransformed_data[\"date\"] = to_datetime(transformed_data[\"date\"])\ntransformed_data = transformed_data.set_index([\"country\", \"store\", \"product\", \"date\"])\ntransformed_data\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th>num_sold</th>\n    </tr>\n    <tr>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>date</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Belgium</th>\n      <th rowspan=\"5\" valign=\"top\">KaggleMart</th>\n      <th rowspan=\"5\" valign=\"top\">Kaggle Advanced Techniques</th>\n      <th>2017-01-01</th>\n      <td>663</td>\n    </tr>\n    <tr>\n      <th>2017-01-02</th>\n      <td>514</td>\n    </tr>\n    <tr>\n      <th>2017-01-03</th>\n      <td>549</td>\n    </tr>\n    <tr>\n      <th>2017-01-04</th>\n      <td>477</td>\n    </tr>\n    <tr>\n      <th>2017-01-05</th>\n      <td>447</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th rowspan=\"5\" valign=\"top\">Spain</th>\n      <th rowspan=\"5\" valign=\"top\">KaggleRama</th>\n      <th rowspan=\"5\" valign=\"top\">Kaggle for Kids: One Smart Goose</th>\n      <th>2020-12-27</th>\n      <td>204</td>\n    </tr>\n    <tr>\n      <th>2020-12-28</th>\n      <td>212</td>\n    </tr>\n    <tr>\n      <th>2020-12-29</th>\n      <td>242</td>\n    </tr>\n    <tr>\n      <th>2020-12-30</th>\n      <td>239</td>\n    </tr>\n    <tr>\n      <th>2020-12-31</th>\n      <td>202</td>\n    </tr>\n  </tbody>\n</table>\n<p>70128 rows × 1 columns</p>\n</div>\n```\n:::\n:::\n\n\n# Modelling\n\nThe data is ready to model. We will create several different models for forecasting: ARIMA, Regression with ARIMAX and XGBoost, and Deep Learning with Long Short Term Memory (LSTM). Each model may need another data transformation but it will be easy to transform from the data that we have already preprocessed.\n\nWe will not tune the hyperparameters rigorously at first, just enough to get reasonable forecasts. After we went through all of them, I will create a custom performance metric for an assumed business case and then we will compare each model according to this metric.\n\n## STL-ARIMA\n\nAutoregressive Integrated Moving Average (ARIMA) is a statistical method used for forecasting. It uses values at previous time points to predict current value (autoregression) and these regressions' errors (moving average). Main assumption of ARIMA is that the time series should be stationary meaning its value is independent of time. Trend and seasonality makes the time series non-stationary. To make time series stationary we can use \"differencing\" - simply subtracting the value at t-1 from the value at t. \"Integrated\" part of the ARIMA is referring to the differencing order to make time series stationary.\n\nARIMA consists of three parts each having their own order - Autoregression p, Integration d, and Moving Average q. We will use Autocorrelation Function and Partial Autocorrelation Function graphs to select correct orders.\n\nMoving to our data, just by looking the above plots we can say there is a strong seasonality in the time series but to quantify it we will use Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test to check for stationarity.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nfrom statsmodels.tsa.stattools import kpss\n\nkpss_test = kpss(transformed_data)\nprint(f\"p-value of KPSS test is: {kpss_test[1]}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\np-value of KPSS test is: 0.01\n```\n:::\n:::\n\n\nNull hypothesis of KPSS test is that the series is stationary. Since the p-value of our test result is smaller that 0.05 we can reject the null hypothesis and state that the series is non-stationary.\n\nBefore creating the ARIMA model we have to remove trend and seasonality from the data. We could use the seasonal variant of ARIMA called **SARIMA**; however, our data's frequency is a day so it has a periodicity of 365 days. SARIMA models are more suitable for monthly or quarterly data; therefore we will use **Seasonal-Trend Decomposition Using LOESS (STL)** method to remove trend and seasonality from the data.\n\n::: {.cell .fig-cap-location-bottom execution_count=10}\n``` {.python .cell-code}\nfrom statsmodels.tsa.seasonal import STL\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\n\n# Setting plot style and size\nsns.set_style(\"darkgrid\")\nplt.rc(\"figure\", figsize=(7, 5))\nplt.rc(\"font\", size=10)\n\n# Create a sample subset to plot\nsubset = transformed_data.loc[\"Germany\", \"KaggleRama\", \"Kaggle Advanced Techniques\"]\n\n# Plot the decomposed parts of the time series\nstl = STL(subset, period=365, seasonal=7, trend_deg=1)\ndecomp = stl.fit()\nfig = decomp.plot()\nfig.show();\n```\n\n::: {.cell-output .cell-output-display}\n![STL Decomposition Results](book_sales_forecasting_files/figure-html/cell-11-output-1.png){width=662 height=470}\n:::\n:::\n\n\nAbove code decomposed the subset time series to three parts: trend, season, and residuals. Before creating ARIMA model, we still have to make sure that the residual part is non-stationary. We will test for stationarity with KPSS again and use differencing until it is stationary. This differencing degree will determine our I(d) parameter in the ARIMA model.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ndiff_test = kpss(decomp.resid)\nprint(f\"p-value of KPSS test is: {diff_test[1]}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\np-value of KPSS test is: 0.1\n```\n:::\n:::\n\n\nResidual are stationary according to test so we won't need a differencing in our model and therefore d degree will be 0. For the AR(p) order, we will look at the autocorrelation graphs. For the MA(q) order, we will try values and select the model with the lowest **AIC (Akaike's Information Criteria)**.\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\nplot_acf(decomp.resid);\nplot_pacf(decomp.resid);\n```\n\n::: {.cell-output .cell-output-display}\n![](book_sales_forecasting_files/figure-html/cell-13-output-1.png){width=583 height=430 fig-align='center'}\n:::\n\n::: {.cell-output .cell-output-display}\n![](book_sales_forecasting_files/figure-html/cell-13-output-2.png){width=583 height=430 fig-align='center'}\n:::\n:::\n\n\nPartial Autocorrelation Function shows statistically significant correlations at lags up to 7; thus we will start with AR(7). Now it is a good time to split our subset to train and test parts. Train data will be the first three years' data and the test will be last year's data.\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nfrom statsmodels.tsa.forecasting.stl import STLForecast, STLForecastResults\nfrom statsmodels.tsa.arima.model import ARIMA\nfrom sktime.forecasting.model_selection import temporal_train_test_split\n\n# Split subset to train-test\ntrain_subset, test_subset_pretuning = temporal_train_test_split(subset, test_size=366)\n\n# Define STLForecast model\nstl_forecast = STLForecast(\n    train_subset,\n    model=ARIMA,\n    model_kwargs={\"order\": (7, 0, 0), \"trend\": \"t\"},\n    period=365,\n    trend=1095,\n    robust=False\n)\n\n# Fit the model\nmodel = stl_forecast.fit()\n\n# Forecast for the last year\nforecast = model.forecast(steps=366)\n\n# Create a function to plot both test data and forecast from the model to compare them visually.\ndef plot_forecasts(y_true, y_pred, title=\"Forecasts\", width=700, height=500):\n    # Create a DataFrame to store both series\n    series = pandas.DataFrame()\n    series[\"Observed\"] = y_true\n    series[\"Predicted\"] = y_pred\n    \n    # Define plot attributes\n    fig = px.line(\n        series, \n        width=width, \n        height=height, \n        title=title,\n        labels={\n            \"value\": \"Sales\",\n            \"variable\": \"\"\n        }\n    )\n    fig.show()\n\nplot_forecasts(test_subset_pretuning[\"num_sold\"], forecast, title=\"STL-ARIMA Forecasts with (7,0,0)\")\nmodel.summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"c8e4776f-031c-4af3-b765-c5c221fc6222\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c8e4776f-031c-4af3-b765-c5c221fc6222\")) {                    Plotly.newPlot(                        \"c8e4776f-031c-4af3-b765-c5c221fc6222\",                        [{\"hovertemplate\":\"=Observed<br>date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"2020-01-01T00:00:00\",\"2020-01-02T00:00:00\",\"2020-01-03T00:00:00\",\"2020-01-04T00:00:00\",\"2020-01-05T00:00:00\",\"2020-01-06T00:00:00\",\"2020-01-07T00:00:00\",\"2020-01-08T00:00:00\",\"2020-01-09T00:00:00\",\"2020-01-10T00:00:00\",\"2020-01-11T00:00:00\",\"2020-01-12T00:00:00\",\"2020-01-13T00:00:00\",\"2020-01-14T00:00:00\",\"2020-01-15T00:00:00\",\"2020-01-16T00:00:00\",\"2020-01-17T00:00:00\",\"2020-01-18T00:00:00\",\"2020-01-19T00:00:00\",\"2020-01-20T00:00:00\",\"2020-01-21T00:00:00\",\"2020-01-22T00:00:00\",\"2020-01-23T00:00:00\",\"2020-01-24T00:00:00\",\"2020-01-25T00:00:00\",\"2020-01-26T00:00:00\",\"2020-01-27T00:00:00\",\"2020-01-28T00:00:00\",\"2020-01-29T00:00:00\",\"2020-01-30T00:00:00\",\"2020-01-31T00:00:00\",\"2020-02-01T00:00:00\",\"2020-02-02T00:00:00\",\"2020-02-03T00:00:00\",\"2020-02-04T00:00:00\",\"2020-02-05T00:00:00\",\"2020-02-06T00:00:00\",\"2020-02-07T00:00:00\",\"2020-02-08T00:00:00\",\"2020-02-09T00:00:00\",\"2020-02-10T00:00:00\",\"2020-02-11T00:00:00\",\"2020-02-12T00:00:00\",\"2020-02-13T00:00:00\",\"2020-02-14T00:00:00\",\"2020-02-15T00:00:00\",\"2020-02-16T00:00:00\",\"2020-02-17T00:00:00\",\"2020-02-18T00:00:00\",\"2020-02-19T00:00:00\",\"2020-02-20T00:00:00\",\"2020-02-21T00:00:00\",\"2020-02-22T00:00:00\",\"2020-02-23T00:00:00\",\"2020-02-24T00:00:00\",\"2020-02-25T00:00:00\",\"2020-02-26T00:00:00\",\"2020-02-27T00:00:00\",\"2020-02-28T00:00:00\",\"2020-02-29T00:00:00\",\"2020-03-01T00:00:00\",\"2020-03-02T00:00:00\",\"2020-03-03T00:00:00\",\"2020-03-04T00:00:00\",\"2020-03-05T00:00:00\",\"2020-03-06T00:00:00\",\"2020-03-07T00:00:00\",\"2020-03-08T00:00:00\",\"2020-03-09T00:00:00\",\"2020-03-10T00:00:00\",\"2020-03-11T00:00:00\",\"2020-03-12T00:00:00\",\"2020-03-13T00:00:00\",\"2020-03-14T00:00:00\",\"2020-03-15T00:00:00\",\"2020-03-16T00:00:00\",\"2020-03-17T00:00:00\",\"2020-03-18T00:00:00\",\"2020-03-19T00:00:00\",\"2020-03-20T00:00:00\",\"2020-03-21T00:00:00\",\"2020-03-22T00:00:00\",\"2020-03-23T00:00:00\",\"2020-03-24T00:00:00\",\"2020-03-25T00:00:00\",\"2020-03-26T00:00:00\",\"2020-03-27T00:00:00\",\"2020-03-28T00:00:00\",\"2020-03-29T00:00:00\",\"2020-03-30T00:00:00\",\"2020-03-31T00:00:00\",\"2020-04-01T00:00:00\",\"2020-04-02T00:00:00\",\"2020-04-03T00:00:00\",\"2020-04-04T00:00:00\",\"2020-04-05T00:00:00\",\"2020-04-06T00:00:00\",\"2020-04-07T00:00:00\",\"2020-04-08T00:00:00\",\"2020-04-09T00:00:00\",\"2020-04-10T00:00:00\",\"2020-04-11T00:00:00\",\"2020-04-12T00:00:00\",\"2020-04-13T00:00:00\",\"2020-04-14T00:00:00\",\"2020-04-15T00:00:00\",\"2020-04-16T00:00:00\",\"2020-04-17T00:00:00\",\"2020-04-18T00:00:00\",\"2020-04-19T00:00:00\",\"2020-04-20T00:00:00\",\"2020-04-21T00:00:00\",\"2020-04-22T00:00:00\",\"2020-04-23T00:00:00\",\"2020-04-24T00:00:00\",\"2020-04-25T00:00:00\",\"2020-04-26T00:00:00\",\"2020-04-27T00:00:00\",\"2020-04-28T00:00:00\",\"2020-04-29T00:00:00\",\"2020-04-30T00:00:00\",\"2020-05-01T00:00:00\",\"2020-05-02T00:00:00\",\"2020-05-03T00:00:00\",\"2020-05-04T00:00:00\",\"2020-05-05T00:00:00\",\"2020-05-06T00:00:00\",\"2020-05-07T00:00:00\",\"2020-05-08T00:00:00\",\"2020-05-09T00:00:00\",\"2020-05-10T00:00:00\",\"2020-05-11T00:00:00\",\"2020-05-12T00:00:00\",\"2020-05-13T00:00:00\",\"2020-05-14T00:00:00\",\"2020-05-15T00:00:00\",\"2020-05-16T00:00:00\",\"2020-05-17T00:00:00\",\"2020-05-18T00:00:00\",\"2020-05-19T00:00:00\",\"2020-05-20T00:00:00\",\"2020-05-21T00:00:00\",\"2020-05-22T00:00:00\",\"2020-05-23T00:00:00\",\"2020-05-24T00:00:00\",\"2020-05-25T00:00:00\",\"2020-05-26T00:00:00\",\"2020-05-27T00:00:00\",\"2020-05-28T00:00:00\",\"2020-05-29T00:00:00\",\"2020-05-30T00:00:00\",\"2020-05-31T00:00:00\",\"2020-06-01T00:00:00\",\"2020-06-02T00:00:00\",\"2020-06-03T00:00:00\",\"2020-06-04T00:00:00\",\"2020-06-05T00:00:00\",\"2020-06-06T00:00:00\",\"2020-06-07T00:00:00\",\"2020-06-08T00:00:00\",\"2020-06-09T00:00:00\",\"2020-06-10T00:00:00\",\"2020-06-11T00:00:00\",\"2020-06-12T00:00:00\",\"2020-06-13T00:00:00\",\"2020-06-14T00:00:00\",\"2020-06-15T00:00:00\",\"2020-06-16T00:00:00\",\"2020-06-17T00:00:00\",\"2020-06-18T00:00:00\",\"2020-06-19T00:00:00\",\"2020-06-20T00:00:00\",\"2020-06-21T00:00:00\",\"2020-06-22T00:00:00\",\"2020-06-23T00:00:00\",\"2020-06-24T00:00:00\",\"2020-06-25T00:00:00\",\"2020-06-26T00:00:00\",\"2020-06-27T00:00:00\",\"2020-06-28T00:00:00\",\"2020-06-29T00:00:00\",\"2020-06-30T00:00:00\",\"2020-07-01T00:00:00\",\"2020-07-02T00:00:00\",\"2020-07-03T00:00:00\",\"2020-07-04T00:00:00\",\"2020-07-05T00:00:00\",\"2020-07-06T00:00:00\",\"2020-07-07T00:00:00\",\"2020-07-08T00:00:00\",\"2020-07-09T00:00:00\",\"2020-07-10T00:00:00\",\"2020-07-11T00:00:00\",\"2020-07-12T00:00:00\",\"2020-07-13T00:00:00\",\"2020-07-14T00:00:00\",\"2020-07-15T00:00:00\",\"2020-07-16T00:00:00\",\"2020-07-17T00:00:00\",\"2020-07-18T00:00:00\",\"2020-07-19T00:00:00\",\"2020-07-20T00:00:00\",\"2020-07-21T00:00:00\",\"2020-07-22T00:00:00\",\"2020-07-23T00:00:00\",\"2020-07-24T00:00:00\",\"2020-07-25T00:00:00\",\"2020-07-26T00:00:00\",\"2020-07-27T00:00:00\",\"2020-07-28T00:00:00\",\"2020-07-29T00:00:00\",\"2020-07-30T00:00:00\",\"2020-07-31T00:00:00\",\"2020-08-01T00:00:00\",\"2020-08-02T00:00:00\",\"2020-08-03T00:00:00\",\"2020-08-04T00:00:00\",\"2020-08-05T00:00:00\",\"2020-08-06T00:00:00\",\"2020-08-07T00:00:00\",\"2020-08-08T00:00:00\",\"2020-08-09T00:00:00\",\"2020-08-10T00:00:00\",\"2020-08-11T00:00:00\",\"2020-08-12T00:00:00\",\"2020-08-13T00:00:00\",\"2020-08-14T00:00:00\",\"2020-08-15T00:00:00\",\"2020-08-16T00:00:00\",\"2020-08-17T00:00:00\",\"2020-08-18T00:00:00\",\"2020-08-19T00:00:00\",\"2020-08-20T00:00:00\",\"2020-08-21T00:00:00\",\"2020-08-22T00:00:00\",\"2020-08-23T00:00:00\",\"2020-08-24T00:00:00\",\"2020-08-25T00:00:00\",\"2020-08-26T00:00:00\",\"2020-08-27T00:00:00\",\"2020-08-28T00:00:00\",\"2020-08-29T00:00:00\",\"2020-08-30T00:00:00\",\"2020-08-31T00:00:00\",\"2020-09-01T00:00:00\",\"2020-09-02T00:00:00\",\"2020-09-03T00:00:00\",\"2020-09-04T00:00:00\",\"2020-09-05T00:00:00\",\"2020-09-06T00:00:00\",\"2020-09-07T00:00:00\",\"2020-09-08T00:00:00\",\"2020-09-09T00:00:00\",\"2020-09-10T00:00:00\",\"2020-09-11T00:00:00\",\"2020-09-12T00:00:00\",\"2020-09-13T00:00:00\",\"2020-09-14T00:00:00\",\"2020-09-15T00:00:00\",\"2020-09-16T00:00:00\",\"2020-09-17T00:00:00\",\"2020-09-18T00:00:00\",\"2020-09-19T00:00:00\",\"2020-09-20T00:00:00\",\"2020-09-21T00:00:00\",\"2020-09-22T00:00:00\",\"2020-09-23T00:00:00\",\"2020-09-24T00:00:00\",\"2020-09-25T00:00:00\",\"2020-09-26T00:00:00\",\"2020-09-27T00:00:00\",\"2020-09-28T00:00:00\",\"2020-09-29T00:00:00\",\"2020-09-30T00:00:00\",\"2020-10-01T00:00:00\",\"2020-10-02T00:00:00\",\"2020-10-03T00:00:00\",\"2020-10-04T00:00:00\",\"2020-10-05T00:00:00\",\"2020-10-06T00:00:00\",\"2020-10-07T00:00:00\",\"2020-10-08T00:00:00\",\"2020-10-09T00:00:00\",\"2020-10-10T00:00:00\",\"2020-10-11T00:00:00\",\"2020-10-12T00:00:00\",\"2020-10-13T00:00:00\",\"2020-10-14T00:00:00\",\"2020-10-15T00:00:00\",\"2020-10-16T00:00:00\",\"2020-10-17T00:00:00\",\"2020-10-18T00:00:00\",\"2020-10-19T00:00:00\",\"2020-10-20T00:00:00\",\"2020-10-21T00:00:00\",\"2020-10-22T00:00:00\",\"2020-10-23T00:00:00\",\"2020-10-24T00:00:00\",\"2020-10-25T00:00:00\",\"2020-10-26T00:00:00\",\"2020-10-27T00:00:00\",\"2020-10-28T00:00:00\",\"2020-10-29T00:00:00\",\"2020-10-30T00:00:00\",\"2020-10-31T00:00:00\",\"2020-11-01T00:00:00\",\"2020-11-02T00:00:00\",\"2020-11-03T00:00:00\",\"2020-11-04T00:00:00\",\"2020-11-05T00:00:00\",\"2020-11-06T00:00:00\",\"2020-11-07T00:00:00\",\"2020-11-08T00:00:00\",\"2020-11-09T00:00:00\",\"2020-11-10T00:00:00\",\"2020-11-11T00:00:00\",\"2020-11-12T00:00:00\",\"2020-11-13T00:00:00\",\"2020-11-14T00:00:00\",\"2020-11-15T00:00:00\",\"2020-11-16T00:00:00\",\"2020-11-17T00:00:00\",\"2020-11-18T00:00:00\",\"2020-11-19T00:00:00\",\"2020-11-20T00:00:00\",\"2020-11-21T00:00:00\",\"2020-11-22T00:00:00\",\"2020-11-23T00:00:00\",\"2020-11-24T00:00:00\",\"2020-11-25T00:00:00\",\"2020-11-26T00:00:00\",\"2020-11-27T00:00:00\",\"2020-11-28T00:00:00\",\"2020-11-29T00:00:00\",\"2020-11-30T00:00:00\",\"2020-12-01T00:00:00\",\"2020-12-02T00:00:00\",\"2020-12-03T00:00:00\",\"2020-12-04T00:00:00\",\"2020-12-05T00:00:00\",\"2020-12-06T00:00:00\",\"2020-12-07T00:00:00\",\"2020-12-08T00:00:00\",\"2020-12-09T00:00:00\",\"2020-12-10T00:00:00\",\"2020-12-11T00:00:00\",\"2020-12-12T00:00:00\",\"2020-12-13T00:00:00\",\"2020-12-14T00:00:00\",\"2020-12-15T00:00:00\",\"2020-12-16T00:00:00\",\"2020-12-17T00:00:00\",\"2020-12-18T00:00:00\",\"2020-12-19T00:00:00\",\"2020-12-20T00:00:00\",\"2020-12-21T00:00:00\",\"2020-12-22T00:00:00\",\"2020-12-23T00:00:00\",\"2020-12-24T00:00:00\",\"2020-12-25T00:00:00\",\"2020-12-26T00:00:00\",\"2020-12-27T00:00:00\",\"2020-12-28T00:00:00\",\"2020-12-29T00:00:00\",\"2020-12-30T00:00:00\",\"2020-12-31T00:00:00\"],\"xaxis\":\"x\",\"y\":[185.0,151.0,165.0,173.0,163.0,161.0,147.0,143.0,141.0,135.0,157.0,171.0,136.0,148.0,134.0,142.0,142.0,168.0,165.0,137.0,128.0,150.0,149.0,142.0,156.0,178.0,146.0,142.0,148.0,139.0,156.0,157.0,175.0,144.0,143.0,148.0,143.0,152.0,155.0,174.0,157.0,151.0,148.0,147.0,146.0,177.0,181.0,157.0,141.0,136.0,148.0,164.0,175.0,180.0,153.0,153.0,156.0,152.0,148.0,192.0,161.0,138.0,147.0,138.0,127.0,138.0,160.0,160.0,129.0,137.0,130.0,144.0,142.0,165.0,160.0,149.0,142.0,139.0,132.0,147.0,150.0,153.0,131.0,133.0,144.0,138.0,137.0,165.0,181.0,129.0,142.0,127.0,113.0,126.0,128.0,137.0,113.0,123.0,121.0,107.0,113.0,136.0,137.0,122.0,127.0,140.0,137.0,155.0,149.0,148.0,128.0,115.0,113.0,107.0,114.0,128.0,136.0,111.0,115.0,110.0,117.0,134.0,147.0,143.0,140.0,133.0,150.0,131.0,135.0,143.0,146.0,124.0,121.0,115.0,129.0,116.0,144.0,141.0,115.0,124.0,129.0,119.0,135.0,135.0,153.0,137.0,129.0,126.0,121.0,127.0,134.0,125.0,133.0,124.0,143.0,138.0,149.0,145.0,150.0,126.0,140.0,124.0,124.0,128.0,144.0,140.0,118.0,115.0,128.0,112.0,113.0,147.0,131.0,111.0,122.0,115.0,119.0,121.0,132.0,134.0,118.0,112.0,121.0,125.0,133.0,142.0,140.0,127.0,125.0,116.0,117.0,123.0,132.0,142.0,116.0,129.0,115.0,120.0,122.0,135.0,140.0,103.0,108.0,119.0,105.0,113.0,129.0,136.0,108.0,99.0,111.0,100.0,102.0,117.0,121.0,113.0,121.0,111.0,107.0,111.0,119.0,122.0,108.0,98.0,110.0,91.0,119.0,115.0,123.0,86.0,98.0,105.0,103.0,100.0,104.0,127.0,104.0,94.0,108.0,107.0,101.0,110.0,106.0,98.0,100.0,107.0,98.0,99.0,120.0,125.0,94.0,99.0,94.0,93.0,107.0,108.0,126.0,86.0,93.0,90.0,105.0,107.0,113.0,96.0,93.0,85.0,91.0,90.0,109.0,108.0,110.0,96.0,99.0,99.0,100.0,108.0,103.0,133.0,106.0,106.0,112.0,104.0,111.0,125.0,126.0,94.0,100.0,100.0,95.0,110.0,111.0,131.0,92.0,98.0,95.0,98.0,109.0,119.0,122.0,104.0,91.0,97.0,96.0,105.0,111.0,114.0,95.0,97.0,106.0,96.0,107.0,125.0,118.0,107.0,105.0,98.0,99.0,103.0,118.0,138.0,112.0,111.0,104.0,113.0,108.0,131.0,127.0,109.0,110.0,108.0,112.0,116.0,119.0,135.0,121.0,109.0,117.0,121.0,112.0,123.0,127.0,112.0,117.0,118.0,109.0,116.0,128.0,150.0,104.0,116.0,110.0,112.0,124.0,138.0,161.0,114.0,127.0,118.0,122.0,123.0,172.0,195.0,198.0,225.0,245.0,218.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"2020-01-01T00:00:00\",\"2020-01-02T00:00:00\",\"2020-01-03T00:00:00\",\"2020-01-04T00:00:00\",\"2020-01-05T00:00:00\",\"2020-01-06T00:00:00\",\"2020-01-07T00:00:00\",\"2020-01-08T00:00:00\",\"2020-01-09T00:00:00\",\"2020-01-10T00:00:00\",\"2020-01-11T00:00:00\",\"2020-01-12T00:00:00\",\"2020-01-13T00:00:00\",\"2020-01-14T00:00:00\",\"2020-01-15T00:00:00\",\"2020-01-16T00:00:00\",\"2020-01-17T00:00:00\",\"2020-01-18T00:00:00\",\"2020-01-19T00:00:00\",\"2020-01-20T00:00:00\",\"2020-01-21T00:00:00\",\"2020-01-22T00:00:00\",\"2020-01-23T00:00:00\",\"2020-01-24T00:00:00\",\"2020-01-25T00:00:00\",\"2020-01-26T00:00:00\",\"2020-01-27T00:00:00\",\"2020-01-28T00:00:00\",\"2020-01-29T00:00:00\",\"2020-01-30T00:00:00\",\"2020-01-31T00:00:00\",\"2020-02-01T00:00:00\",\"2020-02-02T00:00:00\",\"2020-02-03T00:00:00\",\"2020-02-04T00:00:00\",\"2020-02-05T00:00:00\",\"2020-02-06T00:00:00\",\"2020-02-07T00:00:00\",\"2020-02-08T00:00:00\",\"2020-02-09T00:00:00\",\"2020-02-10T00:00:00\",\"2020-02-11T00:00:00\",\"2020-02-12T00:00:00\",\"2020-02-13T00:00:00\",\"2020-02-14T00:00:00\",\"2020-02-15T00:00:00\",\"2020-02-16T00:00:00\",\"2020-02-17T00:00:00\",\"2020-02-18T00:00:00\",\"2020-02-19T00:00:00\",\"2020-02-20T00:00:00\",\"2020-02-21T00:00:00\",\"2020-02-22T00:00:00\",\"2020-02-23T00:00:00\",\"2020-02-24T00:00:00\",\"2020-02-25T00:00:00\",\"2020-02-26T00:00:00\",\"2020-02-27T00:00:00\",\"2020-02-28T00:00:00\",\"2020-02-29T00:00:00\",\"2020-03-01T00:00:00\",\"2020-03-02T00:00:00\",\"2020-03-03T00:00:00\",\"2020-03-04T00:00:00\",\"2020-03-05T00:00:00\",\"2020-03-06T00:00:00\",\"2020-03-07T00:00:00\",\"2020-03-08T00:00:00\",\"2020-03-09T00:00:00\",\"2020-03-10T00:00:00\",\"2020-03-11T00:00:00\",\"2020-03-12T00:00:00\",\"2020-03-13T00:00:00\",\"2020-03-14T00:00:00\",\"2020-03-15T00:00:00\",\"2020-03-16T00:00:00\",\"2020-03-17T00:00:00\",\"2020-03-18T00:00:00\",\"2020-03-19T00:00:00\",\"2020-03-20T00:00:00\",\"2020-03-21T00:00:00\",\"2020-03-22T00:00:00\",\"2020-03-23T00:00:00\",\"2020-03-24T00:00:00\",\"2020-03-25T00:00:00\",\"2020-03-26T00:00:00\",\"2020-03-27T00:00:00\",\"2020-03-28T00:00:00\",\"2020-03-29T00:00:00\",\"2020-03-30T00:00:00\",\"2020-03-31T00:00:00\",\"2020-04-01T00:00:00\",\"2020-04-02T00:00:00\",\"2020-04-03T00:00:00\",\"2020-04-04T00:00:00\",\"2020-04-05T00:00:00\",\"2020-04-06T00:00:00\",\"2020-04-07T00:00:00\",\"2020-04-08T00:00:00\",\"2020-04-09T00:00:00\",\"2020-04-10T00:00:00\",\"2020-04-11T00:00:00\",\"2020-04-12T00:00:00\",\"2020-04-13T00:00:00\",\"2020-04-14T00:00:00\",\"2020-04-15T00:00:00\",\"2020-04-16T00:00:00\",\"2020-04-17T00:00:00\",\"2020-04-18T00:00:00\",\"2020-04-19T00:00:00\",\"2020-04-20T00:00:00\",\"2020-04-21T00:00:00\",\"2020-04-22T00:00:00\",\"2020-04-23T00:00:00\",\"2020-04-24T00:00:00\",\"2020-04-25T00:00:00\",\"2020-04-26T00:00:00\",\"2020-04-27T00:00:00\",\"2020-04-28T00:00:00\",\"2020-04-29T00:00:00\",\"2020-04-30T00:00:00\",\"2020-05-01T00:00:00\",\"2020-05-02T00:00:00\",\"2020-05-03T00:00:00\",\"2020-05-04T00:00:00\",\"2020-05-05T00:00:00\",\"2020-05-06T00:00:00\",\"2020-05-07T00:00:00\",\"2020-05-08T00:00:00\",\"2020-05-09T00:00:00\",\"2020-05-10T00:00:00\",\"2020-05-11T00:00:00\",\"2020-05-12T00:00:00\",\"2020-05-13T00:00:00\",\"2020-05-14T00:00:00\",\"2020-05-15T00:00:00\",\"2020-05-16T00:00:00\",\"2020-05-17T00:00:00\",\"2020-05-18T00:00:00\",\"2020-05-19T00:00:00\",\"2020-05-20T00:00:00\",\"2020-05-21T00:00:00\",\"2020-05-22T00:00:00\",\"2020-05-23T00:00:00\",\"2020-05-24T00:00:00\",\"2020-05-25T00:00:00\",\"2020-05-26T00:00:00\",\"2020-05-27T00:00:00\",\"2020-05-28T00:00:00\",\"2020-05-29T00:00:00\",\"2020-05-30T00:00:00\",\"2020-05-31T00:00:00\",\"2020-06-01T00:00:00\",\"2020-06-02T00:00:00\",\"2020-06-03T00:00:00\",\"2020-06-04T00:00:00\",\"2020-06-05T00:00:00\",\"2020-06-06T00:00:00\",\"2020-06-07T00:00:00\",\"2020-06-08T00:00:00\",\"2020-06-09T00:00:00\",\"2020-06-10T00:00:00\",\"2020-06-11T00:00:00\",\"2020-06-12T00:00:00\",\"2020-06-13T00:00:00\",\"2020-06-14T00:00:00\",\"2020-06-15T00:00:00\",\"2020-06-16T00:00:00\",\"2020-06-17T00:00:00\",\"2020-06-18T00:00:00\",\"2020-06-19T00:00:00\",\"2020-06-20T00:00:00\",\"2020-06-21T00:00:00\",\"2020-06-22T00:00:00\",\"2020-06-23T00:00:00\",\"2020-06-24T00:00:00\",\"2020-06-25T00:00:00\",\"2020-06-26T00:00:00\",\"2020-06-27T00:00:00\",\"2020-06-28T00:00:00\",\"2020-06-29T00:00:00\",\"2020-06-30T00:00:00\",\"2020-07-01T00:00:00\",\"2020-07-02T00:00:00\",\"2020-07-03T00:00:00\",\"2020-07-04T00:00:00\",\"2020-07-05T00:00:00\",\"2020-07-06T00:00:00\",\"2020-07-07T00:00:00\",\"2020-07-08T00:00:00\",\"2020-07-09T00:00:00\",\"2020-07-10T00:00:00\",\"2020-07-11T00:00:00\",\"2020-07-12T00:00:00\",\"2020-07-13T00:00:00\",\"2020-07-14T00:00:00\",\"2020-07-15T00:00:00\",\"2020-07-16T00:00:00\",\"2020-07-17T00:00:00\",\"2020-07-18T00:00:00\",\"2020-07-19T00:00:00\",\"2020-07-20T00:00:00\",\"2020-07-21T00:00:00\",\"2020-07-22T00:00:00\",\"2020-07-23T00:00:00\",\"2020-07-24T00:00:00\",\"2020-07-25T00:00:00\",\"2020-07-26T00:00:00\",\"2020-07-27T00:00:00\",\"2020-07-28T00:00:00\",\"2020-07-29T00:00:00\",\"2020-07-30T00:00:00\",\"2020-07-31T00:00:00\",\"2020-08-01T00:00:00\",\"2020-08-02T00:00:00\",\"2020-08-03T00:00:00\",\"2020-08-04T00:00:00\",\"2020-08-05T00:00:00\",\"2020-08-06T00:00:00\",\"2020-08-07T00:00:00\",\"2020-08-08T00:00:00\",\"2020-08-09T00:00:00\",\"2020-08-10T00:00:00\",\"2020-08-11T00:00:00\",\"2020-08-12T00:00:00\",\"2020-08-13T00:00:00\",\"2020-08-14T00:00:00\",\"2020-08-15T00:00:00\",\"2020-08-16T00:00:00\",\"2020-08-17T00:00:00\",\"2020-08-18T00:00:00\",\"2020-08-19T00:00:00\",\"2020-08-20T00:00:00\",\"2020-08-21T00:00:00\",\"2020-08-22T00:00:00\",\"2020-08-23T00:00:00\",\"2020-08-24T00:00:00\",\"2020-08-25T00:00:00\",\"2020-08-26T00:00:00\",\"2020-08-27T00:00:00\",\"2020-08-28T00:00:00\",\"2020-08-29T00:00:00\",\"2020-08-30T00:00:00\",\"2020-08-31T00:00:00\",\"2020-09-01T00:00:00\",\"2020-09-02T00:00:00\",\"2020-09-03T00:00:00\",\"2020-09-04T00:00:00\",\"2020-09-05T00:00:00\",\"2020-09-06T00:00:00\",\"2020-09-07T00:00:00\",\"2020-09-08T00:00:00\",\"2020-09-09T00:00:00\",\"2020-09-10T00:00:00\",\"2020-09-11T00:00:00\",\"2020-09-12T00:00:00\",\"2020-09-13T00:00:00\",\"2020-09-14T00:00:00\",\"2020-09-15T00:00:00\",\"2020-09-16T00:00:00\",\"2020-09-17T00:00:00\",\"2020-09-18T00:00:00\",\"2020-09-19T00:00:00\",\"2020-09-20T00:00:00\",\"2020-09-21T00:00:00\",\"2020-09-22T00:00:00\",\"2020-09-23T00:00:00\",\"2020-09-24T00:00:00\",\"2020-09-25T00:00:00\",\"2020-09-26T00:00:00\",\"2020-09-27T00:00:00\",\"2020-09-28T00:00:00\",\"2020-09-29T00:00:00\",\"2020-09-30T00:00:00\",\"2020-10-01T00:00:00\",\"2020-10-02T00:00:00\",\"2020-10-03T00:00:00\",\"2020-10-04T00:00:00\",\"2020-10-05T00:00:00\",\"2020-10-06T00:00:00\",\"2020-10-07T00:00:00\",\"2020-10-08T00:00:00\",\"2020-10-09T00:00:00\",\"2020-10-10T00:00:00\",\"2020-10-11T00:00:00\",\"2020-10-12T00:00:00\",\"2020-10-13T00:00:00\",\"2020-10-14T00:00:00\",\"2020-10-15T00:00:00\",\"2020-10-16T00:00:00\",\"2020-10-17T00:00:00\",\"2020-10-18T00:00:00\",\"2020-10-19T00:00:00\",\"2020-10-20T00:00:00\",\"2020-10-21T00:00:00\",\"2020-10-22T00:00:00\",\"2020-10-23T00:00:00\",\"2020-10-24T00:00:00\",\"2020-10-25T00:00:00\",\"2020-10-26T00:00:00\",\"2020-10-27T00:00:00\",\"2020-10-28T00:00:00\",\"2020-10-29T00:00:00\",\"2020-10-30T00:00:00\",\"2020-10-31T00:00:00\",\"2020-11-01T00:00:00\",\"2020-11-02T00:00:00\",\"2020-11-03T00:00:00\",\"2020-11-04T00:00:00\",\"2020-11-05T00:00:00\",\"2020-11-06T00:00:00\",\"2020-11-07T00:00:00\",\"2020-11-08T00:00:00\",\"2020-11-09T00:00:00\",\"2020-11-10T00:00:00\",\"2020-11-11T00:00:00\",\"2020-11-12T00:00:00\",\"2020-11-13T00:00:00\",\"2020-11-14T00:00:00\",\"2020-11-15T00:00:00\",\"2020-11-16T00:00:00\",\"2020-11-17T00:00:00\",\"2020-11-18T00:00:00\",\"2020-11-19T00:00:00\",\"2020-11-20T00:00:00\",\"2020-11-21T00:00:00\",\"2020-11-22T00:00:00\",\"2020-11-23T00:00:00\",\"2020-11-24T00:00:00\",\"2020-11-25T00:00:00\",\"2020-11-26T00:00:00\",\"2020-11-27T00:00:00\",\"2020-11-28T00:00:00\",\"2020-11-29T00:00:00\",\"2020-11-30T00:00:00\",\"2020-12-01T00:00:00\",\"2020-12-02T00:00:00\",\"2020-12-03T00:00:00\",\"2020-12-04T00:00:00\",\"2020-12-05T00:00:00\",\"2020-12-06T00:00:00\",\"2020-12-07T00:00:00\",\"2020-12-08T00:00:00\",\"2020-12-09T00:00:00\",\"2020-12-10T00:00:00\",\"2020-12-11T00:00:00\",\"2020-12-12T00:00:00\",\"2020-12-13T00:00:00\",\"2020-12-14T00:00:00\",\"2020-12-15T00:00:00\",\"2020-12-16T00:00:00\",\"2020-12-17T00:00:00\",\"2020-12-18T00:00:00\",\"2020-12-19T00:00:00\",\"2020-12-20T00:00:00\",\"2020-12-21T00:00:00\",\"2020-12-22T00:00:00\",\"2020-12-23T00:00:00\",\"2020-12-24T00:00:00\",\"2020-12-25T00:00:00\",\"2020-12-26T00:00:00\",\"2020-12-27T00:00:00\",\"2020-12-28T00:00:00\",\"2020-12-29T00:00:00\",\"2020-12-30T00:00:00\",\"2020-12-31T00:00:00\"],\"xaxis\":\"x\",\"y\":[181.27905859165503,169.59182498284548,146.90711032363095,150.3267719156084,173.40972519485803,165.22546327159228,152.12900547507812,149.36603366358528,140.69167148481432,139.63319430139262,150.84485458147563,146.9403765876934,155.79282993216447,140.7839257619122,128.87297273344802,148.56771537350224,134.30741477048957,148.5182456666381,163.89026088141833,158.9302061861003,149.06601938168947,139.329618017103,137.3323517806436,146.41441115644471,162.8478404866695,180.4499959706974,172.97291374701715,152.83786148362628,137.98605062088828,156.9259222313837,146.82390620310983,139.35120265311713,160.76208484623268,185.62082572933252,145.79999845206987,143.30905970103277,149.25847517531497,151.61217757205,148.92576851736027,164.55163884037816,188.8024313610976,151.87060546341246,131.2942923212134,159.2820691110029,160.82079385576344,145.91740608244723,170.69779590744065,195.78566948909935,159.43328160757892,154.45108606795324,160.62839501948932,164.64662257602413,161.28230388487793,178.2883055891125,191.1120434106803,163.32011955796202,158.70237539050444,154.85340656772226,157.06600838806153,156.40148403322195,185.56664183209887,202.5519969230839,165.44301595030765,162.19288950866536,155.1566368293886,148.6328232580158,161.18291754009456,184.71507057456625,193.10688303429993,150.60358283474244,156.34382769833724,171.76738591246104,143.52948983156392,162.97769458460047,165.5186013387699,191.47438598281423,157.47401040127994,150.14740835643494,158.99855027885897,163.14006144142866,175.56985351696028,193.71633067600789,191.5682920168652,166.89024073301124,148.6336189725194,169.59693153494925,141.92708271305935,161.88517937691034,188.16014118822238,193.51116836251094,181.16764780935378,145.66209964947146,175.95764896628452,187.2085431983436,187.2105009119105,189.38286332307598,207.47436731193267,174.7336868146756,146.93976632359602,152.9800577215553,163.11420678472075,176.56009188387577,198.2958510117292,183.46114440210343,156.89022003857178,156.53741488613204,151.83687618665095,153.64454428558534,157.1657918306475,183.56460045189598,202.71249353908317,173.55201565452217,180.29381803466578,174.1817317791093,194.0375128870358,188.00693958774002,202.162644848515,203.1609983034685,156.38476981145212,150.61388575342363,157.86486220634646,159.98232131987828,176.30632160095797,193.5298310053686,201.49002966385206,180.5731143697111,164.7350203740238,176.00633722931536,150.36765305848513,161.8792599717464,176.531089563983,176.07199306572562,180.55694977256724,156.84231349682372,158.39206066890802,158.95893427268854,168.61130894311248,182.52431142322465,195.34377916512238,152.57666689616272,151.30211512233612,153.65537842234426,157.0641301174075,152.70776964855625,178.6034004428445,187.22644995673994,154.43009531969804,136.08817319982356,163.68796802581298,139.37542452675032,150.18626189192778,176.14654642707765,186.34161301352174,171.29320938506936,160.09222768255958,149.85924798020272,152.72581469581326,165.73326138304236,170.7318742372808,163.89769793573797,137.88760908347098,126.83635633509383,144.67678222158324,152.73124463227464,164.44849962602686,181.19510912597414,188.3053934154703,142.29549114953878,145.1242421963098,140.87977069974116,145.12214893369057,147.93344929884708,164.03509858497293,181.94031603672224,142.29423138001337,128.77714832352783,125.4214834671166,127.37374379592914,137.1383377682845,150.35163384744692,168.79084532429752,136.50860482079452,138.53442098196547,126.7825607533131,127.2447645842231,129.72455275065525,141.52407743390214,152.08899349336707,133.78593460544832,131.07810035876798,125.98913088845825,126.55413086513747,127.21301186435706,142.4613762387955,148.39004395236904,129.33054946105918,116.0890929570366,124.0765645897347,121.59477053771353,123.30948477058035,137.37903954318372,148.0205287080192,132.4273896545406,119.27990447314207,115.06222190803064,111.04677296046856,115.0519378724381,136.86940155676814,149.02415416651323,122.46926401855694,112.72362793021188,116.5235896428128,119.93058424742321,125.35514359304432,130.80031233440477,127.47708794095135,121.02491126816206,112.06531119301582,109.5192988717859,119.47768481600596,130.0049500380649,125.01028341540078,126.97747486305825,118.92712227478242,101.42504935644826,106.926031392211,111.03404341998366,111.94557477965174,122.37027903508624,118.9651522607564,122.37232046700045,102.46855209931962,105.5209097055405,104.28292944865977,113.3997842117881,118.16181972202936,128.86815855153017,109.07889316712769,108.10192258970957,101.4240819119174,105.64361596921343,109.14472717622914,122.41120454239928,121.47242365348697,104.22575138035617,106.2663863210982,109.67367831543078,105.97834483174242,103.60847028685012,120.57587732223334,127.92749426619537,104.21463747072855,103.46058993947722,105.16705595246015,98.38669394632777,107.99931819033297,123.8465911053401,130.78468166317708,115.72582586904556,98.76656414043237,103.16518310573363,97.03882224047456,104.65149832118836,111.96505949577924,130.9795057993803,103.43386672600238,103.42772896150187,96.12552264158742,94.2338555586787,108.35974883555758,116.91678045687027,122.03391255719707,107.37691719938191,88.81951614479385,92.1800889240902,96.9336483016189,108.69599180198125,130.17677348582416,139.81894681391148,123.73087482725867,117.40816936385632,118.17055187398249,107.58689164032401,112.85367812287943,110.9709113481687,137.72454910970117,111.19662526810694,96.91212712812569,91.57193234612024,111.44578783964246,103.35780326307236,114.00885628065785,116.32264318147014,112.33731585250224,95.07920350418033,101.13204437341696,101.64235337798495,106.11451873389814,114.72747711575303,129.07947326502708,105.9358658915526,104.2379040729814,105.22632171048696,96.15599674385324,114.96549442587968,124.58728743681954,123.90119008609636,113.4028141930583,101.04218522647378,111.1889991886547,104.95161912282666,110.67609566599342,124.58829374835688,125.49172394262382,109.36578718588174,113.74424716244253,99.39550886398166,110.46608719744195,106.22877535118901,125.18796153584694,140.8480339610493,112.05943145840693,105.04497266662136,106.20068276829616,112.86078971485486,118.230559353514,123.08717306825248,146.60652123395698,114.85613119922175,111.54261072062724,113.68960517163498,113.57259155724782,121.43803387699802,134.39734145268628,134.65578012901275,116.76466637271153,118.35735049181802,103.70089556180682,117.40805281286706,126.1415480238877,135.98950761741938,144.60283468960813,131.27187521155832,105.81769253655085,126.55427799988804,114.71895673540533,124.74285949852657,134.45009592881397,140.8288433480887,129.32205519333675,110.97056715520988,115.31423548132271,112.67546543258302,122.35337937222573,138.62077047899172,144.1785163948991,138.38144413928035,128.87168040965534,134.2798916884911,144.632407162188,180.3016066391805,243.84185286747064,284.8571206766421,224.26537622590712,217.23946359335977,181.15558765094096],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"date\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"STL-ARIMA Forecasts with (7,0,0)\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('c8e4776f-031c-4af3-b765-c5c221fc6222');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<table class=\"simpletable\">\n<caption>STL Decomposition and SARIMAX Results</caption>\n<tr>\n  <th>Dep. Variable:</th>           <td>y</td>        <th>  No. Observations:  </th>   <td>1095</td>   \n</tr>\n<tr>\n  <th>Model:</th>            <td>ARIMA(7, 0, 0)</td>  <th>  Log Likelihood     </th> <td>-3477.975</td>\n</tr>\n<tr>\n  <th>Date:</th>            <td>Tue, 20 Dec 2022</td> <th>  AIC                </th> <td>6973.950</td> \n</tr>\n<tr>\n  <th>Time:</th>                <td>17:21:07</td>     <th>  BIC                </th> <td>7018.937</td> \n</tr>\n<tr>\n  <th>Sample:</th>             <td>01-01-2017</td>    <th>  HQIC               </th> <td>6990.973</td> \n</tr>\n<tr>\n  <th></th>                   <td>- 12-31-2019</td>   <th>                     </th>     <td> </td>    \n</tr>\n<tr>\n  <th>Covariance Type:</th>        <td>opg</td>       <th>                     </th>     <td> </td>    \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>x1</th>     <td>    0.0074</td> <td>    0.135</td> <td>    0.055</td> <td> 0.956</td> <td>   -0.258</td> <td>    0.273</td>\n</tr>\n<tr>\n  <th>ar.L1</th>  <td>    0.1083</td> <td>    0.019</td> <td>    5.696</td> <td> 0.000</td> <td>    0.071</td> <td>    0.146</td>\n</tr>\n<tr>\n  <th>ar.L2</th>  <td>    0.1827</td> <td>    0.021</td> <td>    8.721</td> <td> 0.000</td> <td>    0.142</td> <td>    0.224</td>\n</tr>\n<tr>\n  <th>ar.L3</th>  <td>    0.1113</td> <td>    0.018</td> <td>    6.122</td> <td> 0.000</td> <td>    0.076</td> <td>    0.147</td>\n</tr>\n<tr>\n  <th>ar.L4</th>  <td>    0.1520</td> <td>    0.020</td> <td>    7.456</td> <td> 0.000</td> <td>    0.112</td> <td>    0.192</td>\n</tr>\n<tr>\n  <th>ar.L5</th>  <td>    0.0204</td> <td>    0.020</td> <td>    1.024</td> <td> 0.306</td> <td>   -0.019</td> <td>    0.060</td>\n</tr>\n<tr>\n  <th>ar.L6</th>  <td>   -0.0949</td> <td>    0.020</td> <td>   -4.857</td> <td> 0.000</td> <td>   -0.133</td> <td>   -0.057</td>\n</tr>\n<tr>\n  <th>ar.L7</th>  <td>    0.5200</td> <td>    0.017</td> <td>   30.557</td> <td> 0.000</td> <td>    0.487</td> <td>    0.553</td>\n</tr>\n<tr>\n  <th>sigma2</th> <td>   33.3182</td> <td>    0.864</td> <td>   38.550</td> <td> 0.000</td> <td>   31.624</td> <td>   35.012</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Ljung-Box (L1) (Q):</th>     <td>8.57</td> <th>  Jarque-Bera (JB):  </th> <td>629.83</td>\n</tr>\n<tr>\n  <th>Prob(Q):</th>                <td>0.00</td> <th>  Prob(JB):          </th>  <td>0.00</td> \n</tr>\n<tr>\n  <th>Heteroskedasticity (H):</th> <td>1.06</td> <th>  Skew:              </th>  <td>-0.10</td>\n</tr>\n<tr>\n  <th>Prob(H) (two-sided):</th>    <td>0.60</td> <th>  Kurtosis:          </th>  <td>6.71</td> \n</tr>\n</table>\n<table class=\"simpletable\">\n<caption>STL Configuration</caption>\n<tr>\n  <th>Period:                </th> <td>          365</td> <th>      Trend Length:          </th> <td>         1095</td>\n</tr>\n<tr>\n  <th>Seasonal:              </th> <td>            7</td> <th>      Trend deg:             </th> <td>            1</td>\n</tr>\n<tr>\n  <th>Seasonal deg:          </th> <td>            1</td> <th>      Trend jump:            </th> <td>            1</td>\n</tr>\n<tr>\n  <th>Seasonal jump:         </th> <td>            1</td> <th>      Low pass:              </th> <td>          367</td>\n</tr>\n<tr>\n  <th>Robust:                </th> <td>        False</td> <th>      Low pass deg:          </th> <td>            1</td>\n</tr>\n</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n```\n:::\n:::\n\n\nThe forecast looks pretty good already; however, from the summary we detect that p-value for Ljung-Box test is smaller than 0.05. The null hypothesis of Ljung-Box test is that residuals of the model after fitting ARIMA does not contain autocorrelations. Smaller than 0.05 p-value shows that our model could not capture the autocorrelations of the model fully. So will try different q orders and select the one which has the smallest AIC value and the case where the residuals are significantly autocorrelated (p > 0.05).\n\n::: {.cell cache='true' execution_count=14}\n``` {.python .cell-code}\nq_orders = np.arange(0, 8)\nresults = []\nfor q in q_orders:\n    stl_forecast = STLForecast(\n        train_subset,\n        model=ARIMA,\n        model_kwargs={\"order\": (7, 0, q), \"trend\": \"t\"},\n        period=365,\n        trend=1095,\n        robust=False,\n    )\n\n    model = stl_forecast.fit()\n    forecast = model.forecast(steps=366)\n    results.append(model.model_result.aic)\n\nprint(f\"Best q is {results.index(min(results))} with AIC value of {min(results)}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nBest q is 7 with AIC value of 6781.7431055363095\n```\n:::\n:::\n\n\nLet's check the summary again with q value of 7.\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nstl_forecast = STLForecast(\n    train_subset,\n    model=ARIMA,\n    model_kwargs={\"order\": (7, 0, 7),\n                    \"trend\": \"t\"},\n    period=365,\n    trend=1095,\n    robust=False\n)\n\nmodel = stl_forecast.fit()\n\n# Forecast for the last year\nforecast = model.forecast(steps=366)\n\n# Plot both test data and forecast from the model to compare them visually.\nplot_forecasts(test_subset_pretuning[\"num_sold\"], forecast, title=\"STL-ARIMA Forecasts with (7,0,7)\")\n\nmodel.summary()\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"ea6871e5-8b99-4411-aa32-4917916ee9e0\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"ea6871e5-8b99-4411-aa32-4917916ee9e0\")) {                    Plotly.newPlot(                        \"ea6871e5-8b99-4411-aa32-4917916ee9e0\",                        [{\"hovertemplate\":\"=Observed<br>date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"2020-01-01T00:00:00\",\"2020-01-02T00:00:00\",\"2020-01-03T00:00:00\",\"2020-01-04T00:00:00\",\"2020-01-05T00:00:00\",\"2020-01-06T00:00:00\",\"2020-01-07T00:00:00\",\"2020-01-08T00:00:00\",\"2020-01-09T00:00:00\",\"2020-01-10T00:00:00\",\"2020-01-11T00:00:00\",\"2020-01-12T00:00:00\",\"2020-01-13T00:00:00\",\"2020-01-14T00:00:00\",\"2020-01-15T00:00:00\",\"2020-01-16T00:00:00\",\"2020-01-17T00:00:00\",\"2020-01-18T00:00:00\",\"2020-01-19T00:00:00\",\"2020-01-20T00:00:00\",\"2020-01-21T00:00:00\",\"2020-01-22T00:00:00\",\"2020-01-23T00:00:00\",\"2020-01-24T00:00:00\",\"2020-01-25T00:00:00\",\"2020-01-26T00:00:00\",\"2020-01-27T00:00:00\",\"2020-01-28T00:00:00\",\"2020-01-29T00:00:00\",\"2020-01-30T00:00:00\",\"2020-01-31T00:00:00\",\"2020-02-01T00:00:00\",\"2020-02-02T00:00:00\",\"2020-02-03T00:00:00\",\"2020-02-04T00:00:00\",\"2020-02-05T00:00:00\",\"2020-02-06T00:00:00\",\"2020-02-07T00:00:00\",\"2020-02-08T00:00:00\",\"2020-02-09T00:00:00\",\"2020-02-10T00:00:00\",\"2020-02-11T00:00:00\",\"2020-02-12T00:00:00\",\"2020-02-13T00:00:00\",\"2020-02-14T00:00:00\",\"2020-02-15T00:00:00\",\"2020-02-16T00:00:00\",\"2020-02-17T00:00:00\",\"2020-02-18T00:00:00\",\"2020-02-19T00:00:00\",\"2020-02-20T00:00:00\",\"2020-02-21T00:00:00\",\"2020-02-22T00:00:00\",\"2020-02-23T00:00:00\",\"2020-02-24T00:00:00\",\"2020-02-25T00:00:00\",\"2020-02-26T00:00:00\",\"2020-02-27T00:00:00\",\"2020-02-28T00:00:00\",\"2020-02-29T00:00:00\",\"2020-03-01T00:00:00\",\"2020-03-02T00:00:00\",\"2020-03-03T00:00:00\",\"2020-03-04T00:00:00\",\"2020-03-05T00:00:00\",\"2020-03-06T00:00:00\",\"2020-03-07T00:00:00\",\"2020-03-08T00:00:00\",\"2020-03-09T00:00:00\",\"2020-03-10T00:00:00\",\"2020-03-11T00:00:00\",\"2020-03-12T00:00:00\",\"2020-03-13T00:00:00\",\"2020-03-14T00:00:00\",\"2020-03-15T00:00:00\",\"2020-03-16T00:00:00\",\"2020-03-17T00:00:00\",\"2020-03-18T00:00:00\",\"2020-03-19T00:00:00\",\"2020-03-20T00:00:00\",\"2020-03-21T00:00:00\",\"2020-03-22T00:00:00\",\"2020-03-23T00:00:00\",\"2020-03-24T00:00:00\",\"2020-03-25T00:00:00\",\"2020-03-26T00:00:00\",\"2020-03-27T00:00:00\",\"2020-03-28T00:00:00\",\"2020-03-29T00:00:00\",\"2020-03-30T00:00:00\",\"2020-03-31T00:00:00\",\"2020-04-01T00:00:00\",\"2020-04-02T00:00:00\",\"2020-04-03T00:00:00\",\"2020-04-04T00:00:00\",\"2020-04-05T00:00:00\",\"2020-04-06T00:00:00\",\"2020-04-07T00:00:00\",\"2020-04-08T00:00:00\",\"2020-04-09T00:00:00\",\"2020-04-10T00:00:00\",\"2020-04-11T00:00:00\",\"2020-04-12T00:00:00\",\"2020-04-13T00:00:00\",\"2020-04-14T00:00:00\",\"2020-04-15T00:00:00\",\"2020-04-16T00:00:00\",\"2020-04-17T00:00:00\",\"2020-04-18T00:00:00\",\"2020-04-19T00:00:00\",\"2020-04-20T00:00:00\",\"2020-04-21T00:00:00\",\"2020-04-22T00:00:00\",\"2020-04-23T00:00:00\",\"2020-04-24T00:00:00\",\"2020-04-25T00:00:00\",\"2020-04-26T00:00:00\",\"2020-04-27T00:00:00\",\"2020-04-28T00:00:00\",\"2020-04-29T00:00:00\",\"2020-04-30T00:00:00\",\"2020-05-01T00:00:00\",\"2020-05-02T00:00:00\",\"2020-05-03T00:00:00\",\"2020-05-04T00:00:00\",\"2020-05-05T00:00:00\",\"2020-05-06T00:00:00\",\"2020-05-07T00:00:00\",\"2020-05-08T00:00:00\",\"2020-05-09T00:00:00\",\"2020-05-10T00:00:00\",\"2020-05-11T00:00:00\",\"2020-05-12T00:00:00\",\"2020-05-13T00:00:00\",\"2020-05-14T00:00:00\",\"2020-05-15T00:00:00\",\"2020-05-16T00:00:00\",\"2020-05-17T00:00:00\",\"2020-05-18T00:00:00\",\"2020-05-19T00:00:00\",\"2020-05-20T00:00:00\",\"2020-05-21T00:00:00\",\"2020-05-22T00:00:00\",\"2020-05-23T00:00:00\",\"2020-05-24T00:00:00\",\"2020-05-25T00:00:00\",\"2020-05-26T00:00:00\",\"2020-05-27T00:00:00\",\"2020-05-28T00:00:00\",\"2020-05-29T00:00:00\",\"2020-05-30T00:00:00\",\"2020-05-31T00:00:00\",\"2020-06-01T00:00:00\",\"2020-06-02T00:00:00\",\"2020-06-03T00:00:00\",\"2020-06-04T00:00:00\",\"2020-06-05T00:00:00\",\"2020-06-06T00:00:00\",\"2020-06-07T00:00:00\",\"2020-06-08T00:00:00\",\"2020-06-09T00:00:00\",\"2020-06-10T00:00:00\",\"2020-06-11T00:00:00\",\"2020-06-12T00:00:00\",\"2020-06-13T00:00:00\",\"2020-06-14T00:00:00\",\"2020-06-15T00:00:00\",\"2020-06-16T00:00:00\",\"2020-06-17T00:00:00\",\"2020-06-18T00:00:00\",\"2020-06-19T00:00:00\",\"2020-06-20T00:00:00\",\"2020-06-21T00:00:00\",\"2020-06-22T00:00:00\",\"2020-06-23T00:00:00\",\"2020-06-24T00:00:00\",\"2020-06-25T00:00:00\",\"2020-06-26T00:00:00\",\"2020-06-27T00:00:00\",\"2020-06-28T00:00:00\",\"2020-06-29T00:00:00\",\"2020-06-30T00:00:00\",\"2020-07-01T00:00:00\",\"2020-07-02T00:00:00\",\"2020-07-03T00:00:00\",\"2020-07-04T00:00:00\",\"2020-07-05T00:00:00\",\"2020-07-06T00:00:00\",\"2020-07-07T00:00:00\",\"2020-07-08T00:00:00\",\"2020-07-09T00:00:00\",\"2020-07-10T00:00:00\",\"2020-07-11T00:00:00\",\"2020-07-12T00:00:00\",\"2020-07-13T00:00:00\",\"2020-07-14T00:00:00\",\"2020-07-15T00:00:00\",\"2020-07-16T00:00:00\",\"2020-07-17T00:00:00\",\"2020-07-18T00:00:00\",\"2020-07-19T00:00:00\",\"2020-07-20T00:00:00\",\"2020-07-21T00:00:00\",\"2020-07-22T00:00:00\",\"2020-07-23T00:00:00\",\"2020-07-24T00:00:00\",\"2020-07-25T00:00:00\",\"2020-07-26T00:00:00\",\"2020-07-27T00:00:00\",\"2020-07-28T00:00:00\",\"2020-07-29T00:00:00\",\"2020-07-30T00:00:00\",\"2020-07-31T00:00:00\",\"2020-08-01T00:00:00\",\"2020-08-02T00:00:00\",\"2020-08-03T00:00:00\",\"2020-08-04T00:00:00\",\"2020-08-05T00:00:00\",\"2020-08-06T00:00:00\",\"2020-08-07T00:00:00\",\"2020-08-08T00:00:00\",\"2020-08-09T00:00:00\",\"2020-08-10T00:00:00\",\"2020-08-11T00:00:00\",\"2020-08-12T00:00:00\",\"2020-08-13T00:00:00\",\"2020-08-14T00:00:00\",\"2020-08-15T00:00:00\",\"2020-08-16T00:00:00\",\"2020-08-17T00:00:00\",\"2020-08-18T00:00:00\",\"2020-08-19T00:00:00\",\"2020-08-20T00:00:00\",\"2020-08-21T00:00:00\",\"2020-08-22T00:00:00\",\"2020-08-23T00:00:00\",\"2020-08-24T00:00:00\",\"2020-08-25T00:00:00\",\"2020-08-26T00:00:00\",\"2020-08-27T00:00:00\",\"2020-08-28T00:00:00\",\"2020-08-29T00:00:00\",\"2020-08-30T00:00:00\",\"2020-08-31T00:00:00\",\"2020-09-01T00:00:00\",\"2020-09-02T00:00:00\",\"2020-09-03T00:00:00\",\"2020-09-04T00:00:00\",\"2020-09-05T00:00:00\",\"2020-09-06T00:00:00\",\"2020-09-07T00:00:00\",\"2020-09-08T00:00:00\",\"2020-09-09T00:00:00\",\"2020-09-10T00:00:00\",\"2020-09-11T00:00:00\",\"2020-09-12T00:00:00\",\"2020-09-13T00:00:00\",\"2020-09-14T00:00:00\",\"2020-09-15T00:00:00\",\"2020-09-16T00:00:00\",\"2020-09-17T00:00:00\",\"2020-09-18T00:00:00\",\"2020-09-19T00:00:00\",\"2020-09-20T00:00:00\",\"2020-09-21T00:00:00\",\"2020-09-22T00:00:00\",\"2020-09-23T00:00:00\",\"2020-09-24T00:00:00\",\"2020-09-25T00:00:00\",\"2020-09-26T00:00:00\",\"2020-09-27T00:00:00\",\"2020-09-28T00:00:00\",\"2020-09-29T00:00:00\",\"2020-09-30T00:00:00\",\"2020-10-01T00:00:00\",\"2020-10-02T00:00:00\",\"2020-10-03T00:00:00\",\"2020-10-04T00:00:00\",\"2020-10-05T00:00:00\",\"2020-10-06T00:00:00\",\"2020-10-07T00:00:00\",\"2020-10-08T00:00:00\",\"2020-10-09T00:00:00\",\"2020-10-10T00:00:00\",\"2020-10-11T00:00:00\",\"2020-10-12T00:00:00\",\"2020-10-13T00:00:00\",\"2020-10-14T00:00:00\",\"2020-10-15T00:00:00\",\"2020-10-16T00:00:00\",\"2020-10-17T00:00:00\",\"2020-10-18T00:00:00\",\"2020-10-19T00:00:00\",\"2020-10-20T00:00:00\",\"2020-10-21T00:00:00\",\"2020-10-22T00:00:00\",\"2020-10-23T00:00:00\",\"2020-10-24T00:00:00\",\"2020-10-25T00:00:00\",\"2020-10-26T00:00:00\",\"2020-10-27T00:00:00\",\"2020-10-28T00:00:00\",\"2020-10-29T00:00:00\",\"2020-10-30T00:00:00\",\"2020-10-31T00:00:00\",\"2020-11-01T00:00:00\",\"2020-11-02T00:00:00\",\"2020-11-03T00:00:00\",\"2020-11-04T00:00:00\",\"2020-11-05T00:00:00\",\"2020-11-06T00:00:00\",\"2020-11-07T00:00:00\",\"2020-11-08T00:00:00\",\"2020-11-09T00:00:00\",\"2020-11-10T00:00:00\",\"2020-11-11T00:00:00\",\"2020-11-12T00:00:00\",\"2020-11-13T00:00:00\",\"2020-11-14T00:00:00\",\"2020-11-15T00:00:00\",\"2020-11-16T00:00:00\",\"2020-11-17T00:00:00\",\"2020-11-18T00:00:00\",\"2020-11-19T00:00:00\",\"2020-11-20T00:00:00\",\"2020-11-21T00:00:00\",\"2020-11-22T00:00:00\",\"2020-11-23T00:00:00\",\"2020-11-24T00:00:00\",\"2020-11-25T00:00:00\",\"2020-11-26T00:00:00\",\"2020-11-27T00:00:00\",\"2020-11-28T00:00:00\",\"2020-11-29T00:00:00\",\"2020-11-30T00:00:00\",\"2020-12-01T00:00:00\",\"2020-12-02T00:00:00\",\"2020-12-03T00:00:00\",\"2020-12-04T00:00:00\",\"2020-12-05T00:00:00\",\"2020-12-06T00:00:00\",\"2020-12-07T00:00:00\",\"2020-12-08T00:00:00\",\"2020-12-09T00:00:00\",\"2020-12-10T00:00:00\",\"2020-12-11T00:00:00\",\"2020-12-12T00:00:00\",\"2020-12-13T00:00:00\",\"2020-12-14T00:00:00\",\"2020-12-15T00:00:00\",\"2020-12-16T00:00:00\",\"2020-12-17T00:00:00\",\"2020-12-18T00:00:00\",\"2020-12-19T00:00:00\",\"2020-12-20T00:00:00\",\"2020-12-21T00:00:00\",\"2020-12-22T00:00:00\",\"2020-12-23T00:00:00\",\"2020-12-24T00:00:00\",\"2020-12-25T00:00:00\",\"2020-12-26T00:00:00\",\"2020-12-27T00:00:00\",\"2020-12-28T00:00:00\",\"2020-12-29T00:00:00\",\"2020-12-30T00:00:00\",\"2020-12-31T00:00:00\"],\"xaxis\":\"x\",\"y\":[185.0,151.0,165.0,173.0,163.0,161.0,147.0,143.0,141.0,135.0,157.0,171.0,136.0,148.0,134.0,142.0,142.0,168.0,165.0,137.0,128.0,150.0,149.0,142.0,156.0,178.0,146.0,142.0,148.0,139.0,156.0,157.0,175.0,144.0,143.0,148.0,143.0,152.0,155.0,174.0,157.0,151.0,148.0,147.0,146.0,177.0,181.0,157.0,141.0,136.0,148.0,164.0,175.0,180.0,153.0,153.0,156.0,152.0,148.0,192.0,161.0,138.0,147.0,138.0,127.0,138.0,160.0,160.0,129.0,137.0,130.0,144.0,142.0,165.0,160.0,149.0,142.0,139.0,132.0,147.0,150.0,153.0,131.0,133.0,144.0,138.0,137.0,165.0,181.0,129.0,142.0,127.0,113.0,126.0,128.0,137.0,113.0,123.0,121.0,107.0,113.0,136.0,137.0,122.0,127.0,140.0,137.0,155.0,149.0,148.0,128.0,115.0,113.0,107.0,114.0,128.0,136.0,111.0,115.0,110.0,117.0,134.0,147.0,143.0,140.0,133.0,150.0,131.0,135.0,143.0,146.0,124.0,121.0,115.0,129.0,116.0,144.0,141.0,115.0,124.0,129.0,119.0,135.0,135.0,153.0,137.0,129.0,126.0,121.0,127.0,134.0,125.0,133.0,124.0,143.0,138.0,149.0,145.0,150.0,126.0,140.0,124.0,124.0,128.0,144.0,140.0,118.0,115.0,128.0,112.0,113.0,147.0,131.0,111.0,122.0,115.0,119.0,121.0,132.0,134.0,118.0,112.0,121.0,125.0,133.0,142.0,140.0,127.0,125.0,116.0,117.0,123.0,132.0,142.0,116.0,129.0,115.0,120.0,122.0,135.0,140.0,103.0,108.0,119.0,105.0,113.0,129.0,136.0,108.0,99.0,111.0,100.0,102.0,117.0,121.0,113.0,121.0,111.0,107.0,111.0,119.0,122.0,108.0,98.0,110.0,91.0,119.0,115.0,123.0,86.0,98.0,105.0,103.0,100.0,104.0,127.0,104.0,94.0,108.0,107.0,101.0,110.0,106.0,98.0,100.0,107.0,98.0,99.0,120.0,125.0,94.0,99.0,94.0,93.0,107.0,108.0,126.0,86.0,93.0,90.0,105.0,107.0,113.0,96.0,93.0,85.0,91.0,90.0,109.0,108.0,110.0,96.0,99.0,99.0,100.0,108.0,103.0,133.0,106.0,106.0,112.0,104.0,111.0,125.0,126.0,94.0,100.0,100.0,95.0,110.0,111.0,131.0,92.0,98.0,95.0,98.0,109.0,119.0,122.0,104.0,91.0,97.0,96.0,105.0,111.0,114.0,95.0,97.0,106.0,96.0,107.0,125.0,118.0,107.0,105.0,98.0,99.0,103.0,118.0,138.0,112.0,111.0,104.0,113.0,108.0,131.0,127.0,109.0,110.0,108.0,112.0,116.0,119.0,135.0,121.0,109.0,117.0,121.0,112.0,123.0,127.0,112.0,117.0,118.0,109.0,116.0,128.0,150.0,104.0,116.0,110.0,112.0,124.0,138.0,161.0,114.0,127.0,118.0,122.0,123.0,172.0,195.0,198.0,225.0,245.0,218.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>date=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"2020-01-01T00:00:00\",\"2020-01-02T00:00:00\",\"2020-01-03T00:00:00\",\"2020-01-04T00:00:00\",\"2020-01-05T00:00:00\",\"2020-01-06T00:00:00\",\"2020-01-07T00:00:00\",\"2020-01-08T00:00:00\",\"2020-01-09T00:00:00\",\"2020-01-10T00:00:00\",\"2020-01-11T00:00:00\",\"2020-01-12T00:00:00\",\"2020-01-13T00:00:00\",\"2020-01-14T00:00:00\",\"2020-01-15T00:00:00\",\"2020-01-16T00:00:00\",\"2020-01-17T00:00:00\",\"2020-01-18T00:00:00\",\"2020-01-19T00:00:00\",\"2020-01-20T00:00:00\",\"2020-01-21T00:00:00\",\"2020-01-22T00:00:00\",\"2020-01-23T00:00:00\",\"2020-01-24T00:00:00\",\"2020-01-25T00:00:00\",\"2020-01-26T00:00:00\",\"2020-01-27T00:00:00\",\"2020-01-28T00:00:00\",\"2020-01-29T00:00:00\",\"2020-01-30T00:00:00\",\"2020-01-31T00:00:00\",\"2020-02-01T00:00:00\",\"2020-02-02T00:00:00\",\"2020-02-03T00:00:00\",\"2020-02-04T00:00:00\",\"2020-02-05T00:00:00\",\"2020-02-06T00:00:00\",\"2020-02-07T00:00:00\",\"2020-02-08T00:00:00\",\"2020-02-09T00:00:00\",\"2020-02-10T00:00:00\",\"2020-02-11T00:00:00\",\"2020-02-12T00:00:00\",\"2020-02-13T00:00:00\",\"2020-02-14T00:00:00\",\"2020-02-15T00:00:00\",\"2020-02-16T00:00:00\",\"2020-02-17T00:00:00\",\"2020-02-18T00:00:00\",\"2020-02-19T00:00:00\",\"2020-02-20T00:00:00\",\"2020-02-21T00:00:00\",\"2020-02-22T00:00:00\",\"2020-02-23T00:00:00\",\"2020-02-24T00:00:00\",\"2020-02-25T00:00:00\",\"2020-02-26T00:00:00\",\"2020-02-27T00:00:00\",\"2020-02-28T00:00:00\",\"2020-02-29T00:00:00\",\"2020-03-01T00:00:00\",\"2020-03-02T00:00:00\",\"2020-03-03T00:00:00\",\"2020-03-04T00:00:00\",\"2020-03-05T00:00:00\",\"2020-03-06T00:00:00\",\"2020-03-07T00:00:00\",\"2020-03-08T00:00:00\",\"2020-03-09T00:00:00\",\"2020-03-10T00:00:00\",\"2020-03-11T00:00:00\",\"2020-03-12T00:00:00\",\"2020-03-13T00:00:00\",\"2020-03-14T00:00:00\",\"2020-03-15T00:00:00\",\"2020-03-16T00:00:00\",\"2020-03-17T00:00:00\",\"2020-03-18T00:00:00\",\"2020-03-19T00:00:00\",\"2020-03-20T00:00:00\",\"2020-03-21T00:00:00\",\"2020-03-22T00:00:00\",\"2020-03-23T00:00:00\",\"2020-03-24T00:00:00\",\"2020-03-25T00:00:00\",\"2020-03-26T00:00:00\",\"2020-03-27T00:00:00\",\"2020-03-28T00:00:00\",\"2020-03-29T00:00:00\",\"2020-03-30T00:00:00\",\"2020-03-31T00:00:00\",\"2020-04-01T00:00:00\",\"2020-04-02T00:00:00\",\"2020-04-03T00:00:00\",\"2020-04-04T00:00:00\",\"2020-04-05T00:00:00\",\"2020-04-06T00:00:00\",\"2020-04-07T00:00:00\",\"2020-04-08T00:00:00\",\"2020-04-09T00:00:00\",\"2020-04-10T00:00:00\",\"2020-04-11T00:00:00\",\"2020-04-12T00:00:00\",\"2020-04-13T00:00:00\",\"2020-04-14T00:00:00\",\"2020-04-15T00:00:00\",\"2020-04-16T00:00:00\",\"2020-04-17T00:00:00\",\"2020-04-18T00:00:00\",\"2020-04-19T00:00:00\",\"2020-04-20T00:00:00\",\"2020-04-21T00:00:00\",\"2020-04-22T00:00:00\",\"2020-04-23T00:00:00\",\"2020-04-24T00:00:00\",\"2020-04-25T00:00:00\",\"2020-04-26T00:00:00\",\"2020-04-27T00:00:00\",\"2020-04-28T00:00:00\",\"2020-04-29T00:00:00\",\"2020-04-30T00:00:00\",\"2020-05-01T00:00:00\",\"2020-05-02T00:00:00\",\"2020-05-03T00:00:00\",\"2020-05-04T00:00:00\",\"2020-05-05T00:00:00\",\"2020-05-06T00:00:00\",\"2020-05-07T00:00:00\",\"2020-05-08T00:00:00\",\"2020-05-09T00:00:00\",\"2020-05-10T00:00:00\",\"2020-05-11T00:00:00\",\"2020-05-12T00:00:00\",\"2020-05-13T00:00:00\",\"2020-05-14T00:00:00\",\"2020-05-15T00:00:00\",\"2020-05-16T00:00:00\",\"2020-05-17T00:00:00\",\"2020-05-18T00:00:00\",\"2020-05-19T00:00:00\",\"2020-05-20T00:00:00\",\"2020-05-21T00:00:00\",\"2020-05-22T00:00:00\",\"2020-05-23T00:00:00\",\"2020-05-24T00:00:00\",\"2020-05-25T00:00:00\",\"2020-05-26T00:00:00\",\"2020-05-27T00:00:00\",\"2020-05-28T00:00:00\",\"2020-05-29T00:00:00\",\"2020-05-30T00:00:00\",\"2020-05-31T00:00:00\",\"2020-06-01T00:00:00\",\"2020-06-02T00:00:00\",\"2020-06-03T00:00:00\",\"2020-06-04T00:00:00\",\"2020-06-05T00:00:00\",\"2020-06-06T00:00:00\",\"2020-06-07T00:00:00\",\"2020-06-08T00:00:00\",\"2020-06-09T00:00:00\",\"2020-06-10T00:00:00\",\"2020-06-11T00:00:00\",\"2020-06-12T00:00:00\",\"2020-06-13T00:00:00\",\"2020-06-14T00:00:00\",\"2020-06-15T00:00:00\",\"2020-06-16T00:00:00\",\"2020-06-17T00:00:00\",\"2020-06-18T00:00:00\",\"2020-06-19T00:00:00\",\"2020-06-20T00:00:00\",\"2020-06-21T00:00:00\",\"2020-06-22T00:00:00\",\"2020-06-23T00:00:00\",\"2020-06-24T00:00:00\",\"2020-06-25T00:00:00\",\"2020-06-26T00:00:00\",\"2020-06-27T00:00:00\",\"2020-06-28T00:00:00\",\"2020-06-29T00:00:00\",\"2020-06-30T00:00:00\",\"2020-07-01T00:00:00\",\"2020-07-02T00:00:00\",\"2020-07-03T00:00:00\",\"2020-07-04T00:00:00\",\"2020-07-05T00:00:00\",\"2020-07-06T00:00:00\",\"2020-07-07T00:00:00\",\"2020-07-08T00:00:00\",\"2020-07-09T00:00:00\",\"2020-07-10T00:00:00\",\"2020-07-11T00:00:00\",\"2020-07-12T00:00:00\",\"2020-07-13T00:00:00\",\"2020-07-14T00:00:00\",\"2020-07-15T00:00:00\",\"2020-07-16T00:00:00\",\"2020-07-17T00:00:00\",\"2020-07-18T00:00:00\",\"2020-07-19T00:00:00\",\"2020-07-20T00:00:00\",\"2020-07-21T00:00:00\",\"2020-07-22T00:00:00\",\"2020-07-23T00:00:00\",\"2020-07-24T00:00:00\",\"2020-07-25T00:00:00\",\"2020-07-26T00:00:00\",\"2020-07-27T00:00:00\",\"2020-07-28T00:00:00\",\"2020-07-29T00:00:00\",\"2020-07-30T00:00:00\",\"2020-07-31T00:00:00\",\"2020-08-01T00:00:00\",\"2020-08-02T00:00:00\",\"2020-08-03T00:00:00\",\"2020-08-04T00:00:00\",\"2020-08-05T00:00:00\",\"2020-08-06T00:00:00\",\"2020-08-07T00:00:00\",\"2020-08-08T00:00:00\",\"2020-08-09T00:00:00\",\"2020-08-10T00:00:00\",\"2020-08-11T00:00:00\",\"2020-08-12T00:00:00\",\"2020-08-13T00:00:00\",\"2020-08-14T00:00:00\",\"2020-08-15T00:00:00\",\"2020-08-16T00:00:00\",\"2020-08-17T00:00:00\",\"2020-08-18T00:00:00\",\"2020-08-19T00:00:00\",\"2020-08-20T00:00:00\",\"2020-08-21T00:00:00\",\"2020-08-22T00:00:00\",\"2020-08-23T00:00:00\",\"2020-08-24T00:00:00\",\"2020-08-25T00:00:00\",\"2020-08-26T00:00:00\",\"2020-08-27T00:00:00\",\"2020-08-28T00:00:00\",\"2020-08-29T00:00:00\",\"2020-08-30T00:00:00\",\"2020-08-31T00:00:00\",\"2020-09-01T00:00:00\",\"2020-09-02T00:00:00\",\"2020-09-03T00:00:00\",\"2020-09-04T00:00:00\",\"2020-09-05T00:00:00\",\"2020-09-06T00:00:00\",\"2020-09-07T00:00:00\",\"2020-09-08T00:00:00\",\"2020-09-09T00:00:00\",\"2020-09-10T00:00:00\",\"2020-09-11T00:00:00\",\"2020-09-12T00:00:00\",\"2020-09-13T00:00:00\",\"2020-09-14T00:00:00\",\"2020-09-15T00:00:00\",\"2020-09-16T00:00:00\",\"2020-09-17T00:00:00\",\"2020-09-18T00:00:00\",\"2020-09-19T00:00:00\",\"2020-09-20T00:00:00\",\"2020-09-21T00:00:00\",\"2020-09-22T00:00:00\",\"2020-09-23T00:00:00\",\"2020-09-24T00:00:00\",\"2020-09-25T00:00:00\",\"2020-09-26T00:00:00\",\"2020-09-27T00:00:00\",\"2020-09-28T00:00:00\",\"2020-09-29T00:00:00\",\"2020-09-30T00:00:00\",\"2020-10-01T00:00:00\",\"2020-10-02T00:00:00\",\"2020-10-03T00:00:00\",\"2020-10-04T00:00:00\",\"2020-10-05T00:00:00\",\"2020-10-06T00:00:00\",\"2020-10-07T00:00:00\",\"2020-10-08T00:00:00\",\"2020-10-09T00:00:00\",\"2020-10-10T00:00:00\",\"2020-10-11T00:00:00\",\"2020-10-12T00:00:00\",\"2020-10-13T00:00:00\",\"2020-10-14T00:00:00\",\"2020-10-15T00:00:00\",\"2020-10-16T00:00:00\",\"2020-10-17T00:00:00\",\"2020-10-18T00:00:00\",\"2020-10-19T00:00:00\",\"2020-10-20T00:00:00\",\"2020-10-21T00:00:00\",\"2020-10-22T00:00:00\",\"2020-10-23T00:00:00\",\"2020-10-24T00:00:00\",\"2020-10-25T00:00:00\",\"2020-10-26T00:00:00\",\"2020-10-27T00:00:00\",\"2020-10-28T00:00:00\",\"2020-10-29T00:00:00\",\"2020-10-30T00:00:00\",\"2020-10-31T00:00:00\",\"2020-11-01T00:00:00\",\"2020-11-02T00:00:00\",\"2020-11-03T00:00:00\",\"2020-11-04T00:00:00\",\"2020-11-05T00:00:00\",\"2020-11-06T00:00:00\",\"2020-11-07T00:00:00\",\"2020-11-08T00:00:00\",\"2020-11-09T00:00:00\",\"2020-11-10T00:00:00\",\"2020-11-11T00:00:00\",\"2020-11-12T00:00:00\",\"2020-11-13T00:00:00\",\"2020-11-14T00:00:00\",\"2020-11-15T00:00:00\",\"2020-11-16T00:00:00\",\"2020-11-17T00:00:00\",\"2020-11-18T00:00:00\",\"2020-11-19T00:00:00\",\"2020-11-20T00:00:00\",\"2020-11-21T00:00:00\",\"2020-11-22T00:00:00\",\"2020-11-23T00:00:00\",\"2020-11-24T00:00:00\",\"2020-11-25T00:00:00\",\"2020-11-26T00:00:00\",\"2020-11-27T00:00:00\",\"2020-11-28T00:00:00\",\"2020-11-29T00:00:00\",\"2020-11-30T00:00:00\",\"2020-12-01T00:00:00\",\"2020-12-02T00:00:00\",\"2020-12-03T00:00:00\",\"2020-12-04T00:00:00\",\"2020-12-05T00:00:00\",\"2020-12-06T00:00:00\",\"2020-12-07T00:00:00\",\"2020-12-08T00:00:00\",\"2020-12-09T00:00:00\",\"2020-12-10T00:00:00\",\"2020-12-11T00:00:00\",\"2020-12-12T00:00:00\",\"2020-12-13T00:00:00\",\"2020-12-14T00:00:00\",\"2020-12-15T00:00:00\",\"2020-12-16T00:00:00\",\"2020-12-17T00:00:00\",\"2020-12-18T00:00:00\",\"2020-12-19T00:00:00\",\"2020-12-20T00:00:00\",\"2020-12-21T00:00:00\",\"2020-12-22T00:00:00\",\"2020-12-23T00:00:00\",\"2020-12-24T00:00:00\",\"2020-12-25T00:00:00\",\"2020-12-26T00:00:00\",\"2020-12-27T00:00:00\",\"2020-12-28T00:00:00\",\"2020-12-29T00:00:00\",\"2020-12-30T00:00:00\",\"2020-12-31T00:00:00\"],\"xaxis\":\"x\",\"y\":[180.18672966468597,169.62020175253556,146.66831733137568,151.18254633698479,175.13382264329397,168.4912198689006,153.6419786535307,148.83706371497271,139.25337873914972,139.92706751288418,151.9660936717208,149.0316014484915,157.07452993674366,143.39582736511565,127.26843913230925,148.15916518237105,137.1857162110501,150.27655784664663,164.51349499820708,157.71798614569704,153.18677812983597,139.09634866137495,138.03537828241994,149.0697000263032,163.58004019111004,180.89318926622389,172.29293851445192,158.74483795249623,137.52105946098507,156.732923396556,149.12000713868875,140.99142107449762,162.46878891840234,184.95205910042415,151.28852100616876,142.12622532058185,149.6085525240514,154.99269068342602,151.18163285853325,165.92692640477208,187.4158849853758,157.6223491360081,130.91258939936415,160.4722925795062,164.07194987293087,147.62040304744474,172.04639020937782,195.0855806298655,165.99286331262488,154.124358386439,161.52046308058834,167.67445992187302,163.41515972073773,180.41455089435647,190.79791283481467,169.6096348029307,158.03902769179143,156.12982467634959,160.75472337598507,158.93612023426246,187.62386853715464,202.0664524331982,171.80374451724452,162.01962109553295,157.0577791255219,152.39503625261392,163.45426388919654,186.7838783550725,193.14827021982717,157.43375093741258,156.31894952810825,173.64948260490377,147.23846689705377,165.49223279093692,168.0866268680655,191.9212397670842,164.2128630147284,149.99862616791077,161.17904718960085,167.29172111122637,178.38028143974967,196.35532222740315,192.0631183025066,173.67952668020692,148.81010583404682,172.2541846737329,146.23341797892257,164.61401693079245,190.87035705016336,194.40846830132372,188.26222274386444,146.01895193482414,178.73793753455544,191.55656901215144,190.11035817645782,192.45244285321735,208.74035918760802,181.83956757729425,147.3009387277675,156.0265469763201,167.776754493097,179.6940035236859,201.51187924617057,184.87948743491566,164.05582584973402,157.14444822820607,155.27147981749897,158.48433773606018,160.32221770632736,186.90289250034698,204.46164699594817,180.93266642432718,181.0920561706653,177.81284762010736,198.97040262230473,191.30874619388516,205.7894586401655,205.2411706466739,163.82803303064327,151.49468105914832,161.752762503377,165.15624828919326,179.8060900430497,197.3416477880553,203.7735866267406,188.08909792317957,165.82703141875396,180.22918368669698,155.71948589431412,165.4607078122664,180.50172440076204,178.64648971526708,188.2378304617545,158.1300243239826,162.84699107203448,164.43117090933018,172.3329260570229,186.74801449812585,198.2188484431835,160.34488615947615,152.72103297515642,158.36456411434494,162.7355718791692,156.60816356628536,183.03141844124409,190.32770064121027,162.28245803615695,137.70641525451623,168.69909866749074,145.21823048638612,154.20303442331263,180.75789999374456,189.71015092199934,179.28346604209872,161.90977525685767,155.11736880315956,158.70258294679218,169.8938145675856,175.57921395516766,167.54314929555773,145.9773339106766,128.81631856612248,150.18747845962446,158.88305078275323,168.77949303776998,186.2564675755935,192.184541821913,150.4785393259781,147.30265522142216,146.67083707087346,151.43735863082907,152.40247128018493,169.29564873836722,186.07100445385478,150.6016400585876,131.15906432259965,131.46346207056447,133.82880271418492,141.7582416881826,155.84036458907167,173.17995845823648,144.92212142713876,141.09957617770507,133.07439718213567,133.86053599116067,134.5132278539494,147.23168294834312,156.7112648470366,142.30020734391604,133.8457058995697,132.54617116287173,133.32612302943127,132.15445570566357,148.37804833971077,153.25199111403415,137.9635180614672,119.06501269676005,130.88271080759085,128.50850092917432,128.41000417466435,143.520458431292,153.1261493129408,141.17105596181736,122.45356756982059,122.11415037396989,118.11251971892733,120.32346608529288,143.2319449888486,154.3583989815102,131.3200382268976,116.10548288967126,123.8290994792898,127.14685688922506,130.79049144616886,137.37769797295638,133.04118812491197,129.9933515286028,115.6605218745627,117.06918013141251,126.8357696908565,135.60762055653873,131.8107602601392,132.77319209395904,128.01037011422994,105.22850758381259,114.7164764127696,118.53884229850142,117.72363255102056,129.39256000540104,124.98322257674509,131.5684785533835,106.48614157120551,113.5552643453801,111.93415434697529,119.35066271650149,125.4018853055628,135.10751866201696,118.39445113323876,112.33773709012851,109.69663437435196,113.43616447392431,115.27079530959026,129.87316538536948,127.93334376900953,113.66039003983298,110.7182707408895,118.18078204726882,113.91451073521063,109.91533738601413,128.25923962837794,134.60399950559136,113.76778145036465,108.13201585413532,113.9095002468622,106.4666653382757,114.48675802188659,131.74868835304937,137.67485937987612,125.40177109834292,103.66060613106671,112.13901652931747,105.25974869226118,111.32143787272899,120.08769050306263,138.08274425517033,113.2335279262499,108.54373266138886,105.3274368871324,102.59686295324525,115.21624565298563,125.25957973218226,129.34614161129187,117.30065282688061,94.15962910051877,101.60945583584899,105.43913936724424,115.73993186970614,138.73782963474017,147.33807917965652,133.78182144890167,122.97461591661924,127.82431337463613,116.23343093514757,120.08679766143298,119.75071900966395,145.4495267612367,121.37628185937487,102.70493400576075,101.4471258160435,120.23406098188582,110.78316224986438,123.00692544273457,124.25054280697185,122.64665714412077,101.0997383559806,111.22729856418096,110.5729014401352,113.73346242967429,123.94228496219998,137.20833216250276,116.37742274800453,110.48771391005349,115.53905514249087,105.22828960856823,122.77963338062716,134.01858118460822,132.22979114728602,123.97834632084553,107.52152886202455,121.71655597877155,114.16625355688507,118.68782186551726,134.23539120365925,134.01787913911343,120.0766502445156,120.45398446030124,110.13617025070474,119.82372900129964,114.43955069886609,135.04951846455677,149.57002580741025,122.90783510508764,111.9861161808748,117.15215444630974,122.36150335123051,126.64186445080989,133.16250076218745,155.52315121740807,125.84393169003766,118.71541561392061,124.84949773790174,123.21704106498132,130.05178434404982,144.68557527230575,143.76537177508663,127.89343377329342,125.7623083984888,115.06737368744172,127.1970283960373,134.9591457841229,146.48937164378773,153.90395377122078,142.5436351796227,113.45539119386362,138.12525624469365,124.65292484640986,133.7656320078698,145.16064483067467,150.320412692923,140.73867307205498,118.84114311293159,127.08756172109092,122.7552142606288,131.58287609513977,149.54099498047248,153.85924702696732,149.94458886663915,136.97533406837138,146.2537485935579,154.85884725258126,189.73908131352366,254.9704955925914,294.72586268861505,235.97694835593538,225.57644067071703,193.32807198442487],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"date\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"STL-ARIMA Forecasts with (7,0,7)\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('ea6871e5-8b99-4411-aa32-4917916ee9e0');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<table class=\"simpletable\">\n<caption>STL Decomposition and SARIMAX Results</caption>\n<tr>\n  <th>Dep. Variable:</th>           <td>y</td>        <th>  No. Observations:  </th>   <td>1095</td>   \n</tr>\n<tr>\n  <th>Model:</th>            <td>ARIMA(7, 0, 7)</td>  <th>  Log Likelihood     </th> <td>-3374.872</td>\n</tr>\n<tr>\n  <th>Date:</th>            <td>Tue, 20 Dec 2022</td> <th>  AIC                </th> <td>6781.743</td> \n</tr>\n<tr>\n  <th>Time:</th>                <td>17:21:19</td>     <th>  BIC                </th> <td>6861.719</td> \n</tr>\n<tr>\n  <th>Sample:</th>             <td>01-01-2017</td>    <th>  HQIC               </th> <td>6812.005</td> \n</tr>\n<tr>\n  <th></th>                   <td>- 12-31-2019</td>   <th>                     </th>     <td> </td>    \n</tr>\n<tr>\n  <th>Covariance Type:</th>        <td>opg</td>       <th>                     </th>     <td> </td>    \n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n</tr>\n<tr>\n  <th>x1</th>     <td>    0.0307</td> <td>    0.042</td> <td>    0.725</td> <td> 0.468</td> <td>   -0.052</td> <td>    0.114</td>\n</tr>\n<tr>\n  <th>ar.L1</th>  <td>   -0.5356</td> <td>    0.018</td> <td>  -29.124</td> <td> 0.000</td> <td>   -0.572</td> <td>   -0.500</td>\n</tr>\n<tr>\n  <th>ar.L2</th>  <td>   -0.5941</td> <td>    0.025</td> <td>  -24.214</td> <td> 0.000</td> <td>   -0.642</td> <td>   -0.546</td>\n</tr>\n<tr>\n  <th>ar.L3</th>  <td>   -0.2172</td> <td>    0.022</td> <td>   -9.847</td> <td> 0.000</td> <td>   -0.260</td> <td>   -0.174</td>\n</tr>\n<tr>\n  <th>ar.L4</th>  <td>    0.3197</td> <td>    0.016</td> <td>   19.906</td> <td> 0.000</td> <td>    0.288</td> <td>    0.351</td>\n</tr>\n<tr>\n  <th>ar.L5</th>  <td>    0.6246</td> <td>    0.022</td> <td>   28.755</td> <td> 0.000</td> <td>    0.582</td> <td>    0.667</td>\n</tr>\n<tr>\n  <th>ar.L6</th>  <td>    0.4675</td> <td>    0.024</td> <td>   19.285</td> <td> 0.000</td> <td>    0.420</td> <td>    0.515</td>\n</tr>\n<tr>\n  <th>ar.L7</th>  <td>    0.9349</td> <td>    0.018</td> <td>   52.310</td> <td> 0.000</td> <td>    0.900</td> <td>    0.970</td>\n</tr>\n<tr>\n  <th>ma.L1</th>  <td>    0.8207</td> <td>    0.022</td> <td>   36.479</td> <td> 0.000</td> <td>    0.777</td> <td>    0.865</td>\n</tr>\n<tr>\n  <th>ma.L2</th>  <td>    1.0375</td> <td>    0.034</td> <td>   30.775</td> <td> 0.000</td> <td>    0.971</td> <td>    1.104</td>\n</tr>\n<tr>\n  <th>ma.L3</th>  <td>    0.7876</td> <td>    0.045</td> <td>   17.633</td> <td> 0.000</td> <td>    0.700</td> <td>    0.875</td>\n</tr>\n<tr>\n  <th>ma.L4</th>  <td>    0.3276</td> <td>    0.046</td> <td>    7.110</td> <td> 0.000</td> <td>    0.237</td> <td>    0.418</td>\n</tr>\n<tr>\n  <th>ma.L5</th>  <td>   -0.1245</td> <td>    0.040</td> <td>   -3.140</td> <td> 0.002</td> <td>   -0.202</td> <td>   -0.047</td>\n</tr>\n<tr>\n  <th>ma.L6</th>  <td>   -0.1949</td> <td>    0.029</td> <td>   -6.761</td> <td> 0.000</td> <td>   -0.251</td> <td>   -0.138</td>\n</tr>\n<tr>\n  <th>ma.L7</th>  <td>   -0.6672</td> <td>    0.021</td> <td>  -32.522</td> <td> 0.000</td> <td>   -0.707</td> <td>   -0.627</td>\n</tr>\n<tr>\n  <th>sigma2</th> <td>   27.4791</td> <td>    0.830</td> <td>   33.092</td> <td> 0.000</td> <td>   25.852</td> <td>   29.107</td>\n</tr>\n</table>\n<table class=\"simpletable\">\n<tr>\n  <th>Ljung-Box (L1) (Q):</th>     <td>0.21</td> <th>  Jarque-Bera (JB):  </th> <td>359.53</td>\n</tr>\n<tr>\n  <th>Prob(Q):</th>                <td>0.65</td> <th>  Prob(JB):          </th>  <td>0.00</td> \n</tr>\n<tr>\n  <th>Heteroskedasticity (H):</th> <td>1.08</td> <th>  Skew:              </th>  <td>0.07</td> \n</tr>\n<tr>\n  <th>Prob(H) (two-sided):</th>    <td>0.47</td> <th>  Kurtosis:          </th>  <td>5.80</td> \n</tr>\n</table>\n<table class=\"simpletable\">\n<caption>STL Configuration</caption>\n<tr>\n  <th>Period:                </th> <td>          365</td> <th>      Trend Length:          </th> <td>         1095</td>\n</tr>\n<tr>\n  <th>Seasonal:              </th> <td>            7</td> <th>      Trend deg:             </th> <td>            1</td>\n</tr>\n<tr>\n  <th>Seasonal deg:          </th> <td>            1</td> <th>      Trend jump:            </th> <td>            1</td>\n</tr>\n<tr>\n  <th>Seasonal jump:         </th> <td>            1</td> <th>      Low pass:              </th> <td>          367</td>\n</tr>\n<tr>\n  <th>Robust:                </th> <td>        False</td> <th>      Low pass deg:          </th> <td>            1</td>\n</tr>\n</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n```\n:::\n:::\n\n\nFinally calculate the mean absolute percentage error (MAPE) and R2 Score as a benchmark.\n\n::: {.cell execution_count=16}\n``` {.python .cell-code code-fold=\"true\"}\nfrom sklearn.metrics import mean_absolute_percentage_error, r2_score\n\nprint(f\"MAPE for STL-ARIMA model is: {mean_absolute_percentage_error(test_subset_pretuning, forecast)}\")\nprint(f\"R2 Score for STL-ARIMA model is: {r2_score(test_subset_pretuning, forecast)}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE for STL-ARIMA model is: 0.18646794982275017\nR2 Score for STL-ARIMA model is: -0.6091132358371121\n```\n:::\n:::\n\n\n## Forecasting with Exogenous Regressors\n\nNow we will move to the forecasting which uses exogenous variables as features. To achieve that, firstly, we will convert the datetime of the series to tabular features and then add holidays. We will also use some libraries dedicated to feature extraction from time series.\n\n### ARIMAX\n\nFor ARIMAX model, we will create a `feature_matrix` which has the date related features and lagged values as predictors.\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nimport featuretools as ft\nfrom sklearn.preprocessing import LabelEncoder, OneHotEncoder\nimport holidays\nfrom statsmodels.tsa.deterministic import Fourier\n\n# First we will create an EntitySet\nentity_set = ft.EntitySet()\ndata = data.sort_values(by=[\"country\", \"store\", \"product\", \"date\"])\n\n# Specify index and time_index columns\nentity_set.add_dataframe(\n    dataframe_name=\"Datetime Features\",\n    dataframe=data,\n    index=\"row_id\",\n    time_index=\"date\",\n)\n\nfeature_matrix, feature_defs = ft.dfs(\n    entityset=entity_set,\n    target_dataframe_name=\"Datetime Features\",\n    trans_primitives=[\"DAY\", \"MONTH\", \"WEEKDAY\", \"YEAR\"],\n)\n\n# Label encode the year column\nyear_encoder = LabelEncoder()\nfeature_matrix[\"YEAR(date)\"] = year_encoder.fit_transform(feature_matrix[\"YEAR(date)\"])\n\n# Get the holidays for each country\nholidays_country = [holidays.country_holidays(i) for i in data[\"country\"].unique()]\n\n# Add the original date column for comparison\nfeature_matrix[\"date\"] = to_datetime(data[\"date\"])\n\n\n\"\"\"\nCheck dates for local holidays. \nIf there is a holiday on the date add their local name to holiday_name, else add \"No Holiday\".\n\"\"\"\nholiday_name = list()\nfor i in range(len(feature_matrix)):\n    if feature_matrix[\"country\"][i] == \"Belgium\":\n        if feature_matrix[\"date\"][i] in holidays_country[0]:\n            holiday_name.append(holidays_country[0].get(feature_matrix[\"date\"][i]))\n        else:\n            holiday_name.append(\"No Holiday\")\n    elif feature_matrix[\"country\"][i] == \"France\":\n        if feature_matrix[\"date\"][i] in holidays_country[1]:\n            holiday_name.append(holidays_country[1].get(feature_matrix[\"date\"][i]))\n        else:\n            holiday_name.append(\"No Holiday\")\n    elif feature_matrix[\"country\"][i] == \"Germany\":\n        if feature_matrix[\"date\"][i] in holidays_country[2]:\n            holiday_name.append(holidays_country[2].get(feature_matrix[\"date\"][i]))\n        else:\n            holiday_name.append(\"No Holiday\")\n    elif feature_matrix[\"country\"][i] == \"Italy\":\n        if feature_matrix[\"date\"][i] in holidays_country[3]:\n            holiday_name.append(holidays_country[3].get(feature_matrix[\"date\"][i]))\n        else:\n            holiday_name.append(\"No Holiday\")\n    elif feature_matrix[\"country\"][i] == \"Poland\":\n        if feature_matrix[\"date\"][i] in holidays_country[4]:\n            holiday_name.append(holidays_country[4].get(feature_matrix[\"date\"][i]))\n        else:\n            holiday_name.append(\"No Holiday\")\n    elif feature_matrix[\"country\"][i] == \"Spain\":\n        if feature_matrix[\"date\"][i] in holidays_country[5]:\n            holiday_name.append(holidays_country[5].get(feature_matrix[\"date\"][i]))\n        else:\n            holiday_name.append(\"No Holiday\")\n\nfeature_matrix[\"HolidayName\"] = holiday_name\n\n# Sort the dataframe so that date is sequential\nfeature_matrix = feature_matrix.sort_values(\n    by=[\"country\", \"store\", \"product\", \"date\"], ignore_index=True\n)\n\n\"\"\"\nCheck for the closeness of days to holidays. If a day is in the spectrum of 3 days before -\n3 days after of a holiday, label it as Close.\n\"\"\"\nholiday_closeness = list()\nfor i in range(len(feature_matrix)):\n    if feature_matrix[\"HolidayName\"][i] != \"No Holiday\":\n        holiday_closeness.append(\"Holiday\")\n    else:\n        if len(list(\"No Holiday\" == feature_matrix[\"HolidayName\"][i - 3 : i + 4])) == 0:\n            holiday_closeness.append(\"Close\")\n        elif False in list(\n            \"No Holiday\" == feature_matrix[\"HolidayName\"][i - 3 : i + 4]\n        ):\n            holiday_closeness.append(\"Close\")\n        else:\n            holiday_closeness.append(\"Distant\")\nfeature_matrix[\"HolidayCloseness\"] = holiday_closeness\n\n# One-hot encode holiday closeness\nfeature_matrix = pandas.get_dummies(\n    feature_matrix,\n    columns=[\n        \"country\",\n        \"store\",\n        \"product\",\n        \"DAY(date)\",\n        \"MONTH(date)\",\n        \"WEEKDAY(date)\",\n        \"YEAR(date)\",\n        \"HolidayCloseness\",\n    ],\n    drop_first=True,\n)\n\n# Deterministic Fourier Terms\n## Yearly\nyearly_fourier_terms = Fourier(365, 3)\nindex = np.arange(0, 1461)\nyearly_fourier_terms = yearly_fourier_terms.in_sample(index)\ncloning_func = lambda x: np.tile(x, 48)\nyearly_fourier_terms = yearly_fourier_terms.apply(func=cloning_func, axis=0)\nfeature_matrix = feature_matrix.join(yearly_fourier_terms, how=\"left\")\n\n# Edit columns\nfeature_matrix = pandas.DataFrame.join(\n    feature_matrix.drop(columns=[\"num_sold\", \"HolidayName\"]),\n    feature_matrix[\"num_sold\"],\n    how=\"left\",\n)\n\nfeature_matrix\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>country_France</th>\n      <th>country_Germany</th>\n      <th>country_Italy</th>\n      <th>country_Poland</th>\n      <th>country_Spain</th>\n      <th>store_KaggleRama</th>\n      <th>product_Kaggle Getting Started</th>\n      <th>product_Kaggle Recipe Book</th>\n      <th>product_Kaggle for Kids: One Smart Goose</th>\n      <th>...</th>\n      <th>YEAR(date)_3</th>\n      <th>HolidayCloseness_Distant</th>\n      <th>HolidayCloseness_Holiday</th>\n      <th>sin(1,365)</th>\n      <th>cos(1,365)</th>\n      <th>sin(2,365)</th>\n      <th>cos(2,365)</th>\n      <th>sin(3,365)</th>\n      <th>cos(3,365)</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2017-01-01</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.000000e+00</td>\n      <td>1.000000</td>\n      <td>0.000000e+00</td>\n      <td>1.000000</td>\n      <td>0.000000e+00</td>\n      <td>1.000000</td>\n      <td>663</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2017-01-02</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1.721336e-02</td>\n      <td>0.999852</td>\n      <td>3.442161e-02</td>\n      <td>0.999407</td>\n      <td>5.161967e-02</td>\n      <td>0.998667</td>\n      <td>514</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2017-01-03</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3.442161e-02</td>\n      <td>0.999407</td>\n      <td>6.880243e-02</td>\n      <td>0.997630</td>\n      <td>1.031017e-01</td>\n      <td>0.994671</td>\n      <td>549</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2017-01-04</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5.161967e-02</td>\n      <td>0.998667</td>\n      <td>1.031017e-01</td>\n      <td>0.994671</td>\n      <td>1.543088e-01</td>\n      <td>0.988023</td>\n      <td>477</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2017-01-05</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>6.880243e-02</td>\n      <td>0.997630</td>\n      <td>1.372788e-01</td>\n      <td>0.990532</td>\n      <td>2.051045e-01</td>\n      <td>0.978740</td>\n      <td>447</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>70123</th>\n      <td>2020-12-27</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>-6.880243e-02</td>\n      <td>0.997630</td>\n      <td>-1.372788e-01</td>\n      <td>0.990532</td>\n      <td>-2.051045e-01</td>\n      <td>0.978740</td>\n      <td>204</td>\n    </tr>\n    <tr>\n      <th>70124</th>\n      <td>2020-12-28</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>-5.161967e-02</td>\n      <td>0.998667</td>\n      <td>-1.031017e-01</td>\n      <td>0.994671</td>\n      <td>-1.543088e-01</td>\n      <td>0.988023</td>\n      <td>212</td>\n    </tr>\n    <tr>\n      <th>70125</th>\n      <td>2020-12-29</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-3.442161e-02</td>\n      <td>0.999407</td>\n      <td>-6.880243e-02</td>\n      <td>0.997630</td>\n      <td>-1.031017e-01</td>\n      <td>0.994671</td>\n      <td>242</td>\n    </tr>\n    <tr>\n      <th>70126</th>\n      <td>2020-12-30</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-1.721336e-02</td>\n      <td>0.999852</td>\n      <td>-3.442161e-02</td>\n      <td>0.999407</td>\n      <td>-5.161967e-02</td>\n      <td>0.998667</td>\n      <td>239</td>\n    </tr>\n    <tr>\n      <th>70127</th>\n      <td>2020-12-31</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>-9.797174e-16</td>\n      <td>1.000000</td>\n      <td>-1.959435e-15</td>\n      <td>1.000000</td>\n      <td>-2.939152e-15</td>\n      <td>1.000000</td>\n      <td>202</td>\n    </tr>\n  </tbody>\n</table>\n<p>70128 rows × 69 columns</p>\n</div>\n```\n:::\n:::\n\n\nThe feature matrix is almost ready for use in ARIMAX model. To summarize what we have done so far regarding the features, we have transformed the time points to categorical variables - day of the month, weekday, and year and added holidays. To better account for the effect of holidays, we have created three dummy holidays variables: Close, Distant and Holiday. Then to capture yearly seasonality we have added Fourier terms with period of 365. After creating the subset we can discard the country, product and store variables since we are training the models for each combination and they add nothing of value for forecasting in this case.\n\nLet's create the ARIMAX model and forecast with the same subset.\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nfrom statsmodels.tsa.arima.model import ARIMA\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\n\n# Create the same subset but this time with features.\nsubset_reg = feature_matrix[\n    (feature_matrix[\"country_Germany\"] == 1)\n    & (feature_matrix[\"store_KaggleRama\"] == 1)\n    & (feature_matrix[\"product_Kaggle Recipe Book\"] == 1)\n]\nsubset_reg = subset_reg.drop(\n    columns=[\n        \"date\",\n        \"country_France\",\n        \"country_Germany\",\n        \"country_Poland\",\n        \"country_Italy\",\n        \"country_Spain\",\n        \"store_KaggleRama\",\n        \"product_Kaggle Getting Started\",\n        \"product_Kaggle Recipe Book\",\n        \"product_Kaggle for Kids: One Smart Goose\",\n    ]\n)\n\n# Train - Test Split\ntrain_reg, test_reg = temporal_train_test_split(subset_reg, test_size=366)\n\n# Define endogenous and exogenous variables\nendog = train_reg[\"num_sold\"]\nexog = train_reg.drop(columns=\"num_sold\")\n\n# Use the same orders as previous ARIMA model\narimax_model = ARIMA(\n    order=(3, 1, 3), endog=endog, trend=[0, 1], exog=exog, enforce_stationarity=True\n)\n\narimax_results = arimax_model.fit()\n\n# Forecast for the last year\nforecast_reg = arimax_results.forecast(366, exog=test_reg.drop(columns=\"num_sold\"))\n\ntest_reg = test_reg.set_index(forecast_reg.index)\n\n# Plot both test data and forecast from the model to compare them visually.\nplot_forecasts(test_reg[\"num_sold\"], forecast_reg, title=\"ARIMAX Forecasts\");\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"9f198cc3-e2b0-4393-9cc1-6e8c37aef98b\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9f198cc3-e2b0-4393-9cc1-6e8c37aef98b\")) {                    Plotly.newPlot(                        \"9f198cc3-e2b0-4393-9cc1-6e8c37aef98b\",                        [{\"hovertemplate\":\"=Observed<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460],\"xaxis\":\"x\",\"y\":[142.0,98.0,109.0,102.0,116.0,99.0,83.0,90.0,84.0,91.0,93.0,113.0,78.0,89.0,87.0,88.0,89.0,101.0,101.0,82.0,92.0,88.0,91.0,90.0,102.0,99.0,89.0,88.0,90.0,85.0,89.0,103.0,104.0,87.0,84.0,83.0,86.0,91.0,102.0,97.0,91.0,85.0,87.0,88.0,85.0,92.0,91.0,84.0,83.0,83.0,81.0,82.0,89.0,105.0,83.0,83.0,81.0,76.0,80.0,99.0,86.0,78.0,77.0,70.0,72.0,70.0,86.0,86.0,67.0,75.0,73.0,71.0,73.0,78.0,93.0,69.0,67.0,66.0,74.0,76.0,80.0,92.0,72.0,71.0,69.0,69.0,66.0,76.0,73.0,65.0,72.0,61.0,55.0,56.0,60.0,69.0,55.0,54.0,59.0,58.0,60.0,69.0,71.0,56.0,64.0,64.0,59.0,66.0,74.0,76.0,52.0,55.0,48.0,54.0,55.0,57.0,66.0,57.0,55.0,53.0,55.0,59.0,69.0,75.0,65.0,63.0,67.0,68.0,63.0,67.0,69.0,64.0,56.0,52.0,56.0,62.0,69.0,68.0,57.0,58.0,60.0,58.0,61.0,74.0,75.0,65.0,63.0,61.0,62.0,68.0,65.0,68.0,65.0,63.0,60.0,62.0,70.0,75.0,79.0,63.0,63.0,60.0,69.0,64.0,70.0,70.0,61.0,56.0,60.0,58.0,62.0,75.0,74.0,57.0,65.0,58.0,59.0,59.0,73.0,73.0,60.0,66.0,68.0,65.0,65.0,70.0,77.0,62.0,66.0,67.0,70.0,67.0,69.0,68.0,64.0,65.0,61.0,61.0,68.0,69.0,76.0,56.0,63.0,64.0,59.0,66.0,75.0,76.0,61.0,64.0,65.0,60.0,69.0,76.0,79.0,67.0,66.0,70.0,64.0,64.0,81.0,78.0,70.0,64.0,69.0,70.0,61.0,78.0,78.0,71.0,67.0,77.0,72.0,72.0,71.0,78.0,69.0,73.0,69.0,69.0,67.0,80.0,86.0,66.0,70.0,70.0,72.0,75.0,86.0,83.0,71.0,63.0,72.0,71.0,67.0,81.0,82.0,73.0,65.0,77.0,61.0,81.0,89.0,79.0,69.0,76.0,68.0,76.0,77.0,82.0,91.0,68.0,71.0,71.0,82.0,72.0,90.0,103.0,77.0,80.0,86.0,90.0,86.0,94.0,98.0,78.0,77.0,77.0,84.0,89.0,95.0,102.0,80.0,84.0,84.0,80.0,71.0,81.0,99.0,79.0,76.0,79.0,81.0,86.0,100.0,96.0,76.0,74.0,86.0,82.0,76.0,91.0,100.0,80.0,87.0,80.0,81.0,87.0,97.0,104.0,79.0,76.0,87.0,76.0,86.0,98.0,95.0,76.0,88.0,82.0,83.0,91.0,87.0,90.0,84.0,83.0,83.0,82.0,87.0,85.0,107.0,85.0,80.0,88.0,78.0,86.0,99.0,98.0,86.0,82.0,84.0,89.0,85.0,102.0,90.0,79.0,83.0,87.0,84.0,94.0,122.0,131.0,126.0,157.0,169.0,143.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1334,1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1370,1371,1372,1373,1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1408,1409,1410,1411,1412,1413,1414,1415,1416,1417,1418,1419,1420,1421,1422,1423,1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1438,1439,1440,1441,1442,1443,1444,1445,1446,1447,1448,1449,1450,1451,1452,1453,1454,1455,1456,1457,1458,1459,1460],\"xaxis\":\"x\",\"y\":[158.652329057326,151.8187186626335,154.27568675571143,159.47901243563354,162.9362607120949,143.23108172415448,141.79406652567474,138.0144601100334,136.40276511734274,138.13523789021903,145.5225062067455,149.39106046328666,134.35557295769877,130.7114766838157,129.9031259641394,129.9881002437904,133.90066854998685,141.38369204701485,146.99931247749484,129.39037203993857,127.07491875816376,127.15648867450659,126.53630874922914,131.9242394450186,139.15699800901172,146.3833041294262,130.32682274031515,130.88946163715065,134.39884543649634,133.7548629470119,135.04152539367738,144.2791272211499,147.89490599195614,130.81944116245836,130.27870158749732,128.13995614536498,128.12946217795877,133.2078970891415,138.3112389195732,143.3589527315586,124.0523024137155,122.9896623698393,121.35602958463687,124.26610694896485,126.0213386034523,132.92418430880326,138.85015192974575,120.93709493330454,119.39786517018462,118.99447486619714,118.95167155982298,121.7121452393425,129.27339443691716,134.31141183714018,117.75426311792839,115.88492490852563,117.05695809744465,118.56233259150903,124.22835704823721,135.26844336907203,143.60089284724882,123.54174378571808,122.88959963384627,123.54353200852215,121.39890576458069,125.40454175593246,134.15531568831636,137.50271410402468,119.02826093219616,116.29881274443719,116.5849597410356,115.0989208531087,122.17720665812928,127.75473383353068,133.04882481473396,115.59643537623435,114.40045879385255,114.34544460199506,114.2201541398936,118.47070284097259,125.17285105200233,131.23858889078798,113.00501880315406,113.2649375283102,112.9727406794351,114.5084876441282,120.38529383056083,130.06334295735485,139.67037023635353,121.54106840814993,117.83709145685134,116.317084616071,114.39161672853339,119.40137815596299,128.12816460535302,132.23794790464473,114.89002883551619,113.60710866972833,111.46885433127298,111.1071513999806,113.17054922728099,122.3313510797611,127.05368308676367,111.8847147136843,109.7206830616719,109.45958181589766,110.04302803173357,115.90992734437827,123.7990930294311,129.78478801612653,112.52410463679871,110.5356021561752,110.93114803404006,110.61325194253504,116.29666333782548,123.81930774940945,131.33271034230074,115.56137564683993,114.8942698442633,118.6883103318933,118.3295953216412,123.05138734664999,129.60832705783676,136.42340240428194,119.69584884295861,118.13426594359794,118.40769904255619,119.76822491045877,121.51696514004122,128.65704501737775,133.22669870431918,115.95760994102218,113.36135810895976,116.52413081577703,114.52419674996096,118.02911216526388,125.99804126955094,131.90586857487253,112.58441784202276,111.15130798267576,111.2885165585909,109.37615972721402,114.29593778099363,121.28892204130707,128.4601300548059,111.74071087212786,111.78242503251838,113.36370981321198,115.0892954341424,121.02389176781737,127.95443507745446,131.001270018393,114.86460054279831,112.13820970334245,112.71363724612763,113.35728965976315,116.70141125948385,124.30019296911007,131.17871228100552,110.85092998082584,108.76455288681257,107.15939060281657,107.33414308139777,109.72385793992561,120.29967065881542,123.91263227109181,105.44289978211337,104.29396107906904,104.14199955663966,103.89999846324113,107.57985771781998,115.262612586312,119.94043688887086,102.18841782145333,100.21043509416631,101.47280266555904,100.95855827122,106.27108900877667,115.55859944106967,123.19783580113719,108.97975872386846,107.10594550672565,107.94420991620913,105.78761980352763,110.57319831349261,119.08383202504291,122.9865721584212,105.44178424446392,105.48765432411466,103.17599989539556,102.65414661596972,105.41123800314371,113.60166711483663,118.2093294547561,103.78227267040745,100.69871824900126,100.37631604056625,100.91782190751223,105.2484162534202,113.136453405677,119.14237489976526,101.92383849143384,99.99991616148102,100.48293378506364,100.2758037055664,106.09362101671674,113.77459871976035,121.4704903140355,105.90596871837084,106.98454569926018,111.03430981784669,110.95578243473886,112.83293569356164,119.32751931345878,123.5832855565613,107.17177131355433,107.31812398477024,105.88869322760883,106.60863370716898,112.43742863490642,118.30973426387665,124.1436171938632,105.63885359154318,105.39227077904857,104.58725758917912,108.33686662744873,110.94085273311875,118.69996042137542,125.48796145274392,108.44096214763596,107.77006189244085,108.23552304208111,109.06035161903034,112.68551116296503,121.1067943582677,126.99851452883476,111.28708967166864,110.25388567062541,112.25089440862722,114.56856325247026,121.03272917862932,132.85538751047207,138.7089056584537,118.88902765516616,115.05721072085639,113.44569282291968,114.74834166678973,120.11308233897353,126.29062154900942,132.77840689734307,116.74813575580072,113.57850541024436,113.38870348514781,112.4451553384075,117.2678779786073,123.92501886774784,133.30231360846346,113.91210868507102,112.49955352449388,113.13989019236513,113.53620792805005,117.82311306643527,125.64592651862576,132.0006190727449,113.54100874842325,112.70753631818721,112.37620825637669,114.04062737474322,117.90584688922459,127.20907560495658,135.01386155623766,119.35900925048745,121.90125197367189,120.00027893524631,120.27157947621536,122.33405530737951,130.11044568106013,137.8182634476338,118.26818689539664,117.3263945789603,120.21847744337757,117.99550390651149,121.542085519916,127.98201284410553,134.38583818688744,115.4003193059282,117.44006646847072,115.55662464052705,115.19611362380596,119.68446699467057,127.58182703167513,133.57300648993902,115.88159184411585,115.03206886717527,114.2170803791715,114.57765082893059,118.240079505677,127.5546126198616,133.2760903053156,117.21955867654057,117.97664488093389,120.12453589257476,124.02010105169971,127.78730844680058,133.14531849658653,139.66267017681315,120.16610446067216,120.08422889161128,121.31581195935078,119.75590727502704,124.35301686680879,133.70169054563297,137.65308239498538,119.78837781324074,117.67408925549535,118.58045769801505,117.71934821442396,125.42691336017373,131.6377080919336,137.5686898878001,120.75644678786418,120.20350201291924,120.79403317545064,121.31642827653758,126.21642844275499,133.56941918932944,140.28701571802313,122.70594591003845,123.61863272261476,123.9790991956454,126.16703377246463,132.6951829600994,143.02336402647404,153.2789485831772,135.79626901310638,139.49943894415674,138.1919475049038,139.81735892498753,145.5231062656986,152.05934086661492,158.9228927927129,143.2847810630052,140.52296530702102,140.75583786514903,140.24897301701645,145.5214828855573,152.64055837480004,162.49092913503017,143.58388871891285,142.6634891884985,143.80383348193988,144.70683273685066,149.50587911102627,157.8450462652445,164.71902776163512,146.78033760324246,144.9536512341894,145.14250296626187,147.32469329843633,150.86427890219426,160.67631821608205,169.82296524230634,154.66239034812136,157.68954952024353,157.77717817818547,155.78686436594762],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"index\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"ARIMAX Forecasts\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('9f198cc3-e2b0-4393-9cc1-6e8c37aef98b');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nFrom the plot we can see that this model performs worse than STL-ARIMA model. Let's check ARIMAX model's MAPE score to quantify performance difference.\n\n::: {.cell execution_count=19}\n``` {.python .cell-code code-fold=\"true\"}\nprint(f\"MAPE for ARIMAX model is: {mean_absolute_percentage_error(test_reg['num_sold'], forecast_reg)}\")\nprint(f\"R2 Score for ARIMAX model is: {r2_score(test_reg['num_sold'], forecast_reg)}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE for ARIMAX model is: 0.6281181684643169\nR2 Score for ARIMAX model is: -7.921475722370131\n```\n:::\n:::\n\n\n### XGBoost\n\nLet's try the regression now with using XGBoost. We will again use the same feature matrix as exogenous variables but we'll also use previous values of `num_sold` as input variables.\n\n::: {.cell cache='true' execution_count=20}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import MinMaxScaler\n\n# Create a function so that we can try with different window sizes\ndef prev_values_tabularizer(feature_matrix, endog, window_size, scaler=False):\n    # Create a list to store previous values\n    prev_values = list()\n    for i in range(len(feature_matrix)):\n        prev_values.append(feature_matrix[endog][i : i + window_size])\n\n    # Reshape from columns to rows\n    prev_values = [\n        pandas.Series(prev_values[i]).values.reshape([1, -1])\n        for i in range(len(prev_values))\n    ]\n\n    # Create placeholder DataFrame with zeros and change them with previous values\n    zeros_matrix = np.zeros(shape=[len(feature_matrix), window_size])\n    placeholder_df = pandas.DataFrame(zeros_matrix)\n    for i in range(len(placeholder_df)):\n        for j in range(window_size):\n            try:\n                placeholder_df[j][i] = prev_values[i][0][j]\n            except IndexError:\n                continue\n\n    # Add previous values to feature matrix, shift it by window size, remove first window size values from the feature matrix\n    feature_matrix = pandas.concat([feature_matrix, placeholder_df], axis=1)\n    feature_matrix[list(range(window_size))] = feature_matrix[\n        list(range(window_size))\n    ].shift(window_size)\n    feature_matrix = feature_matrix.drop(list(range(window_size)), axis=0)\n\n    # If scaler is passed, apply scaling to previous values of endogenous variable\n    if scaler != False:\n        feature_matrix[list(range(window_size))] = scaler.fit_transform(\n            feature_matrix[list(range(window_size))]\n        )\n\n    # Reorder the columns so that endogenous variables are at the far most right\n    reordered_columns = (\n        feature_matrix.columns.to_list()[: (-window_size - 1)]\n        + feature_matrix.columns.to_list()[(-window_size):]\n        + [feature_matrix.columns.to_list()[(-window_size - 1)]]\n    )\n    feature_matrix = feature_matrix[reordered_columns]\n\n    return feature_matrix\n\n\nscaler = MinMaxScaler()\n\n# We use 7 as window_size because of the previous partial autocorrelation graphs\nregression_matrix = prev_values_tabularizer(feature_matrix, \"num_sold\", 7)\n```\n:::\n\n\nWe have transformed the feature matrix suitable for forecasting with regression. Now we have to split it again to train and test subsets and create regression model with XGBoost.\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nfrom xgboost import XGBRegressor\n\n# Create the same subset as previous examples and split\nsubset_xgboost = regression_matrix[\n    (regression_matrix[\"country_Germany\"] == 1)\n    & (regression_matrix[\"store_KaggleRama\"] == 1)\n    & (regression_matrix[\"product_Kaggle Recipe Book\"] == 1)\n]\nsubset_xgboost = subset_xgboost.drop(\n    columns=[\n        \"date\",\n        \"country_France\",\n        \"country_Germany\",\n        \"country_Poland\",\n        \"country_Italy\",\n        \"country_Spain\",\n        \"store_KaggleRama\",\n        \"product_Kaggle Getting Started\",\n        \"product_Kaggle Recipe Book\",\n        \"product_Kaggle for Kids: One Smart Goose\",\n    ]\n)\n\ntrain_subset_xgboost, test_subset_xgboost = temporal_train_test_split(\n    subset_xgboost, test_size=366\n)\n\n# Define train/test features and targets\ntrain_targets_xgboost = train_subset_xgboost[\"num_sold\"]\ntrain_features_xgboost = train_subset_xgboost.drop(columns=\"num_sold\")\ntest_targets_xgboost = test_subset_xgboost[\"num_sold\"]\ntest_features_xgboost = test_subset_xgboost.drop(columns=\"num_sold\")\n\n# Define model\nxgboost_model = XGBRegressor()\nxgboost_model.fit(train_features_xgboost, train_targets_xgboost)\n\n# Forecast for the last year\nforecast_xgboost = pandas.DataFrame(xgboost_model.predict(test_features_xgboost))\nforecast_xgboost.set_index(test_features_xgboost.index, inplace=True)\n\n# Plot both test data and forecast from the model to compare them visually.\nplot_forecasts(test_targets_xgboost, forecast_xgboost, title=\"XGBoost Forecasts\");\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"aaed44ed-6362-4378-9590-ee2dc5d86b2c\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"aaed44ed-6362-4378-9590-ee2dc5d86b2c\")) {                    Plotly.newPlot(                        \"aaed44ed-6362-4378-9590-ee2dc5d86b2c\",                        [{\"hovertemplate\":\"=Observed<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33251,33252,33253,33254,33255,33256,33257,33258,33259,33260,33261,33262,33263,33264,33265,33266,33267,33268,33269,33270,33271,33272,33273,33274,33275,33276,33277,33278,33279,33280,33281,33282,33283,33284,33285,33286,33287,33288,33289,33290,33291,33292,33293,33294,33295,33296,33297,33298,33299,33300,33301,33302,33303,33304,33305,33306,33307,33308,33309,33310,33311,33312,33313,33314,33315,33316,33317,33318,33319,33320,33321,33322,33323,33324,33325,33326,33327,33328,33329,33330,33331,33332,33333,33334,33335,33336,33337,33338,33339,33340,33341,33342,33343,33344,33345,33346,33347,33348,33349,33350,33351,33352,33353,33354,33355,33356,33357,33358,33359,33360,33361,33362,33363,33364,33365,33366,33367,33368,33369,33370,33371,33372,33373,33374,33375,33376,33377,33378,33379,33380,33381,33382,33383,33384,33385,33386,33387,33388,33389,33390,33391,33392,33393,33394,33395,33396,33397,33398,33399,33400,33401,33402,33403,33404,33405,33406,33407,33408,33409,33410,33411,33412,33413,33414,33415,33416,33417,33418,33419,33420,33421,33422,33423,33424,33425,33426,33427,33428,33429,33430,33431,33432,33433,33434,33435,33436,33437,33438,33439,33440,33441,33442,33443,33444,33445,33446,33447,33448,33449,33450,33451,33452,33453,33454,33455,33456,33457,33458,33459,33460,33461,33462,33463,33464,33465,33466,33467,33468,33469,33470,33471,33472,33473,33474,33475,33476,33477,33478,33479,33480,33481,33482,33483,33484,33485,33486,33487,33488,33489,33490,33491,33492,33493,33494,33495,33496,33497,33498,33499,33500,33501,33502,33503,33504,33505,33506,33507,33508,33509,33510,33511,33512,33513,33514,33515,33516,33517,33518,33519,33520,33521,33522,33523,33524,33525,33526,33527,33528,33529,33530,33531,33532,33533,33534,33535,33536,33537,33538,33539,33540,33541,33542,33543,33544,33545,33546,33547,33548,33549,33550,33551,33552,33553,33554,33555,33556,33557,33558,33559,33560,33561,33562,33563,33564,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33575,33576,33577,33578,33579,33580,33581,33582,33583,33584,33585,33586,33587,33588,33589,33590,33591,33592,33593,33594,33595,33596,33597,33598,33599,33600,33601,33602],\"xaxis\":\"x\",\"y\":[142.0,98.0,109.0,102.0,116.0,99.0,83.0,90.0,84.0,91.0,93.0,113.0,78.0,89.0,87.0,88.0,89.0,101.0,101.0,82.0,92.0,88.0,91.0,90.0,102.0,99.0,89.0,88.0,90.0,85.0,89.0,103.0,104.0,87.0,84.0,83.0,86.0,91.0,102.0,97.0,91.0,85.0,87.0,88.0,85.0,92.0,91.0,84.0,83.0,83.0,81.0,82.0,89.0,105.0,83.0,83.0,81.0,76.0,80.0,99.0,86.0,78.0,77.0,70.0,72.0,70.0,86.0,86.0,67.0,75.0,73.0,71.0,73.0,78.0,93.0,69.0,67.0,66.0,74.0,76.0,80.0,92.0,72.0,71.0,69.0,69.0,66.0,76.0,73.0,65.0,72.0,61.0,55.0,56.0,60.0,69.0,55.0,54.0,59.0,58.0,60.0,69.0,71.0,56.0,64.0,64.0,59.0,66.0,74.0,76.0,52.0,55.0,48.0,54.0,55.0,57.0,66.0,57.0,55.0,53.0,55.0,59.0,69.0,75.0,65.0,63.0,67.0,68.0,63.0,67.0,69.0,64.0,56.0,52.0,56.0,62.0,69.0,68.0,57.0,58.0,60.0,58.0,61.0,74.0,75.0,65.0,63.0,61.0,62.0,68.0,65.0,68.0,65.0,63.0,60.0,62.0,70.0,75.0,79.0,63.0,63.0,60.0,69.0,64.0,70.0,70.0,61.0,56.0,60.0,58.0,62.0,75.0,74.0,57.0,65.0,58.0,59.0,59.0,73.0,73.0,60.0,66.0,68.0,65.0,65.0,70.0,77.0,62.0,66.0,67.0,70.0,67.0,69.0,68.0,64.0,65.0,61.0,61.0,68.0,69.0,76.0,56.0,63.0,64.0,59.0,66.0,75.0,76.0,61.0,64.0,65.0,60.0,69.0,76.0,79.0,67.0,66.0,70.0,64.0,64.0,81.0,78.0,70.0,64.0,69.0,70.0,61.0,78.0,78.0,71.0,67.0,77.0,72.0,72.0,71.0,78.0,69.0,73.0,69.0,69.0,67.0,80.0,86.0,66.0,70.0,70.0,72.0,75.0,86.0,83.0,71.0,63.0,72.0,71.0,67.0,81.0,82.0,73.0,65.0,77.0,61.0,81.0,89.0,79.0,69.0,76.0,68.0,76.0,77.0,82.0,91.0,68.0,71.0,71.0,82.0,72.0,90.0,103.0,77.0,80.0,86.0,90.0,86.0,94.0,98.0,78.0,77.0,77.0,84.0,89.0,95.0,102.0,80.0,84.0,84.0,80.0,71.0,81.0,99.0,79.0,76.0,79.0,81.0,86.0,100.0,96.0,76.0,74.0,86.0,82.0,76.0,91.0,100.0,80.0,87.0,80.0,81.0,87.0,97.0,104.0,79.0,76.0,87.0,76.0,86.0,98.0,95.0,76.0,88.0,82.0,83.0,91.0,87.0,90.0,84.0,83.0,83.0,82.0,87.0,85.0,107.0,85.0,80.0,88.0,78.0,86.0,99.0,98.0,86.0,82.0,84.0,89.0,85.0,102.0,90.0,79.0,83.0,87.0,84.0,94.0,122.0,131.0,126.0,157.0,169.0,143.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33251,33252,33253,33254,33255,33256,33257,33258,33259,33260,33261,33262,33263,33264,33265,33266,33267,33268,33269,33270,33271,33272,33273,33274,33275,33276,33277,33278,33279,33280,33281,33282,33283,33284,33285,33286,33287,33288,33289,33290,33291,33292,33293,33294,33295,33296,33297,33298,33299,33300,33301,33302,33303,33304,33305,33306,33307,33308,33309,33310,33311,33312,33313,33314,33315,33316,33317,33318,33319,33320,33321,33322,33323,33324,33325,33326,33327,33328,33329,33330,33331,33332,33333,33334,33335,33336,33337,33338,33339,33340,33341,33342,33343,33344,33345,33346,33347,33348,33349,33350,33351,33352,33353,33354,33355,33356,33357,33358,33359,33360,33361,33362,33363,33364,33365,33366,33367,33368,33369,33370,33371,33372,33373,33374,33375,33376,33377,33378,33379,33380,33381,33382,33383,33384,33385,33386,33387,33388,33389,33390,33391,33392,33393,33394,33395,33396,33397,33398,33399,33400,33401,33402,33403,33404,33405,33406,33407,33408,33409,33410,33411,33412,33413,33414,33415,33416,33417,33418,33419,33420,33421,33422,33423,33424,33425,33426,33427,33428,33429,33430,33431,33432,33433,33434,33435,33436,33437,33438,33439,33440,33441,33442,33443,33444,33445,33446,33447,33448,33449,33450,33451,33452,33453,33454,33455,33456,33457,33458,33459,33460,33461,33462,33463,33464,33465,33466,33467,33468,33469,33470,33471,33472,33473,33474,33475,33476,33477,33478,33479,33480,33481,33482,33483,33484,33485,33486,33487,33488,33489,33490,33491,33492,33493,33494,33495,33496,33497,33498,33499,33500,33501,33502,33503,33504,33505,33506,33507,33508,33509,33510,33511,33512,33513,33514,33515,33516,33517,33518,33519,33520,33521,33522,33523,33524,33525,33526,33527,33528,33529,33530,33531,33532,33533,33534,33535,33536,33537,33538,33539,33540,33541,33542,33543,33544,33545,33546,33547,33548,33549,33550,33551,33552,33553,33554,33555,33556,33557,33558,33559,33560,33561,33562,33563,33564,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33575,33576,33577,33578,33579,33580,33581,33582,33583,33584,33585,33586,33587,33588,33589,33590,33591,33592,33593,33594,33595,33596,33597,33598,33599,33600,33601,33602],\"xaxis\":\"x\",\"y\":[143.4705352783203,123.05106353759766,107.05101776123047,108.44171905517578,122.8169174194336,121.76850891113281,113.71368408203125,87.77592468261719,90.22251892089844,88.10630798339844,86.9846420288086,101.73181915283203,90.74679565429688,85.08724975585938,85.96589660644531,85.75274658203125,85.54473114013672,96.69519805908203,110.09576416015625,87.2800521850586,84.19660949707031,89.8280029296875,87.68913269042969,90.7928695678711,101.72299194335938,105.47698211669922,88.97856140136719,88.4240493774414,85.09699249267578,85.88046264648438,89.96347045898438,99.89185333251953,104.4070053100586,90.4119644165039,89.29533386230469,85.37246704101562,84.30009460449219,93.36868286132812,100.60648345947266,106.79936218261719,83.44673156738281,86.6324462890625,82.09069061279297,84.14555358886719,88.83088684082031,95.16552734375,98.93617248535156,83.21124267578125,80.95712280273438,82.85628509521484,82.66677856445312,87.61869049072266,90.24176788330078,87.86746215820312,79.77078247070312,79.45378875732422,80.4876937866211,83.25372314453125,78.92453002929688,91.18254089355469,99.65396118164062,79.1343002319336,79.96436309814453,89.54107666015625,76.23529052734375,84.93840026855469,78.49108123779297,87.67351531982422,76.51217651367188,78.00006866455078,72.5278549194336,73.94557189941406,78.59648895263672,81.92027282714844,84.51439666748047,73.28364562988281,74.8603515625,77.51368713378906,74.88146209716797,77.54663848876953,77.72744750976562,87.29434967041016,70.33948516845703,72.5849609375,75.0550308227539,76.59510040283203,80.00035858154297,81.5316162109375,86.12068176269531,71.6190414428711,73.15776824951172,74.0392837524414,73.41653442382812,75.11376953125,81.22789001464844,82.11671447753906,74.25090789794922,72.93970489501953,72.16011810302734,72.364013671875,67.57865905761719,75.67301940917969,82.20233917236328,77.70729064941406,74.69953918457031,77.75743865966797,77.14358520507812,75.49164581298828,80.98306274414062,87.02392578125,74.98857879638672,71.53675842285156,73.3783950805664,73.77559661865234,71.65084075927734,78.31499481201172,84.98253631591797,71.02887725830078,66.6905746459961,67.08263397216797,66.52764129638672,68.40843963623047,76.69837188720703,79.77448272705078,72.88451385498047,70.82793426513672,71.7542953491211,70.55794525146484,72.07608795166016,79.3138656616211,81.64311218261719,69.46649932861328,70.06278991699219,69.96686553955078,64.4505615234375,65.7069320678711,74.51835632324219,76.88177490234375,69.78893280029297,68.78836059570312,67.0404052734375,65.2931137084961,67.92025756835938,80.5687484741211,83.76358032226562,71.32315826416016,71.71265411376953,70.83386993408203,71.11536407470703,71.68669891357422,79.77163696289062,86.65290832519531,71.5325698852539,72.19046020507812,75.58135986328125,70.75604248046875,72.65388488769531,80.54163360595703,90.66361999511719,76.00276184082031,71.32288360595703,72.4563980102539,67.69879150390625,72.1222152709961,84.36427307128906,79.14759063720703,68.87296295166016,67.49120330810547,67.41472625732422,68.27753448486328,67.17819213867188,75.68031311035156,78.03121948242188,68.2064437866211,65.39811706542969,67.42701721191406,65.25945281982422,68.38700103759766,76.75004577636719,79.327392578125,68.57296752929688,66.3747329711914,67.53755187988281,65.0588607788086,68.24407196044922,79.06564331054688,80.99201202392578,67.44715118408203,70.17035675048828,68.52826690673828,65.34007263183594,68.99226379394531,77.71126556396484,82.17658996582031,67.43939208984375,67.60607147216797,69.60425567626953,66.5331039428711,67.96737670898438,78.39190673828125,81.01715850830078,71.38983154296875,67.86286163330078,70.60407257080078,68.04347229003906,68.86071014404297,76.72862243652344,85.9046630859375,70.52104949951172,67.43727111816406,70.2548599243164,68.43685150146484,69.83773040771484,77.8873062133789,88.02265930175781,72.24785614013672,72.53410339355469,69.57058715820312,68.85063934326172,71.65531921386719,79.60810089111328,83.58695220947266,69.43974304199219,70.61149597167969,72.76496124267578,70.02726745605469,74.85842895507812,76.36797332763672,87.49889373779297,71.66409301757812,69.84403228759766,69.51558685302734,70.0814437866211,72.01927185058594,79.47240447998047,86.2339859008789,69.32919311523438,67.14505004882812,69.29257202148438,69.67774200439453,68.4262466430664,80.78142547607422,86.41460418701172,69.0379409790039,71.15516662597656,70.37020111083984,73.45686340332031,77.3526611328125,79.75785827636719,86.96475982666016,73.95130157470703,72.89082336425781,77.17843627929688,74.4230728149414,74.16238403320312,81.35958099365234,87.85711669921875,73.58734130859375,70.26445770263672,72.17427062988281,71.92671203613281,76.18880462646484,85.09768676757812,88.36312866210938,72.58731842041016,77.37471771240234,77.1290512084961,79.96324157714844,81.23934936523438,90.640380859375,90.25047302246094,75.97216033935547,81.85650634765625,77.15931701660156,77.95838165283203,85.84587860107422,89.03702545166016,97.44049072265625,74.41438293457031,78.73431396484375,86.67357635498047,83.2606430053711,86.76068115234375,96.59123229980469,100.72310638427734,80.8657455444336,76.49163055419922,81.5274429321289,76.48931884765625,82.36832427978516,88.67729949951172,100.61286926269531,83.32609558105469,80.87279510498047,82.03803253173828,81.92184448242188,85.62278747558594,89.97039031982422,94.78931427001953,79.43423461914062,80.7415771484375,77.49688720703125,84.81817626953125,79.70565032958984,89.92047119140625,98.84186553955078,86.8657455444336,80.13008117675781,86.41229248046875,83.52001190185547,87.55287170410156,91.17483520507812,96.61813354492188,87.92058563232422,80.52449798583984,83.28196716308594,82.46904754638672,82.45367431640625,99.59741973876953,104.68826293945312,84.34537506103516,84.19998931884766,81.49977111816406,82.69815063476562,86.16748046875,93.19585418701172,107.79017639160156,86.48548889160156,80.24330139160156,90.08810424804688,81.14826202392578,85.00981140136719,95.9523696899414,100.36405181884766,85.21480560302734,88.6435775756836,85.96500396728516,87.13846588134766,88.88153076171875,97.37663269042969,98.51026153564453,89.1866226196289,86.34542083740234,85.8936767578125,82.44070434570312,84.62076568603516,97.11314392089844,111.56613159179688,88.10338592529297,86.94366455078125,90.14173889160156,86.05488586425781,89.43207550048828,95.94517517089844,103.81814575195312,86.16545104980469,85.4930419921875,87.09906768798828,86.34162902832031,93.797607421875,121.91180419921875,139.6717987060547,159.2491912841797,149.5479736328125,190.50071716308594,177.45559692382812],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"index\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"XGBoost Forecasts\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('aaed44ed-6362-4378-9590-ee2dc5d86b2c');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nFrom the plot we can see that regression model with XGBoost performs better than ARIMAX model. Let's check the scores again.\n\n::: {.cell execution_count=22}\n``` {.python .cell-code code-fold=\"true\"}\nprint(f\"MAPE for XGBoost Model is: {mean_absolute_percentage_error(test_targets_xgboost, forecast_xgboost)}\")\nprint(f\"R2 Score for XGBoost Model is: {r2_score(test_targets_xgboost, forecast_xgboost)}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE for XGBoost Model is: 0.09307335208975362\nR2 Score for XGBoost Model is: 0.6931165642563528\n```\n:::\n:::\n\n\nScores surely seems better than our other forecasting attempts with STL-ARIMA and ARIMAX, though it can be said that this regression model tends not to undershoot. It is also more successful to capture New Year's Eve sales than other models.\n\nIt is still early to call this the best model, since we didn't tuned thoroughly the models' hyperparamaters and there are deep learning models to try. Now we'll move to the business case definition and after that, hyperparameter tuning of STL-ARIMA, ARIMAX, and XGBoost models. For deep learning part of this case please refer to [Part 2](/posts/book-forecasting/book_sales_forecasting_deep_learning_part.html).\n\n# Business Case Objective Function\n\nTo compare different models, so far, we have used Mean Absolute Percentage Error and R2 Scores. We have also plotted our forecasts and compared them with test targets. Now we will approach the problem from a different perspective.\n\nInstead of minimizing error, we will try to minimize our cost. It didn't matter whether a sales forecast is for example 20 units more or less; but having 20 more books in the inventory and opportunity cost of selling 20 less books may not be the same. Our custom function will define exactly that.\n\nOur assumptions are:\n\n- Every book is sold for €20\n- Book dimensions: 210x148x10mm (A5)\n- Storage cost: €100 per month\n- Warehouse dimensions: 2x2x3m\n- Warehouse space utilization: %15\n\nWith these assumptions, one warehouse can store approximately 6000 books for a storage fee of €100 per month. The scenario is that for every each book which the forecast undershoots the true sales, we have the opportunity cost of one book. If the forecast overshoots the true sales, then we can store the book in our warehouse by renting it. After renting the warehouse, each subsequent undershoot can be compensated from our inventory - effectively eliminating the opportunity cost but if storage limit is exceeded then we have to rent another warehouse increasing our monthly cost to €200.\n\nWe will use the function `cost_function()` to calculate this metric.\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\n# Define cost function for our case\ndef cost_function(storage, y_true, y_pred, book_price, storage_monthly_rent):\n  if storage == 0:\n    if y_pred <= y_true:\n      cost = book_price*(y_true - y_pred)\n      to_storage = 0\n      return cost, to_storage\n    elif y_pred > y_true:\n      cost = storage_monthly_rent/30\n      to_storage = y_pred - y_true\n      return cost, to_storage\n  elif storage > 0:\n    if y_pred <= y_true:\n      if (y_true - y_pred) < storage:\n        cost = storage_monthly_rent/30\n        to_storage = y_pred - y_true\n        return cost, to_storage\n      elif (y_true - y_pred) > storage:\n        cost = book_price*(y_true - y_pred - storage) + storage_monthly_rent/30\n        to_storage = -storage\n        return cost, to_storage\n    elif y_pred > y_true:\n      cost = storage_monthly_rent/30\n      to_storage = y_pred - y_true\n      return cost, to_storage\n```\n:::\n\n\n# Hyperparameter Tuning with Optuna\n\nNow we will tune and select hyperparameters for our models with the lowest cost. To reduce bias and get better generalization from the models, we will split the data to train - test - validation. While searching for the model with lowest cost using test data it may overfit. Therefore, we will tune the parameters using test dataset and after that check the performance using validation data.\n\nAlso earlier we were using test features for forecasts but feature matrix contains future `num_sold` values in it; thus, it wasn't a legitimate forecast. In this part we will also change the way forecasts are created so that the model uses its own forecasts as past values instead of real sales.\n\n## STL-ARIMA Tuning\n\n\n\n::: {.cell cache='true' execution_count=25}\n``` {.python .cell-code}\nimport optuna\nimport statsmodels\n\n# Create validation data for STL-Arima\ntrain_subset = subset[\"num_sold\"][0:730].reset_index().drop(columns=\"index\")\ntest_subset = subset[\"num_sold\"][730:1095].reset_index().drop(columns=\"index\")\nval_subset = subset[\"num_sold\"][1095:1461].reset_index().drop(columns=\"index\")\n\n# Define Optuna Objective\ndef stl_objective(trial):\n\n    # Select ranges for p, d, q orders\n    p_order = trial.suggest_int(\"p_order\", 0, 10, log=False)\n    d_order = trial.suggest_int(\"d_order\", 0, 2, log=False)\n    q_order = trial.suggest_int(\"q_order\", 0, 10, log=False)\n    robust_bool = trial.suggest_categorical(\"robust_mode\", [False, True])\n    trend_deg = trial.suggest_int(\"trend_deg\", 0, 1)\n    seasonal_deg = trial.suggest_int(\"seasonal_deg\", 0, 1)\n    low_pass_deg = trial.suggest_int(\"low_pass_deg\", 0, 1)\n    seasonal_jump = trial.suggest_int(\"seasonal_jump\", 1, 3)\n    trend_jump = trial.suggest_int(\"trend_jump\", 1, 3)\n    low_pass_jump = trial.suggest_int(\"low_pass_jump\", 1, 3)\n\n    # Define model with trial variables\n    stl_forecast_tuned = STLForecast(\n        train_subset,\n        model=statsmodels.tsa.arima.model.ARIMA,\n        model_kwargs={\"order\": (p_order, d_order, q_order), \"trend\": \"n\"},\n        period=365,\n        trend=731,\n        trend_deg=trend_deg,\n        seasonal_deg=seasonal_deg,\n        low_pass_deg=low_pass_deg,\n        seasonal_jump=seasonal_jump,\n        trend_jump=trend_jump,\n        low_pass_jump=low_pass_jump,\n        robust=robust_bool,\n    )\n\n    # Fit and forecast test data\n    model = stl_forecast_tuned.fit()\n    forecast = model.forecast(steps=365)\n\n    # Reset index of forecasts\n    forecast = forecast.reset_index().drop(columns=\"index\")\n\n    # Create a loop to calculate cumulative cost of the forecast\n    storage = 0\n    cumulative_cost = 0\n    book_price = 20\n    monthly_storage_cost = 100\n    for step in range(len(test_subset)):\n\n        # Get the cost and difference for storage for the current step\n        cost, to_storage = cost_function(\n            storage, test_subset[\"num_sold\"][step], forecast[0][step], book_price, monthly_storage_cost\n        )\n\n        # Add cost to cumulative cost and storage difference to storage\n        cumulative_cost += int(cost)\n        storage += int(to_storage)\n\n    total_cost = cumulative_cost + storage * book_price\n    return total_cost\n\n\n# Create Optuna Study and Minimize total_cost\nstl_study = optuna.create_study(direction=\"minimize\")\nstl_study.optimize(stl_objective, n_trials=20)\n```\n:::\n\n\nNow we'll create the model with best parameters to get tuned forecasts.\n\n::: {.cell execution_count=26}\n``` {.python .cell-code}\n# Get the parameters of the best model\nbest_stl_model_parameters = stl_study.best_params\n\n# Define STL-Arima model with the best parameters and train on test data\nstl_forecast = STLForecast(\n    test_subset,\n    model=statsmodels.tsa.arima.model.ARIMA,\n    model_kwargs={\n        \"order\": (\n            best_stl_model_parameters[\"p_order\"],\n            best_stl_model_parameters[\"d_order\"],\n            best_stl_model_parameters[\"q_order\"],\n        ),\n        \"trend\": \"n\",\n    },\n    period=365,\n    trend=1095,\n    robust=best_stl_model_parameters[\"robust_mode\"],\n    trend_deg=best_stl_model_parameters[\"trend_deg\"],\n    seasonal_deg=best_stl_model_parameters[\"seasonal_deg\"],\n    low_pass_deg=best_stl_model_parameters[\"low_pass_deg\"],\n    seasonal_jump=best_stl_model_parameters[\"seasonal_jump\"],\n    trend_jump=best_stl_model_parameters[\"trend_jump\"],\n    low_pass_jump=best_stl_model_parameters[\"low_pass_jump\"],\n)\n\n# Fit and forecast test data\ntuned_stl_model = stl_forecast.fit()\nforecast_stl_arima_tuned = tuned_stl_model.forecast(steps=366)\nforecast_stl_arima_tuned = forecast_stl_arima_tuned.reset_index().drop(columns=\"index\")\n\n# Create a loop to calculate cumulative cost of the forecast\nstorage = 0\ncumulative_cost = 0\nbook_price = 20\nmonthly_storage_cost = 100\nfor step in range(len(val_subset)):\n\n    # Get the cost and difference for storage for the current step\n    cost, to_storage = cost_function(\n        storage,\n        val_subset[\"num_sold\"][step],\n        forecast_stl_arima_tuned[0][step],\n        book_price,\n        monthly_storage_cost,\n    )\n\n    # Add cost to cumulative cost and storage difference to storage\n    cumulative_cost += int(cost)\n    storage += int(to_storage)\n\nstl_arima_total_cost = cumulative_cost + storage * book_price\n\n# Plot both test data and forecast from the model to compare them visually.\nplot_forecasts(val_subset, forecast_stl_arima_tuned, title=\"STL ARIMA Tuned Forecasts\");\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"086b119b-a5de-450b-ad33-e0a174246d1d\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"086b119b-a5de-450b-ad33-e0a174246d1d\")) {                    Plotly.newPlot(                        \"086b119b-a5de-450b-ad33-e0a174246d1d\",                        [{\"hovertemplate\":\"=Observed<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],\"xaxis\":\"x\",\"y\":[142.0,98.0,109.0,102.0,116.0,99.0,83.0,90.0,84.0,91.0,93.0,113.0,78.0,89.0,87.0,88.0,89.0,101.0,101.0,82.0,92.0,88.0,91.0,90.0,102.0,99.0,89.0,88.0,90.0,85.0,89.0,103.0,104.0,87.0,84.0,83.0,86.0,91.0,102.0,97.0,91.0,85.0,87.0,88.0,85.0,92.0,91.0,84.0,83.0,83.0,81.0,82.0,89.0,105.0,83.0,83.0,81.0,76.0,80.0,99.0,86.0,78.0,77.0,70.0,72.0,70.0,86.0,86.0,67.0,75.0,73.0,71.0,73.0,78.0,93.0,69.0,67.0,66.0,74.0,76.0,80.0,92.0,72.0,71.0,69.0,69.0,66.0,76.0,73.0,65.0,72.0,61.0,55.0,56.0,60.0,69.0,55.0,54.0,59.0,58.0,60.0,69.0,71.0,56.0,64.0,64.0,59.0,66.0,74.0,76.0,52.0,55.0,48.0,54.0,55.0,57.0,66.0,57.0,55.0,53.0,55.0,59.0,69.0,75.0,65.0,63.0,67.0,68.0,63.0,67.0,69.0,64.0,56.0,52.0,56.0,62.0,69.0,68.0,57.0,58.0,60.0,58.0,61.0,74.0,75.0,65.0,63.0,61.0,62.0,68.0,65.0,68.0,65.0,63.0,60.0,62.0,70.0,75.0,79.0,63.0,63.0,60.0,69.0,64.0,70.0,70.0,61.0,56.0,60.0,58.0,62.0,75.0,74.0,57.0,65.0,58.0,59.0,59.0,73.0,73.0,60.0,66.0,68.0,65.0,65.0,70.0,77.0,62.0,66.0,67.0,70.0,67.0,69.0,68.0,64.0,65.0,61.0,61.0,68.0,69.0,76.0,56.0,63.0,64.0,59.0,66.0,75.0,76.0,61.0,64.0,65.0,60.0,69.0,76.0,79.0,67.0,66.0,70.0,64.0,64.0,81.0,78.0,70.0,64.0,69.0,70.0,61.0,78.0,78.0,71.0,67.0,77.0,72.0,72.0,71.0,78.0,69.0,73.0,69.0,69.0,67.0,80.0,86.0,66.0,70.0,70.0,72.0,75.0,86.0,83.0,71.0,63.0,72.0,71.0,67.0,81.0,82.0,73.0,65.0,77.0,61.0,81.0,89.0,79.0,69.0,76.0,68.0,76.0,77.0,82.0,91.0,68.0,71.0,71.0,82.0,72.0,90.0,103.0,77.0,80.0,86.0,90.0,86.0,94.0,98.0,78.0,77.0,77.0,84.0,89.0,95.0,102.0,80.0,84.0,84.0,80.0,71.0,81.0,99.0,79.0,76.0,79.0,81.0,86.0,100.0,96.0,76.0,74.0,86.0,82.0,76.0,91.0,100.0,80.0,87.0,80.0,81.0,87.0,97.0,104.0,79.0,76.0,87.0,76.0,86.0,98.0,95.0,76.0,88.0,82.0,83.0,91.0,87.0,90.0,84.0,83.0,83.0,82.0,87.0,85.0,107.0,85.0,80.0,88.0,78.0,86.0,99.0,98.0,86.0,82.0,84.0,89.0,85.0,102.0,90.0,79.0,83.0,87.0,84.0,94.0,122.0,131.0,126.0,157.0,169.0,143.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],\"xaxis\":\"x\",\"y\":[140.00000000000006,117.00000000000011,102.00000000000018,105.00000000000021,120.00000000000024,124.00000000000024,101.00000000000023,101.0000000000003,84.00000000000038,93.00000000000038,99.0000000000004,105.00000000000044,117.00000000000048,88.00000000000044,92.00000000000041,89.00000000000041,91.00000000000041,97.00000000000048,104.00000000000055,113.00000000000068,94.00000000000081,93.00000000000078,87.00000000000077,95.00000000000078,86.00000000000078,100.00000000000084,111.00000000000088,89.00000000000095,93.00000000000101,85.00000000000092,80.00000000000082,90.00000000000087,101.00000000000092,112.00000000000098,87.00000000000105,88.00000000000114,89.00000000000122,87.00000000000122,99.00000000000122,102.00000000000122,96.00000000000122,92.0000000000013,94.00000000000135,95.00000000000132,86.00000000000131,88.00000000000135,100.00000000000139,107.00000000000144,92.00000000000146,92.00000000000142,88.00000000000138,90.00000000000152,85.00000000000168,95.0000000000016,107.00000000000152,86.00000000000158,85.00000000000163,84.00000000000169,83.00000000000175,91.00000000000172,99.00000000000168,103.00000000000183,89.00000000000198,77.00000000000198,83.00000000000199,92.00000000000199,83.00000000000199,99.00000000000206,102.00000000000212,88.00000000000209,83.00000000000205,92.00000000000206,81.00000000000209,95.0000000000022,97.0000000000023,101.0000000000022,81.00000000000212,89.00000000000226,86.00000000000239,84.00000000000229,82.00000000000219,91.00000000000232,91.00000000000244,85.00000000000252,78.00000000000259,82.00000000000257,86.00000000000256,79.0000000000026,89.00000000000263,105.00000000000269,74.00000000000276,84.00000000000274,87.00000000000274,78.00000000000269,76.00000000000263,91.00000000000273,95.00000000000283,85.00000000000286,80.00000000000287,80.00000000000288,77.0000000000029,79.00000000000297,95.00000000000306,94.00000000000303,78.00000000000298,84.00000000000304,80.0000000000031,77.0000000000032,79.0000000000033,96.00000000000331,99.00000000000333,82.0000000000033,91.00000000000327,86.00000000000327,92.00000000000327,94.00000000000334,102.00000000000342,105.00000000000337,88.0000000000033,73.00000000000341,77.00000000000352,81.00000000000354,93.00000000000354,101.00000000000355,105.00000000000357,78.00000000000362,84.00000000000368,77.00000000000371,80.00000000000375,81.00000000000377,93.0000000000038,83.00000000000381,75.00000000000382,78.00000000000387,71.00000000000391,67.00000000000395,82.000000000004,88.00000000000395,90.00000000000391,71.00000000000405,80.0000000000042,73.00000000000414,69.00000000000408,79.0000000000041,88.00000000000414,88.00000000000414,72.00000000000414,72.00000000000425,74.00000000000436,72.00000000000436,75.00000000000436,81.00000000000439,91.00000000000443,82.00000000000446,74.00000000000449,75.00000000000453,79.00000000000456,82.0000000000046,78.00000000000465,78.00000000000473,69.0000000000048,72.00000000000482,74.00000000000485,82.00000000000482,83.00000000000479,93.0000000000048,96.00000000000482,81.00000000000482,73.00000000000483,72.0000000000049,72.00000000000497,76.00000000000496,86.00000000000495,74.00000000000503,75.00000000000512,65.00000000000513,74.00000000000516,77.0000000000051,67.00000000000506,79.00000000000516,79.00000000000527,69.0000000000053,68.00000000000531,68.00000000000533,72.00000000000534,74.00000000000539,83.00000000000541,94.00000000000544,72.00000000000547,69.00000000000543,74.00000000000539,65.00000000000544,85.00000000000549,81.00000000000556,88.00000000000563,77.0000000000057,70.00000000000576,72.00000000000573,73.00000000000568,69.00000000000576,83.00000000000583,89.00000000000584,66.00000000000584,76.00000000000587,73.0000000000059,68.00000000000593,72.00000000000595,78.00000000000603,88.0000000000061,69.0000000000061,79.00000000000611,74.00000000000617,69.00000000000622,78.00000000000627,84.0000000000063,83.00000000000627,73.00000000000625,69.0000000000063,75.00000000000632,73.00000000000627,79.0000000000062,78.00000000000627,89.00000000000635,77.00000000000641,77.00000000000647,67.0000000000065,69.00000000000651,69.00000000000652,85.00000000000655,94.00000000000654,75.00000000000652,70.00000000000658,67.00000000000664,74.0000000000067,75.00000000000676,84.00000000000678,88.00000000000679,72.00000000000684,67.00000000000689,73.00000000000689,76.00000000000688,78.00000000000698,89.00000000000708,84.00000000000708,75.00000000000708,73.00000000000706,77.00000000000706,78.00000000000706,84.00000000000706,92.00000000000709,98.00000000000713,73.00000000000715,78.00000000000716,78.0000000000072,77.00000000000723,91.00000000000735,88.00000000000745,89.00000000000743,75.00000000000742,78.00000000000749,76.00000000000755,81.00000000000756,80.00000000000757,87.0000000000076,100.00000000000762,75.0000000000076,82.00000000000759,83.0000000000077,74.00000000000782,89.00000000000777,90.00000000000773,91.00000000000777,88.00000000000783,80.00000000000786,78.0000000000079,81.00000000000796,91.00000000000801,96.00000000000801,99.00000000000801,97.0000000000081,87.00000000000819,91.00000000000814,87.0000000000081,86.00000000000814,88.00000000000819,92.00000000000824,74.0000000000083,81.00000000000827,81.00000000000824,80.00000000000827,87.0000000000083,89.00000000000836,95.00000000000841,79.00000000000843,77.00000000000846,80.00000000000848,90.0000000000085,82.00000000000848,102.00000000000846,99.00000000000854,86.00000000000864,83.00000000000867,78.0000000000087,83.00000000000871,91.00000000000873,94.00000000000874,100.00000000000877,78.00000000000877,84.00000000000878,81.00000000000882,84.00000000000888,87.00000000000891,95.00000000000894,111.000000000009,93.00000000000907,84.00000000000902,87.000000000009,81.00000000000904,92.00000000000908,103.00000000000914,114.00000000000921,83.00000000000928,81.00000000000936,84.00000000000934,90.00000000000931,91.00000000000928,97.00000000000925,109.00000000000936,89.00000000000946,80.00000000000945,88.00000000000945,84.00000000000942,83.00000000000941,98.0000000000095,110.00000000000962,89.00000000000963,87.00000000000965,90.00000000000973,82.00000000000982,89.00000000000976,97.00000000000972,108.00000000000976,92.00000000000982,92.00000000000988,86.00000000000992,81.00000000001002,91.00000000001013,98.00000000001008,104.00000000001003,84.00000000001005,90.00000000001006,84.0000000000101,89.00000000001015,80.0000000000102,93.00000000001026,103.00000000001022,88.00000000001019,87.00000000001019,92.00000000001017,95.00000000001022,141.00000000001023,151.0000000000103,193.00000000001037,174.00000000001037,155.00000000001037,140.0000000000104],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"index\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"STL ARIMA Tuned Forecasts\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('086b119b-a5de-450b-ad33-e0a174246d1d');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\nCalculate the MAPE and R2 Scores and the total cost according to our metric.\n\n::: {.cell execution_count=27}\n``` {.python .cell-code code-fold=\"true\"}\nprint(f\"MAPE for Earlier STL-ARIMA Model is: {mean_absolute_percentage_error(test_subset_pretuning, forecast)}\")\nprint(f\"MAPE for Tuned STL-ARIMA is: {mean_absolute_percentage_error(val_subset['num_sold'], forecast_stl_arima_tuned[0])}\\n\")\nprint(f\"R2 Score for Earlier STL-ARIMA Model is: {r2_score(test_subset_pretuning, forecast)}\")\nprint(f\"R2 Score for Tuned STL-ARIMA is: {r2_score(val_subset['num_sold'], forecast_stl_arima_tuned[0])}\\n\")\n\nprint(f\"Total Cost for tuned STL-ARIMA is: €{stl_arima_total_cost:,.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE for Earlier STL-ARIMA Model is: 0.18646794982275017\nMAPE for Tuned STL-ARIMA is: 0.16666477586835288\n\nR2 Score for Earlier STL-ARIMA Model is: -0.6091132358371121\nR2 Score for Tuned STL-ARIMA is: 0.037154861121782456\n\nTotal Cost for tuned STL-ARIMA is: €72,474.00\n```\n:::\n:::\n\n\n## ARIMAX Tuning\n\n::: {.cell cache='true' execution_count=28}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"Optuna ARIMAX Tuning Code\"}\n# Create validation data for ARIMAX\ntrain_subset = subset[0:730]\ntest_subset = subset[730:1095]\nval_subset = subset[1095:1461]\n\n# Define endogenous and exogenous variables\ntrain_targets = pandas.DataFrame(train_subset[\"num_sold\"]).reset_index().drop(columns=\"index\")\ntrain_features = pandas.DataFrame(train_subset.drop(columns=\"num_sold\")).reset_index().drop(columns=\"index\")\n\ntest_targets = pandas.DataFrame(test_subset[\"num_sold\"]).reset_index().drop(columns=\"index\")\ntest_features = pandas.DataFrame(test_subset.drop(columns=\"num_sold\")).reset_index().drop(columns=\"index\")\n\nval_targets = pandas.DataFrame(val_subset[\"num_sold\"]).reset_index().drop(columns=\"index\")\nval_features = pandas.DataFrame(val_subset.drop(columns=\"num_sold\")).reset_index().drop(columns=\"index\")\n\n# Define Optuna Objective\ndef arimax_objective(trial):\n\n  # Select ranges for p, d, q orders\n  p_order = trial.suggest_int(\"p_order\", 0, 10, log=False)\n  d_order = trial.suggest_int(\"d_order\", 0, 2, log=False)\n  q_order = trial.suggest_int(\"q_order\", 0, 10, log=False)\n\n  # Trend order according to d_order differencing\n  trend_order = list(np.zeros(d_order))\n  trend_order.append(1)\n\n  # Define model with trial variables\n  arimax_model = statsmodels.tsa.arima.model.ARIMA(\n    order=(p_order, d_order, q_order),\n    endog=train_targets,\n    trend=trend_order,\n    exog=train_features\n  )\n  \n  # Fit the model\n  arimax_model_results = arimax_model.fit()\n\n  # Forecast for the last year\n  forecast_arimax_tuned = arimax_model_results.forecast(365, exog=test_features)\n  forecast_arimax_tuned = pandas.DataFrame(forecast_arimax_tuned).reset_index().drop(columns=\"index\")\n\n  # Create a loop to calculate cumulative cost of the forecast\n  storage = 0\n  cumulative_cost = 0\n  book_price = 20\n  monthly_storage_cost = 100\n  for step in range(len(test_targets)):\n\n    # Get the cost and difference for storage for the current step\n    cost, to_storage = cost_function(\n      storage, \n      test_targets[\"num_sold\"][step], \n      forecast_arimax_tuned[\"predicted_mean\"][step], \n      book_price, \n      monthly_storage_cost\n      )\n\n    # Add cost to cumulative cost and storage difference to storage\n    cumulative_cost += int(cost)\n    storage += int(to_storage)\n\n  total_cost = cumulative_cost + storage*book_price\n  return total_cost\n\n# Create Optuna Study and Minimize total_cost\narimax_study = optuna.create_study(direction=\"minimize\")\narimax_study.optimize(arimax_objective, n_trials=20)\n```\n:::\n\n\n::: {.cell cache='true' execution_count=29}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"Forecasts with Best ARIMAX Parameters Code\"}\n# Get the parameters of the best model\nbest_arimax_model_parameters = arimax_study.best_params\n\n# Trend order according to d_order differencing\ntrend_order = list(np.zeros(best_arimax_model_parameters[\"d_order\"]))\ntrend_order.append(1)\n\n# Define Arimax model with the best parameters and train on test data\narimax_model = statsmodels.tsa.arima.model.ARIMA(\n  order=(best_arimax_model_parameters[\"p_order\"],\n  best_arimax_model_parameters[\"d_order\"],\n  best_arimax_model_parameters[\"q_order\"]),\n  endog=test_targets,\n  trend=[0],\n  exog=test_features)\n\n# Fit the model\narimax_model_results = arimax_model.fit()\n\n# Forecast for the last year\nforecast_arimax_tuned = arimax_model_results.forecast(366, exog=val_features)\nforecast_arimax_tuned = pandas.DataFrame(forecast_arimax_tuned).reset_index().drop(columns=\"index\")\n\n# Create a loop to calculate cumulative cost of the forecast\nstorage = 0\ncumulative_cost = 0\nbook_price = 20\nmonthly_storage_cost = 100\nfor step in range(len(val_targets)):\n\n  # Get the cost and difference for storage for the current step\n  cost, to_storage = cost_function(\n    storage, \n    val_targets[\"num_sold\"][step], \n    forecast_arimax_tuned[\"predicted_mean\"][step], \n    book_price, \n    monthly_storage_cost)\n\n  # Add cost to cumulative cost and storage difference to storage\n  cumulative_cost += int(cost)\n  storage += int(to_storage)\n\narimax_total_cost = cumulative_cost + storage*book_price\n\n# Plot both test data and forecast from the model to compare them visually.\nplot_forecasts(val_targets, forecast_arimax_tuned, title=\"ARIMAX Tuned Forecasts\");\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"f94c92d7-0725-4c87-9a59-3447fec7ea98\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f94c92d7-0725-4c87-9a59-3447fec7ea98\")) {                    Plotly.newPlot(                        \"f94c92d7-0725-4c87-9a59-3447fec7ea98\",                        [{\"hovertemplate\":\"=Observed<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],\"xaxis\":\"x\",\"y\":[142.0,98.0,109.0,102.0,116.0,99.0,83.0,90.0,84.0,91.0,93.0,113.0,78.0,89.0,87.0,88.0,89.0,101.0,101.0,82.0,92.0,88.0,91.0,90.0,102.0,99.0,89.0,88.0,90.0,85.0,89.0,103.0,104.0,87.0,84.0,83.0,86.0,91.0,102.0,97.0,91.0,85.0,87.0,88.0,85.0,92.0,91.0,84.0,83.0,83.0,81.0,82.0,89.0,105.0,83.0,83.0,81.0,76.0,80.0,99.0,86.0,78.0,77.0,70.0,72.0,70.0,86.0,86.0,67.0,75.0,73.0,71.0,73.0,78.0,93.0,69.0,67.0,66.0,74.0,76.0,80.0,92.0,72.0,71.0,69.0,69.0,66.0,76.0,73.0,65.0,72.0,61.0,55.0,56.0,60.0,69.0,55.0,54.0,59.0,58.0,60.0,69.0,71.0,56.0,64.0,64.0,59.0,66.0,74.0,76.0,52.0,55.0,48.0,54.0,55.0,57.0,66.0,57.0,55.0,53.0,55.0,59.0,69.0,75.0,65.0,63.0,67.0,68.0,63.0,67.0,69.0,64.0,56.0,52.0,56.0,62.0,69.0,68.0,57.0,58.0,60.0,58.0,61.0,74.0,75.0,65.0,63.0,61.0,62.0,68.0,65.0,68.0,65.0,63.0,60.0,62.0,70.0,75.0,79.0,63.0,63.0,60.0,69.0,64.0,70.0,70.0,61.0,56.0,60.0,58.0,62.0,75.0,74.0,57.0,65.0,58.0,59.0,59.0,73.0,73.0,60.0,66.0,68.0,65.0,65.0,70.0,77.0,62.0,66.0,67.0,70.0,67.0,69.0,68.0,64.0,65.0,61.0,61.0,68.0,69.0,76.0,56.0,63.0,64.0,59.0,66.0,75.0,76.0,61.0,64.0,65.0,60.0,69.0,76.0,79.0,67.0,66.0,70.0,64.0,64.0,81.0,78.0,70.0,64.0,69.0,70.0,61.0,78.0,78.0,71.0,67.0,77.0,72.0,72.0,71.0,78.0,69.0,73.0,69.0,69.0,67.0,80.0,86.0,66.0,70.0,70.0,72.0,75.0,86.0,83.0,71.0,63.0,72.0,71.0,67.0,81.0,82.0,73.0,65.0,77.0,61.0,81.0,89.0,79.0,69.0,76.0,68.0,76.0,77.0,82.0,91.0,68.0,71.0,71.0,82.0,72.0,90.0,103.0,77.0,80.0,86.0,90.0,86.0,94.0,98.0,78.0,77.0,77.0,84.0,89.0,95.0,102.0,80.0,84.0,84.0,80.0,71.0,81.0,99.0,79.0,76.0,79.0,81.0,86.0,100.0,96.0,76.0,74.0,86.0,82.0,76.0,91.0,100.0,80.0,87.0,80.0,81.0,87.0,97.0,104.0,79.0,76.0,87.0,76.0,86.0,98.0,95.0,76.0,88.0,82.0,83.0,91.0,87.0,90.0,84.0,83.0,83.0,82.0,87.0,85.0,107.0,85.0,80.0,88.0,78.0,86.0,99.0,98.0,86.0,82.0,84.0,89.0,85.0,102.0,90.0,79.0,83.0,87.0,84.0,94.0,122.0,131.0,126.0,157.0,169.0,143.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],\"xaxis\":\"x\",\"y\":[61.93950835095857,55.730421511395505,56.51560929042998,62.17865054479227,57.9576820333274,35.56697392470864,30.050392168479995,22.218082857822655,15.345039055899342,17.10372450631877,21.16984385690514,22.314514242789976,7.622148692945991,0.35813171309532166,-0.7564665990651669,-2.5283505243717244,4.469850827201416,11.96282593172737,17.94032437159936,3.4747066851156383,4.402129821815919,3.678875935033437,3.969462546449666,15.654967239837525,24.07549052119601,32.89831060276905,22.62636735054666,21.754706212342395,23.88171361812138,25.46795316689243,28.53434328901258,37.42402839264059,42.90164637013406,28.06220303890596,24.782508650564814,23.953742643245697,23.13542607967294,29.63526393336513,34.71595396474912,37.253437806333665,20.909917230968766,19.019266255981705,14.062602599370162,16.92031519481189,14.586169579184906,24.611878438876158,26.703658168230245,13.3466774630563,8.234216750516643,5.876339179937786,3.6434263746623996,8.792486103181524,14.870946134935885,18.96556503996309,6.836717177034789,3.8169979090667017,2.131306318972303,6.311018096697596,8.321761790701851,20.21845752794487,28.52102307389435,13.499316903473943,12.035449633348781,9.419878468455183,9.752751066482462,15.157418016987357,25.678735953095416,29.50403502928204,11.077940428463098,11.304726993172935,9.135242609807687,8.031939254362662,15.673491740741206,19.566910443398477,26.449217864859463,9.366035786525337,10.325533143040463,6.401523002440301,5.3849788074130185,9.196998870332086,17.920667763191673,22.025621278230833,4.261360326012715,7.6306906806238475,3.178430588480197,4.110162611430393,11.846344065776359,18.858039625176083,26.467257443670245,11.008016498221666,7.257605432461506,2.0404292862248137,1.611617999191012,6.8032966958985615,13.618437671163136,20.405312941452234,4.730457683939649,10.349972866017897,6.174637947275872,4.454577648506876,10.305670289357698,19.08773655390936,22.800588615122518,12.125373241190074,4.880055159232131,5.857171075081985,3.7730761871198975,7.805377493216092,13.681461442575872,19.426981741680954,2.4419033066962372,2.511313135241121,-1.2227121739856976,-2.2099371645821106,6.183244248420478,13.239560799467263,18.874967753339714,7.46995993774231,7.686972867759886,9.07974662971234,8.285472100536193,12.680355436579536,20.258028418209445,26.22856037368491,8.586997869819651,4.569324825121715,2.629795690339566,5.2394627526304145,7.107844590697091,13.854163981996555,19.761376713850908,4.583709602041685,1.3842830855747164,3.724843010112011,-1.9823449166476472,4.971729958647966,11.34696947502564,19.96936989475932,5.226017638771118,4.028367980242483,0.7063163593790619,2.2918067813517062,3.938358146999902,11.392786072438902,20.45278194363055,-1.0355668795962012,-2.311451921382012,-0.06927514849309108,-2.8835818333987437,8.454094628601462,16.134798733630657,19.670402571248196,5.969415759411001,4.310946392334912,1.9571814261186051,0.5734993981755213,1.165806479505684,10.29481254034522,17.27948203053975,-0.3432119863273254,-4.5812490274471,-5.1445249893072456,-5.79566935380732,-2.520273114107871,9.175056280221009,9.719079981010351,-4.514190077863704,-7.236223271822863,-6.763976215352603,-9.038621241343623,-5.426091484801868,2.511110573015441,8.071089874734252,-8.93477563509027,-12.218930761732244,-9.39625025241409,-12.14035460247967,-6.692982297250634,5.180067685684447,8.875969793362104,-4.644028340903789,-5.795897567929535,-5.168828236601639,-4.830891760859478,-0.6838324118572752,6.885519056799231,12.624362623239614,-2.2966593721620976,-1.6706732881021722,-5.080123876183013,-7.8180371757660225,-1.8024382906537635,6.6186650793454165,11.154409912435325,-1.0911395204786882,-6.8476974086143025,-6.769136472470341,-7.943655804299027,-0.8049615073910377,6.028877540794815,10.977878749718489,-5.001144364631123,-5.677496561021002,-8.358876239731714,-10.0435456298463,-0.5541522163286264,5.849552016069077,12.620930752592246,0.6041264407760594,-1.9617622650499034,-1.1440702120157777,-0.7350621186155057,1.6045085648706174,5.771330939962112,11.144877542250054,-3.642139906905329,-6.433851923483747,-6.6495639806165325,-6.4658455169776925,1.1021932292434145,7.573215380190458,11.497869312317547,-3.2075246826831836,-3.5346558488215822,-6.748059522845463,-2.2891546361394317,-2.9048489096177703,8.641947472443908,12.323430890350046,0.31823624391676253,-3.4067622016677745,-4.639068378761097,-5.726850904010688,0.29771263065042697,7.270236739751803,11.995359690235503,0.5269480418795375,-2.079102652612165,-3.300980403894861,1.1193944746409266,3.4459886501547277,15.461930729820194,20.47734377643834,3.403386824595723,2.977543667835391,1.9035234340457192,1.7648207674177223,5.414119288902099,14.617160196269815,20.960008284656144,7.345701016945812,4.5683232032060985,0.2884992448237922,1.7962953707276352,6.166306701181689,13.944299057452481,22.832541091374345,2.6158989323246753,3.199497698571077,0.2675254114978741,2.776514024405652,5.350045107442719,13.426581900142091,18.380491619985182,3.1385290740046146,0.7716358398418655,-2.7649291255619155,1.9163515609718529,3.9781586835177793,13.712506061391295,22.561514880595556,5.2808190760609826,6.361787123238785,8.740947846023907,8.029996903247547,13.007446735262185,22.037356932245807,25.7970551405898,10.536249082453962,10.062366239104819,6.294340857252441,4.56335630811751,6.457023466850009,16.593218811504094,21.830700077797246,5.239186114991142,7.451684968895578,1.1385444089466674,2.917148435800209,6.268380893325905,17.560634742878907,21.116961241027408,4.983661517486076,3.381280747517306,2.205778527428168,1.1559291050001028,4.0672529988916,17.654841444434012,20.86425762666239,6.5112090536508305,8.967258992133521,5.873248849500487,8.431499750342107,13.420425397784907,19.979689687371124,21.709648906852216,6.09221740176501,5.786297988118697,2.6111793386500803,4.155363146005188,9.074138814795287,20.891386849568278,24.32908700243912,7.301405759120826,7.250016373056137,6.586074721648921,5.312570487476155,14.559800186279087,18.379086237028435,26.951125358175165,9.87039756552165,12.581617639072244,8.712801171125978,9.485135752815454,13.379999612137496,23.905054298045144,28.096892307653118,12.124489945586323,15.564708908569463,12.877088804708851,13.848597105806547,23.30981436719828,30.320563634182562,39.60835984530029,24.10323925122655,13.847419859783212,12.561981590414003,13.802165938670944,17.265055402619495,27.86737351405371,34.04501458908769,21.84639047469211,18.920844695975735,16.068786490387545,17.44096957733533,23.246203723503072,30.896371542405603,41.2224063626413,20.880721775855715,22.899578578601098,19.840145017540692,23.776581325102182,26.21488474922902,35.70566150441448,40.51113308844105,26.664734431112453,28.085233641961306,25.92006925697562,30.41003091055052,34.4386041660878,43.95202974255945,53.48285654465464,35.9463275351856,38.29388431390739,36.42262629887783,35.141368501518166],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"index\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"ARIMAX Tuned Forecasts\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('f94c92d7-0725-4c87-9a59-3447fec7ea98');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=30}\n``` {.python .cell-code code-fold=\"true\"}\nprint(f\"MAPE for Earlier ARIMAX model is: {mean_absolute_percentage_error(test_reg['num_sold'], forecast_reg)}\")\nprint(f\"MAPE for Tuned ARIMAX model is: {mean_absolute_percentage_error(val_targets['num_sold'], forecast_arimax_tuned['predicted_mean'])}\\n\")\n\nprint(f\"R2 Score for Earlier ARIMAX model is: {r2_score(test_reg['num_sold'], forecast_reg)}\")\nprint(f\"R2 Score for Tuned ARIMAX model is: {r2_score(val_targets['num_sold'], forecast_arimax_tuned['predicted_mean'])}\\n\")\n\nprint(f\"Total Cost for tuned ARIMAX model is: €{arimax_total_cost:,.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE for Earlier ARIMAX model is: 0.6281181684643169\nMAPE for Tuned ARIMAX model is: 0.8729066657738429\n\nR2 Score for Earlier ARIMAX model is: -7.921475722370131\nR2 Score for Tuned ARIMAX model is: -17.11867129518898\n\nTotal Cost for tuned ARIMAX model is: €484,567.00\n```\n:::\n:::\n\n\n## XGBoost Tuning\n\n::: {.cell cache='true' execution_count=31}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"XGBoost Optuna Tuning and regression_forecast Function\"}\nfrom xgboost import XGBRegressor\n\n# Create train - test- validation data\nsubset_xgboost_tuned = regression_matrix[\n    (regression_matrix[\"country_Germany\"] == 1)\n    & (regression_matrix[\"store_KaggleRama\"] == 1)\n    & (regression_matrix[\"product_Kaggle Recipe Book\"] == 1)\n]\nsubset_xgboost_tuned = subset_xgboost_tuned.drop(\n    columns=[\n        \"date\",\n        \"country_France\",\n        \"country_Germany\",\n        \"country_Poland\",\n        \"country_Italy\",\n        \"country_Spain\",\n        \"store_KaggleRama\",\n        \"product_Kaggle Getting Started\",\n        \"product_Kaggle Recipe Book\",\n        \"product_Kaggle for Kids: One Smart Goose\",\n    ]\n)\n\n# Define train - test - validation features and targets\ntrain_subset_xgboost_tuned, test_subset_xgboost_tuned = temporal_train_test_split(\n    subset_xgboost_tuned, train_size=730\n)\ntest_subset_xgboost_tuned, val_subset_xgboost_tuned = temporal_train_test_split(\n    test_subset_xgboost_tuned, test_size=366\n)\n\ntrain_targets_xgboost_tuned = (\n    pandas.DataFrame(train_subset_xgboost_tuned[\"num_sold\"])\n    .reset_index()\n    .drop(columns=\"index\")\n)\ntrain_features_xgboost_tuned = (\n    pandas.DataFrame(train_subset_xgboost_tuned.drop(columns=\"num_sold\"))\n    .reset_index()\n    .drop(columns=\"index\")\n)\n\ntest_targets_xgboost_tuned = (\n    pandas.DataFrame(test_subset_xgboost_tuned[\"num_sold\"])\n    .reset_index()\n    .drop(columns=\"index\")\n)\ntest_features_xgboost_tuned = (\n    pandas.DataFrame(test_subset_xgboost_tuned.drop(columns=\"num_sold\"))\n    .reset_index()\n    .drop(columns=\"index\")\n)\n\nval_targets_xgboost_tuned = (\n    pandas.DataFrame(val_subset_xgboost_tuned[\"num_sold\"])\n    .reset_index()\n    .drop(columns=\"index\")\n)\nval_features_xgboost_tuned = (\n    pandas.DataFrame(val_subset_xgboost_tuned.drop(columns=\"num_sold\"))\n    .reset_index()\n    .drop(columns=\"index\")\n)\n\n# Define forecasting function\ndef regression_forecast(\n    train_features, forecast_features, model, window_size, scaled=False\n):\n\n    # Add the last column of training data\n    history = train_features.tail(1)\n    forecasts = list()\n    for _ in range(len(forecast_features)):\n        prediction = model.predict(history.tail(1))\n\n        # Get features of data to be forecasted\n        next_sample = forecast_features.head(1)\n\n        # Shift previous values to 1 left\n        next_sample[list(range(window_size))] = (\n            history.tail(1)[list(range(window_size))].shift(-1, axis=1).values\n        )\n\n        # If scaled, inverse transform\n        if scaled != False:\n            next_sample[list(range(window_size))] = scaler.inverse_transform(\n                next_sample[list(range(window_size))]\n            )\n\n            # Add prediction to the right\n            next_sample[window_size - 1] = prediction\n\n            # Scale values again before forecasting\n            next_sample[list(range(window_size))] = scaler.transform(\n                next_sample[list(range(window_size))]\n            )\n        else:\n            # Add prediction to the right\n            next_sample[window_size - 1] = prediction\n\n        # Add last values to history\n        history = pandas.concat([history, next_sample], ignore_index=True, axis=0)\n\n        # Drop uppermost row from forecast features\n        forecast_features = forecast_features.drop(index=min(forecast_features.index))\n\n        # Add current prediction the forecasts as a seperate list\n        forecasts.append(prediction)\n\n    return pandas.DataFrame(forecasts, columns=[\"prediction\"])\n\n\n# Define Optuna Objective\ndef xgboost_objective(trial):\n\n    # Define trial variables\n    booster = trial.suggest_categorical(\"booster\", [\"gbtree\", \"gblinear\", \"dart\"])\n\n    if booster in [\"gbtree\", \"dart\"]:\n        eta = trial.suggest_float(\"eta\", 0, 1)\n        gamma = trial.suggest_int(\"gamma\", 0, 2)\n        max_depth = trial.suggest_int(\"max_depth\", 1, 50)\n        min_child_weight = trial.suggest_int(\"min_child_weight\", 0, 20)\n        subsample = trial.suggest_float(\"subsample\", 0.5, 1)\n        reg_lambda = trial.suggest_float(\"lambda\", 0, 5)\n        alpha = trial.suggest_float(\"alpha\", 0, 5)\n\n        # Define model with trial variables\n        xgboost_model = XGBRegressor(\n            booster=booster,\n            learning_rate=eta,\n            min_split_loss=gamma,\n            max_depth=max_depth,\n            min_child_weight=min_child_weight,\n            subsample=subsample,\n            reg_lambda=reg_lambda,\n            reg_alpha=alpha,\n        )\n    else:\n        reg_lambda = trial.suggest_float(\"lambda\", 0, 5)\n        alpha = trial.suggest_float(\"alpha\", 0, 5)\n        updater = trial.suggest_categorical(\"updater\", [\"shotgun\", \"coord_descent\"])\n        feature_selector = trial.suggest_categorical(\n            \"feature_selector\", [\"cyclic\", \"shuffle\"]\n        )\n\n        # Define model with trial variables\n        xgboost_model = XGBRegressor(\n            booster=booster,\n            reg_lambda=reg_lambda,\n            reg_alpha=alpha,\n            updater=updater,\n            feature_selector=feature_selector,\n        )\n\n    # Fit the model\n    xgboost_model.fit(train_features_xgboost_tuned, train_targets_xgboost_tuned)\n\n    # Forecast for the test data but this time using model's predicted values as past values\n    forecast_xgboost_tuned = regression_forecast(\n        train_features_xgboost_tuned, \n        test_features_xgboost_tuned, \n        xgboost_model, \n        7\n    )\n\n    # Create a loop to calculate cumulative cost of the forecast\n    storage = 0\n    cumulative_cost = 0\n    book_price = 20\n    monthly_storage_cost = 100\n    for step in range(len(test_targets_xgboost_tuned)):\n\n        # Get the cost and difference for storage for the current step\n        cost, to_storage = cost_function(\n            storage,\n            test_targets_xgboost_tuned[\"num_sold\"][step],\n            forecast_xgboost_tuned[\"prediction\"][step],\n            book_price,\n            monthly_storage_cost,\n        )\n\n        # Add cost to cumulative cost and storage difference to storage\n        cumulative_cost += int(cost)\n        storage += int(to_storage)\n\n    total_cost = cumulative_cost + storage * book_price\n    return total_cost\n\n\n# Create Optuna Study and Minimize total_cost\nxgboost_study = optuna.create_study(direction=\"minimize\")\nxgboost_study.optimize(xgboost_objective, n_trials=20)\n```\n:::\n\n\n::: {.cell execution_count=32}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"XGBoost Model with Best Parameters Code\"}\nbest_xgboost_model_parameters = xgboost_study.best_params\n\nif best_xgboost_model_parameters[\"booster\"] in [\"gbtree\", \"dart\"]:\n    # Define model with trial variables\n    xgboost_model = XGBRegressor(\n        booster=best_xgboost_model_parameters[\"booster\"],\n        learning_rate=best_xgboost_model_parameters[\"eta\"],\n        min_split_loss=best_xgboost_model_parameters[\"gamma\"],\n        max_depth=best_xgboost_model_parameters[\"max_depth\"],\n        min_child_weight=best_xgboost_model_parameters[\"min_child_weight\"],\n        subsample=best_xgboost_model_parameters[\"subsample\"],\n        reg_lambda=best_xgboost_model_parameters[\"lambda\"],\n        reg_alpha=best_xgboost_model_parameters[\"alpha\"]\n    )\nelse:\n    # Define model with trial variables\n    xgboost_model = XGBRegressor(\n        booster=best_xgboost_model_parameters[\"booster\"],\n        reg_lambda=best_xgboost_model_parameters[\"lambda\"],\n        reg_alpha=best_xgboost_model_parameters[\"alpha\"],\n        updater=best_xgboost_model_parameters[\"updater\"],\n        feature_selector=best_xgboost_model_parameters[\"feature_selector\"]\n    )\n\n# Fit the model with the best parameters\nxgboost_model.fit(test_features_xgboost_tuned, test_targets_xgboost_tuned)\n\n# Forecast for the test data but this time using model's predicted values as past values\nforecast_xgboost_tuned = regression_forecast(\n  test_features_xgboost_tuned,\n  val_features_xgboost_tuned,\n  xgboost_model,\n  7)\n\n# Create a loop to calculate cumulative cost of the forecast\nstorage = 0\ncumulative_cost = 0\nbook_price = 20\nmonthly_storage_cost = 100\nfor step in range(len(val_targets_xgboost_tuned)):\n\n    # Get the cost and difference for storage for the current step\n    cost, to_storage = cost_function(\n      storage, \n      val_targets_xgboost_tuned[\"num_sold\"][step], \n      forecast_xgboost_tuned[\"prediction\"][step], \n      book_price, \n      monthly_storage_cost)\n\n    # Add cost to cumulative cost and storage difference to storage\n    cumulative_cost += int(cost)\n    storage += int(to_storage)\n\nxgboost_total_cost = cumulative_cost + storage*book_price\n\n# Plot the forecasts compared to validation data\nplot_forecasts(val_targets_xgboost_tuned, forecast_xgboost_tuned, title=\"XGBoost Tuned Forecasts\");\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>                            <div id=\"24d6c88a-e1c6-47a0-944e-7d549fb9ad37\" class=\"plotly-graph-div\" style=\"height:500px; width:700px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"24d6c88a-e1c6-47a0-944e-7d549fb9ad37\")) {                    Plotly.newPlot(                        \"24d6c88a-e1c6-47a0-944e-7d549fb9ad37\",                        [{\"hovertemplate\":\"=Observed<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Observed\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Observed\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],\"xaxis\":\"x\",\"y\":[142.0,98.0,109.0,102.0,116.0,99.0,83.0,90.0,84.0,91.0,93.0,113.0,78.0,89.0,87.0,88.0,89.0,101.0,101.0,82.0,92.0,88.0,91.0,90.0,102.0,99.0,89.0,88.0,90.0,85.0,89.0,103.0,104.0,87.0,84.0,83.0,86.0,91.0,102.0,97.0,91.0,85.0,87.0,88.0,85.0,92.0,91.0,84.0,83.0,83.0,81.0,82.0,89.0,105.0,83.0,83.0,81.0,76.0,80.0,99.0,86.0,78.0,77.0,70.0,72.0,70.0,86.0,86.0,67.0,75.0,73.0,71.0,73.0,78.0,93.0,69.0,67.0,66.0,74.0,76.0,80.0,92.0,72.0,71.0,69.0,69.0,66.0,76.0,73.0,65.0,72.0,61.0,55.0,56.0,60.0,69.0,55.0,54.0,59.0,58.0,60.0,69.0,71.0,56.0,64.0,64.0,59.0,66.0,74.0,76.0,52.0,55.0,48.0,54.0,55.0,57.0,66.0,57.0,55.0,53.0,55.0,59.0,69.0,75.0,65.0,63.0,67.0,68.0,63.0,67.0,69.0,64.0,56.0,52.0,56.0,62.0,69.0,68.0,57.0,58.0,60.0,58.0,61.0,74.0,75.0,65.0,63.0,61.0,62.0,68.0,65.0,68.0,65.0,63.0,60.0,62.0,70.0,75.0,79.0,63.0,63.0,60.0,69.0,64.0,70.0,70.0,61.0,56.0,60.0,58.0,62.0,75.0,74.0,57.0,65.0,58.0,59.0,59.0,73.0,73.0,60.0,66.0,68.0,65.0,65.0,70.0,77.0,62.0,66.0,67.0,70.0,67.0,69.0,68.0,64.0,65.0,61.0,61.0,68.0,69.0,76.0,56.0,63.0,64.0,59.0,66.0,75.0,76.0,61.0,64.0,65.0,60.0,69.0,76.0,79.0,67.0,66.0,70.0,64.0,64.0,81.0,78.0,70.0,64.0,69.0,70.0,61.0,78.0,78.0,71.0,67.0,77.0,72.0,72.0,71.0,78.0,69.0,73.0,69.0,69.0,67.0,80.0,86.0,66.0,70.0,70.0,72.0,75.0,86.0,83.0,71.0,63.0,72.0,71.0,67.0,81.0,82.0,73.0,65.0,77.0,61.0,81.0,89.0,79.0,69.0,76.0,68.0,76.0,77.0,82.0,91.0,68.0,71.0,71.0,82.0,72.0,90.0,103.0,77.0,80.0,86.0,90.0,86.0,94.0,98.0,78.0,77.0,77.0,84.0,89.0,95.0,102.0,80.0,84.0,84.0,80.0,71.0,81.0,99.0,79.0,76.0,79.0,81.0,86.0,100.0,96.0,76.0,74.0,86.0,82.0,76.0,91.0,100.0,80.0,87.0,80.0,81.0,87.0,97.0,104.0,79.0,76.0,87.0,76.0,86.0,98.0,95.0,76.0,88.0,82.0,83.0,91.0,87.0,90.0,84.0,83.0,83.0,82.0,87.0,85.0,107.0,85.0,80.0,88.0,78.0,86.0,99.0,98.0,86.0,82.0,84.0,89.0,85.0,102.0,90.0,79.0,83.0,87.0,84.0,94.0,122.0,131.0,126.0,157.0,169.0,143.0],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"=Predicted<br>index=%{x}<br>Sales=%{y}<extra></extra>\",\"legendgroup\":\"Predicted\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"Predicted\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365],\"xaxis\":\"x\",\"y\":[146.32765197753906,130.78939819335938,128.71609497070312,129.097412109375,133.47607421875,136.34890747070312,124.15019989013672,108.03144073486328,79.93360137939453,67.42395782470703,66.92760467529297,77.3797836303711,95.93241119384766,98.11766052246094,92.50424194335938,88.10475158691406,79.53785705566406,81.85661315917969,89.04261016845703,101.41217803955078,94.62052154541016,95.0837631225586,90.25238037109375,84.4786376953125,88.39126586914062,94.5011978149414,105.16059112548828,93.82339477539062,94.51671600341797,89.09136962890625,85.73796844482422,90.12254333496094,97.92449188232422,107.86241149902344,93.82339477539062,94.51671600341797,89.54381561279297,84.74659729003906,90.92159271240234,101.96695709228516,107.1690902709961,93.82339477539062,93.80815124511719,86.43807220458984,85.41033172607422,86.65485382080078,100.17420959472656,106.71698760986328,93.37129211425781,91.25727081298828,86.36906433105469,83.4485855102539,89.67044067382812,96.96932220458984,105.70380401611328,93.33712005615234,87.52116394042969,81.72537994384766,84.68464660644531,88.61677551269531,96.36810302734375,105.70380401611328,93.33712005615234,89.5705337524414,83.08822631835938,84.06475067138672,89.4406967163086,97.99107360839844,106.07527923583984,92.08953094482422,87.4990234375,81.46916198730469,83.43705749511719,88.93746948242188,93.78282165527344,104.45621490478516,87.54168701171875,83.48343658447266,80.50508880615234,82.47298431396484,86.85755920410156,91.58792114257812,103.49214172363281,86.29407501220703,81.21365356445312,80.50508880615234,81.12400817871094,86.85755920410156,88.45303344726562,96.64232635498047,84.2647476196289,81.21365356445312,81.21365356445312,83.17508697509766,86.85755920410156,90.13092803955078,93.94050598144531,85.25611877441406,82.46514892578125,80.78063201904297,82.7420654296875,86.4245376586914,89.2454605102539,93.50748443603516,84.94756317138672,79.44293975830078,80.78063201904297,81.31913757324219,83.58074188232422,90.23641204833984,94.04598999023438,84.37023162841797,81.31913757324219,81.31913757324219,81.31913757324219,85.23176574707031,89.78396606445312,94.8058853149414,86.12149810791016,82.07903289794922,82.22064971923828,82.22064971923828,84.77043151855469,90.31400299072266,94.5760269165039,84.9002685546875,79.56209564208984,79.56209564208984,80.81359100341797,81.72345733642578,87.26702880859375,91.529052734375,81.0876693725586,78.03657531738281,78.65605926513672,76.69888305664062,79.44422149658203,86.29419708251953,86.96888732910156,77.37692260742188,77.71868896484375,77.54022216796875,72.35613250732422,76.88056945800781,81.52255249023438,88.64678192138672,72.85248565673828,77.71868896484375,77.21194458007812,72.35613250732422,72.35613250732422,83.35983276367188,88.1400375366211,72.14575958251953,77.71868896484375,71.80231475830078,71.8493881225586,72.35613250732422,83.35983276367188,88.80805969238281,71.56228637695312,76.62847137451172,71.21884155273438,71.26591491699219,71.77265930175781,83.89220428466797,85.51213836669922,71.56228637695312,71.21884155273438,71.21884155273438,71.26591491699219,71.77265930175781,79.9690170288086,84.12718963623047,71.0555419921875,71.21884155273438,71.21884155273438,71.26591491699219,72.20568084716797,80.40203857421875,85.55158996582031,71.48856353759766,71.65186309814453,71.65186309814453,71.69893646240234,72.57715606689453,80.77351379394531,84.93168640136719,71.86003875732422,72.7964096069336,71.54491424560547,71.59198760986328,72.0987319946289,80.29508972167969,84.45326232910156,72.49744415283203,70.20722198486328,71.54491424560547,71.59198760986328,72.0987319946289,79.75658416748047,84.90613555908203,70.84310913085938,71.00640869140625,71.00640869140625,71.05348205566406,71.56022644042969,79.75658416748047,83.91475677490234,71.42658233642578,71.58988189697266,71.58988189697266,71.63695526123047,72.1436996459961,80.34005737304688,85.48960876464844,71.42658233642578,71.58988189697266,71.58988189697266,71.63695526123047,73.39519500732422,80.34005737304688,84.49822998046875,71.42658233642578,71.58988189697266,71.58988189697266,72.75279235839844,70.8060073852539,80.34005737304688,86.02811431884766,71.965087890625,72.12838745117188,72.12838745117188,72.17546081542969,72.68220520019531,80.8785629272461,85.80236053466797,72.730712890625,72.89401245117188,73.6539077758789,73.70098114013672,74.20772552490234,84.691162109375,88.84933471679688,75.40621185302734,75.56951141357422,75.56951141357422,75.61658477783203,75.9817123413086,85.99404907226562,91.56562805175781,80.3053970336914,75.67109680175781,75.17474365234375,75.8814697265625,75.82403564453125,85.94087982177734,90.2436752319336,78.19818878173828,75.17474365234375,75.17474365234375,75.22181701660156,75.22181701660156,85.94087982177734,90.3532943725586,80.42107391357422,75.67109680175781,76.2974853515625,77.00421142578125,76.34455871582031,87.0636215209961,91.47603607177734,84.70108032226562,76.79383850097656,76.2974853515625,77.00421142578125,78.30599212646484,89.78627014160156,90.2505874633789,79.66724395751953,76.79383850097656,77.82268524169922,76.5711898803711,83.00576782226562,88.2744140625,89.92027282714844,80.46923828125,76.3539047241211,79.5203857421875,75.9448013305664,82.12057495117188,89.81208038330078,90.34584045410156,80.89480590820312,75.66364288330078,80.39845275878906,76.37036895751953,82.546142578125,89.35963439941406,91.96490478515625,86.55633544921875,77.28270721435547,82.01751708984375,77.98943328857422,84.76742553710938,91.43114471435547,96.74335479736328,88.65908813476562,78.36090850830078,82.38899230957031,83.77053833007812,85.1469497680664,91.376220703125,102.4620132446289,88.56698608398438,84.37175750732422,82.77799987792969,80.83326721191406,87.5236587524414,89.38825225830078,101.72257995605469,88.56698608398438,82.94805908203125,82.23949432373047,83.55420684814453,89.0440673828125,92.31743621826172,105.67864990234375,88.48058319091797,83.40016174316406,82.69159698486328,84.15642547607422,89.0440673828125,92.60584259033203,105.67864990234375,88.48058319091797,85.49002838134766,84.78146362304688,86.24629211425781,91.1339340209961,102.44010925292969,107.07518768310547,91.82194519042969,87.83255767822266,81.13679504394531,85.75798797607422,89.45603942871094,101.9317626953125,108.98815155029297,91.15933227539062,91.35233306884766,87.50626373291016,87.09362030029297,92.46956634521484,105.91051483154297,108.41082000732422,93.03553009033203,93.0202865600586,91.80119323730469,99.03336334228516,117.44799041748047,144.74871826171875,165.9617156982422,155.8668975830078,148.35169982910156,133.25071716308594],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"index\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Sales\"}},\"legend\":{\"title\":{\"text\":\"\"},\"tracegroupgap\":0},\"title\":{\"text\":\"XGBoost Tuned Forecasts\"},\"height\":500,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('24d6c88a-e1c6-47a0-944e-7d549fb9ad37');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=33}\n``` {.python .cell-code code-fold=\"true\"}\nprint(f\"MAPE for Earlier XGBoost model is: {mean_absolute_percentage_error(test_targets_xgboost, forecast_xgboost)}\")\nprint(f\"MAPE for Tuned XGBoost model is: {mean_absolute_percentage_error(val_targets_xgboost_tuned, forecast_xgboost_tuned)}\\n\")\n\nprint(f\"R2 Score for Earlier XGBoost model is: {r2_score(test_targets_xgboost, forecast_xgboost)}\")\nprint(f\"R2 Score for Tuned XGBoost model is: {r2_score(val_targets_xgboost_tuned, forecast_xgboost_tuned)}\\n\")\n\nprint(f\"Total Cost for Tuned XGBoost model is: €{xgboost_total_cost:,.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMAPE for Earlier XGBoost model is: 0.09307335208975362\nMAPE for Tuned XGBoost model is: 0.1657821900657774\n\nR2 Score for Earlier XGBoost model is: 0.6931165642563528\nR2 Score for Tuned XGBoost model is: 0.10051546999689664\n\nTotal Cost for Tuned XGBoost model is: €60,058.00\n```\n:::\n:::\n\n\nTuning for XGBoost model loses some accuracy due to the difference between lagged value features. Earlier model was using real targets as lagged value, while this tuned and correct model uses its own forecasts as lagged values. We'll create and tune deep learning models on\n\n<p align=\"center\">\n<p style=\"font-size:25px\">\n    <a href=\"/posts/book-forecasting/book_sales_forecasting_deep_learning_part.html\"><b>Part 2 -></b></a>\n</p>\n</p>\n\n",
    "supporting": [
      "book_sales_forecasting_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n        <script type=\"text/javascript\">\n        window.PlotlyConfig = {MathJaxConfig: 'local'};\n        if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n        if (typeof require !== 'undefined') {\n        require.undef(\"plotly\");\n        requirejs.config({\n            paths: {\n                'plotly': ['https://cdn.plot.ly/plotly-2.16.1.min']\n            }\n        });\n        require(['plotly'], function(Plotly) {\n            window._Plotly = Plotly;\n        });\n        }\n        </script>\n        \n"
      ]
    }
  }
}